!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).toGeoJSON={})}(this,(function(e){"use strict";function t(e){return e&&e.normalize&&e.normalize(),e&&e.textContent||""}const n=[["speed","speeds"],["course","courses"],["hAcc","hAccs"],["vAcc","vAccs"],["heartRate","heartRates"]];function o(e){const n={};if(e){const o=i(e,"line");if(o){const e=t(i(o,"color")),r=parseFloat(t(i(o,"opacity"))),s=parseFloat(t(i(o,"width")));e&&(n.stroke=e),isNaN(r)||(n["stroke-opacity"]=r),isNaN(s)||(n["stroke-width"]=96*s/25.4)}}return n}function r(e,n){const o={};let r,s;for(s=0;s<n.length;s++)r=i(e,n[s]),r&&(o[n[s]]=t(r));return o}function s(e){const n=r(e,["name","cmt","desc","type","time","keywords"]),o=e.getElementsByTagNameNS("http://www.garmin.com/xmlschemas/GpxExtensions/v3","*");for(let r=0;r<o.length;r++){const s=o[r];s.parentNode.parentNode===e&&(n[s.tagName.replace(":","_")]=t(s))}const s=e.getElementsByTagName("link");s.length&&(n.links=[]);for(let e=0;e<s.length;e++)n.links.push(Object.assign({href:s[e].getAttribute("href")},r(s[e],["text","type"])));return n}function i(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null}function l(e){const o=[parseFloat(e.getAttribute("lon")),parseFloat(e.getAttribute("lat"))],r=i(e,"ele"),s=i(e,"gpxtpx:hr")||i(e,"hr"),l=i(e,"time");let a;r&&(a=parseFloat(t(r)),isNaN(a)||o.push(a));const c={coordinates:o,time:l?t(l):null,heartRate:s?parseFloat(t(s)):null},g=i(e,"extensions");return null!==g&&n.map(e=>e[0]).filter(e=>"heartrate"!==e).forEach(e=>{const n=i(g,e);if(null!==n){const o=parseFloat(t(n));isNaN(o)||(c[e]=o)}}),c}function a(e){const t=c(e,"rtept");if(t.line)return{type:"Feature",properties:Object.assign(s(e),o(i(e,"extensions"))),geometry:{type:"LineString",coordinates:t.line}}}function c(e,t){const o=e.getElementsByTagName(t),r=[],s=[],i=o.length,a={};if(i<2)return{};for(let e=0;e<i;e++){const t=l(o[e]);r.push(t.coordinates),t.time&&s.push(t.time),n.map(e=>e[0]).forEach(n=>{(t[n]||a[n])&&(a[n]||(a[n]=Array(e).fill(null)),a[n].push(t[n]||null))})}const c={line:r,times:s};return n.forEach(e=>{a[e[0]]&&(c[e[1]]=a[e[0]]||[])}),c}function g(e){const t=e.getElementsByTagName("trkseg"),r=[],l=[],a={};let g;for(let e=0;e<t.length;e++)g=c(t[e],"trkpt"),g&&(g.line&&r.push(g.line),g.times&&g.times.length&&l.push(g.times),n.map(e=>e[1]).forEach(t=>{if(a[t]&&a[t].length||g[t]&&g[t].length){if(a[t]||(a[t]=[]),!a[t].length)for(let n=0;n<e;n++)a[t].push(Array(r[n].length).fill(null));g[t]&&g[t].length?a[t].push(g[t]):a[t].push(Array(g.line.length||0).fill(null))}}));if(0===r.length)return;const u=Object.assign(s(e),o(i(e,"extensions")));return l.length&&(u.coordTimes=1===r.length?l[0]:l),n.forEach(e=>{a[e[1]]&&a[e[1]].length&&(u[e[1]]=1===r.length?a[e[1]][0]:a[e[1]])}),{type:"Feature",properties:u,geometry:{type:1===r.length?"LineString":"MultiLineString",coordinates:1===r.length?r[0]:r}}}function*u(e){const t=e.getElementsByTagName("trk"),n=e.getElementsByTagName("rte"),o=e.getElementsByTagName("wpt");for(let e=0;e<t.length;e++){const n=g(t[e]);n&&(yield n)}for(let e=0;e<n.length;e++){const t=a(n[e]);t&&(yield t)}for(let e=0;e<o.length;e++)yield(i=o[e],{type:"Feature",properties:Object.assign(s(i),r(i,["sym"])),geometry:{type:"Point",coordinates:l(i).coordinates}});var i}const m=/\s*/g,f=/^\s*|\s*$/g,p=/\s+/;function h(e){if(!e||!e.length)return 0;let t=0;for(let n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n)|0;return t}function y(e,t){const n=e.getElementsByTagName(t);return n.length?n[0]:null}function d(e){return e.replace(m,"").split(",").map(parseFloat)}function N(e){return e.replace(f,"").split(p).map(d)}function T(e){if(void 0!==e.xml)return e.xml;if(e.tagName){let t=e.tagName;for(let n=0;n<e.attributes.length;n++)t+=e.attributes[n].name+e.attributes[n].value;for(let n=0;n<e.childNodes.length;n++)t+=T(e.childNodes[n]);return t}return"#text"===e.nodeName?(e.nodeValue||e.value||"").trim():"#cdata-section"===e.nodeName?e.nodeValue:""}const b=["Polygon","LineString","Point","Track","gx:Track"];function k(e){let t,n;return"#"===(e=e||"").substr(0,1)&&(e=e.substr(1)),6!==e.length&&3!==e.length||(t=e),8===e.length&&(n=parseInt(e.substr(0,2),16)/255,t="#"+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)),[t,isNaN(n)?void 0:n]}function E(e){let n=e.getElementsByTagName("coord");const o=[],r=[];0===n.length&&(n=e.getElementsByTagName("gx:coord"));for(let e=0;e<n.length;e++)o.push(t(n[e]).split(" ").map(parseFloat));const s=e.getElementsByTagName("when");for(let e=0;e<s.length;e++)r.push(t(s[e]));return{coords:o,times:r}}function x(e,n,o,r){const s=function e(n){let o,r,s,i,l;const a=[],c=[];if(y(n,"MultiGeometry"))return e(y(n,"MultiGeometry"));if(y(n,"MultiTrack"))return e(y(n,"MultiTrack"));if(y(n,"gx:MultiTrack"))return e(y(n,"gx:MultiTrack"));for(s=0;s<b.length;s++)if(r=n.getElementsByTagName(b[s]),r)for(i=0;i<r.length;i++)if(o=r[i],"Point"===b[s])a.push({type:"Point",coordinates:d(t(y(o,"coordinates")))});else if("LineString"===b[s])a.push({type:"LineString",coordinates:N(t(y(o,"coordinates")))});else if("Polygon"===b[s]){const e=o.getElementsByTagName("LinearRing"),n=[];for(l=0;l<e.length;l++)n.push(N(t(y(e[l],"coordinates"))));a.push({type:"Polygon",coordinates:n})}else if("Track"===b[s]||"gx:Track"===b[s]){const e=E(o);a.push({type:"LineString",coordinates:e.coords}),e.times.length&&c.push(e.times)}return{geoms:a,coordTimes:c}}(e);let i;const l={},a=t(y(e,"name")),c=t(y(e,"address"));let g=t(y(e,"styleUrl"));const u=t(y(e,"description")),m=y(e,"TimeSpan"),f=y(e,"TimeStamp"),p=y(e,"ExtendedData");let h=y(e,"LineStyle"),T=y(e,"PolyStyle");const x=y(e,"visibility");if(!s.geoms.length)return;if(a&&(l.name=a),c&&(l.address=c),g){"#"!==g[0]&&(g="#"+g),l.styleUrl=g,n[g]&&(l.styleHash=n[g]),o[g]&&(l.styleMapHash=o[g],l.styleHash=n[o[g].normal]);const e=r[l.styleHash];if(e){h||(h=y(e,"LineStyle")),T||(T=y(e,"PolyStyle"));const n=y(e,"IconStyle");if(n){const e=y(n,"Icon");if(e){const n=t(y(e,"href"));n&&(l.icon=n)}}}}if(u&&(l.description=u),m){const e=t(y(m,"begin")),n=t(y(m,"end"));l.timespan={begin:e,end:n}}if(f&&(l.timestamp=t(y(f,"when"))),h){const e=k(t(y(h,"color"))),n=e[0],o=e[1],r=parseFloat(t(y(h,"width")));n&&(l.stroke=n),isNaN(o)||(l["stroke-opacity"]=o),isNaN(r)||(l["stroke-width"]=r)}if(T){const e=k(t(y(T,"color"))),n=e[0],o=e[1],r=t(y(T,"fill")),s=t(y(T,"outline"));n&&(l.fill=n),isNaN(o)||(l["fill-opacity"]=o),r&&(l["fill-opacity"]="1"===r?l["fill-opacity"]||1:0),s&&(l["stroke-opacity"]="1"===s?l["stroke-opacity"]||1:0)}if(p){const e=p.getElementsByTagName("Data"),n=p.getElementsByTagName("SimpleData");for(i=0;i<e.length;i++)l[e[i].getAttribute("name")]=t(y(e[i],"value"));for(i=0;i<n.length;i++)l[n[i].getAttribute("name")]=t(n[i])}x&&(l.visibility=t(x)),s.coordTimes.length&&(l.coordTimes=1===s.coordTimes.length?s.coordTimes[0]:s.coordTimes);const S={type:"Feature",geometry:1===s.geoms.length?s.geoms[0]:{type:"GeometryCollection",geometries:s.geoms},properties:l};return e.getAttribute("id")&&(S.id=e.getAttribute("id")),S}function*S(e){const n={},o={},r={},s=e.getElementsByTagName("Placemark"),i=e.getElementsByTagName("Style"),l=e.getElementsByTagName("StyleMap");for(let e=0;e<i.length;e++){const t=h(T(i[e])).toString(16);n["#"+i[e].getAttribute("id")]=t,o[t]=i[e]}for(let e=0;e<l.length;e++){n["#"+l[e].getAttribute("id")]=h(T(l[e])).toString(16);const o=l[e].getElementsByTagName("Pair"),s={};for(let e=0;e<o.length;e++)s[t(y(o[e],"key"))]=t(y(o[e],"styleUrl"));r["#"+l[e].getAttribute("id")]=s}for(let e=0;e<s.length;e++){const t=x(s[e],n,r,o);t&&(yield t)}}e.gpx=function(e){return{type:"FeatureCollection",features:Array.from(u(e))}},e.gpxGen=u,e.kml=function(e){return{type:"FeatureCollection",features:Array.from(S(e))}},e.kmlGen=S,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=togeojson.umd.js.map
