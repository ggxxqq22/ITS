{"version":3,"sources":["../../../src/lib/encode-wkt.js"],"names":["encodeWKT","gj","type","geometry","pairWKT","c","join","ringWKT","r","map","ringsWKT","wrapParens","multiRingsWKT","s","coordinates","geometries","Error"],"mappings":"AAMA,eAAe,SAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACpC,MAAIA,EAAE,CAACC,IAAH,KAAY,SAAhB,EAA2B;AACzBD,IAAAA,EAAE,GAAGA,EAAE,CAACE,QAAR;AACD;;AAED,WAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,WAAOA,CAAC,CAACC,IAAF,CAAO,GAAP,CAAP;AACD;;AAED,WAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,WAAOA,CAAC,CAACC,GAAF,CAAML,OAAN,EAAeE,IAAf,CAAoB,IAApB,CAAP;AACD;;AAED,WAASI,QAAT,CAAkBF,CAAlB,EAAqB;AACnB,WAAOA,CAAC,CACLC,GADI,CACAF,OADA,EAEJE,GAFI,CAEAE,UAFA,EAGJL,IAHI,CAGC,IAHD,CAAP;AAID;;AAED,WAASM,aAAT,CAAuBJ,CAAvB,EAA0B;AACxB,WAAOA,CAAC,CACLC,GADI,CACAC,QADA,EAEJD,GAFI,CAEAE,UAFA,EAGJL,IAHI,CAGC,IAHD,CAAP;AAID;;AAED,WAASK,UAAT,CAAoBE,CAApB,EAAuB;AACrB,WAAO,MAAMA,CAAN,GAAU,GAAjB;AACD;;AAED,UAAQZ,EAAE,CAACC,IAAX;AACE,SAAK,OAAL;AACE,aAAO,YAAYE,OAAO,CAACH,EAAE,CAACa,WAAJ,CAAnB,GAAsC,GAA7C;;AACF,SAAK,YAAL;AACE,aAAO,iBAAiBP,OAAO,CAACN,EAAE,CAACa,WAAJ,CAAxB,GAA2C,GAAlD;;AACF,SAAK,SAAL;AACE,aAAO,cAAcJ,QAAQ,CAACT,EAAE,CAACa,WAAJ,CAAtB,GAAyC,GAAhD;;AACF,SAAK,YAAL;AACE,aAAO,iBAAiBP,OAAO,CAACN,EAAE,CAACa,WAAJ,CAAxB,GAA2C,GAAlD;;AACF,SAAK,cAAL;AACE,aAAO,mBAAmBF,aAAa,CAACX,EAAE,CAACa,WAAJ,CAAhC,GAAmD,GAA1D;;AACF,SAAK,iBAAL;AACE,aAAO,sBAAsBJ,QAAQ,CAACT,EAAE,CAACa,WAAJ,CAA9B,GAAiD,GAAxD;;AACF,SAAK,oBAAL;AACE,aAAO,yBAAyBb,EAAE,CAACc,UAAH,CAAcN,GAAd,CAAkBT,SAAlB,EAA6BM,IAA7B,CAAkC,IAAlC,CAAzB,GAAmE,GAA1E;;AACF;AACE,YAAM,IAAIU,KAAJ,CAAU,wEAAV,CAAN;AAhBJ;AAkBD","sourcesContent":["// Fork of https://github.com/mapbox/wellknown under ISC license (MIT/BSD-2-clause equivalent)\n/* eslint-disable prefer-template */\n\n/**\n * Stringifies a GeoJSON object into WKT\n */\nexport default function encodeWKT(gj) {\n  if (gj.type === 'Feature') {\n    gj = gj.geometry;\n  }\n\n  function pairWKT(c) {\n    return c.join(' ');\n  }\n\n  function ringWKT(r) {\n    return r.map(pairWKT).join(', ');\n  }\n\n  function ringsWKT(r) {\n    return r\n      .map(ringWKT)\n      .map(wrapParens)\n      .join(', ');\n  }\n\n  function multiRingsWKT(r) {\n    return r\n      .map(ringsWKT)\n      .map(wrapParens)\n      .join(', ');\n  }\n\n  function wrapParens(s) {\n    return '(' + s + ')';\n  }\n\n  switch (gj.type) {\n    case 'Point':\n      return 'POINT (' + pairWKT(gj.coordinates) + ')';\n    case 'LineString':\n      return 'LINESTRING (' + ringWKT(gj.coordinates) + ')';\n    case 'Polygon':\n      return 'POLYGON (' + ringsWKT(gj.coordinates) + ')';\n    case 'MultiPoint':\n      return 'MULTIPOINT (' + ringWKT(gj.coordinates) + ')';\n    case 'MultiPolygon':\n      return 'MULTIPOLYGON (' + multiRingsWKT(gj.coordinates) + ')';\n    case 'MultiLineString':\n      return 'MULTILINESTRING (' + ringsWKT(gj.coordinates) + ')';\n    case 'GeometryCollection':\n      return 'GEOMETRYCOLLECTION (' + gj.geometries.map(encodeWKT).join(', ') + ')';\n    default:\n      throw new Error('stringify requires a valid GeoJSON Feature or geometry object as input');\n  }\n}\n"],"file":"encode-wkt.js"}