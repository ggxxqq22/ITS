{"ast":null,"code":"var _jsxFileName = \"/home/zhiguangda/ITS/deckgl/src/components/streamgraph/main.js\";\nimport './stream.css';\nimport * as d3 from 'd3';\nimport React, { useState, useCallback, useEffect, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useData } from './useData';\nimport { AxisBottom } from \"../city/AxisBottom\";\nimport { AxisLeft } from \"../city/AxisLeft\";\nimport { Marks } from \"./Marks\";\nimport { ColorLegend } from \"../city/ColorLegend\";\nconst width = 960;\nconst height = 500;\nconst margin = {\n  top: 20,\n  right: 200,\n  bottom: 65,\n  left: 150\n};\nvar innerWidth = width - margin.right - margin.left;\nvar innerHeight = height - margin.top - margin.bottom;\nconst xAxisLabel = 'Time';\nconst yAxisLabel = 'Light';\nconst siFormat = d3.format('.2s');\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 70;\n\nconst xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B'); //画河流图需要data和keys\n\n/*\n*data format data is a list\n* [{\n*   xvalue:x\n*   key1: k1\n*   key2: k2\n*   ...\n* }\n* ,\n* {\n*   ...\n* }\n* ...\n* ]\n*\n* keys 就是data中所有的key的集合\n*\n* */\n\n\nexport function StreamG() {\n  const [data, keys] = useData();\n  const [start, setStart] = useState(19);\n\n  var xValue = function (d) {\n    return new Date(d.date).getHours();\n  };\n\n  var xScale = d3.scaleLinear();\n  var yScale = d3.scaleLinear(); // var xAxisMajor = d3.axisBottom().scale(xScale);\n  // var xAxisMinor = d3.axisBottom().scale(xScale).ticks(50);\n  //设置标志列表\n\n  const circleRadius = 7;\n  const colorLegendLabel = 'city';\n  const colorScale = d3.scaleOrdinal();\n  let range = [];\n\n  if (keys) {\n    keys.forEach((d, i) => {\n      range.push(d3.interpolateSpectral(i / 8));\n    });\n    colorScale.domain(keys).range(range);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'stream',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: height,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: `translate(${margin.left},${margin.top})`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: `translate(${innerWidth + 60}, 60)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    x: 35,\n    y: -25,\n    className: \"axis-label\",\n    textAnchor: \"middle\",\n    style: {\n      'fill': '#FFFFFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, colorLegendLabel), /*#__PURE__*/React.createElement(ColorLegend, {\n    tickSpacing: 22,\n    tickSize: 10,\n    tickTextOffset: 12,\n    tickSize: circleRadius,\n    colorScale: colorScale // onHover={setHoveredValue}\n    // hoveredValue={hoveredValue}\n    // fadeOpacity={fadeOpacity}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Marks, {\n    data: data,\n    start: start,\n    keys: keys,\n    xScale: xScale,\n    xValue: xValue,\n    yScale: yScale,\n    margin: margin,\n    innerHeight: innerHeight,\n    innerWidth: innerWidth,\n    callback: () => {\n      if (start + 24 < 139) {\n        console.log(data.length, start + 24);\n        setStart(start + 24);\n      } else {\n        setStart(19);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    xScale: xScale,\n    innerHeight: innerHeight,\n    tickFormat: xAxisTickFormat,\n    tickOffset: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    className: \"axis-label\",\n    textAnchor: \"middle\",\n    transform: `translate(${-yAxisLabelOffset},${innerHeight / 2}) rotate(-90)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, yAxisLabel), /*#__PURE__*/React.createElement(\"text\", {\n    className: \"axis-label\",\n    x: innerWidth / 2,\n    y: innerHeight + xAxisLabelOffset,\n    textAnchor: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, xAxisLabel))));\n}","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/streamgraph/main.js"],"names":["d3","React","useState","useCallback","useEffect","Fragment","ReactDOM","useData","AxisBottom","AxisLeft","Marks","ColorLegend","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","xAxisLabel","yAxisLabel","siFormat","format","xAxisLabelOffset","yAxisLabelOffset","xAxisTickFormat","tickValue","replace","StreamG","data","keys","start","setStart","xValue","d","Date","date","getHours","xScale","scaleLinear","yScale","circleRadius","colorLegendLabel","colorScale","scaleOrdinal","range","forEach","i","push","interpolateSpectral","domain","console","log","length"],"mappings":"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","sourcesContent":["import './stream.css'\nimport * as d3 from 'd3'\nimport React, { useState, useCallback, useEffect,Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport {useData} from './useData'\nimport {AxisBottom} from \"../city/AxisBottom\";\nimport {AxisLeft} from \"../city/AxisLeft\";\nimport {Marks} from \"./Marks\"\nimport {ColorLegend} from \"../city/ColorLegend\";\n\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 200, bottom: 65, left: 150 };\nvar innerWidth = width - margin.right - margin.left;\nvar innerHeight = height - margin.top - margin.bottom;\nconst xAxisLabel = 'Time';\nconst yAxisLabel='Light';\nconst siFormat = d3.format('.2s');\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 70;\nconst xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n//画河流图需要data和keys\n/*\n*data format data is a list\n* [{\n*   xvalue:x\n*   key1: k1\n*   key2: k2\n*   ...\n* }\n* ,\n* {\n*   ...\n* }\n* ...\n* ]\n*\n* keys 就是data中所有的key的集合\n*\n* */\n\nexport function StreamG(){\n\n\n    const [data,keys]=useData();\n    const [start,setStart]=useState(19)\n\n\n\n\n\n    var xValue = function (d) { return new Date(d.date).getHours(); };\n    var xScale = d3.scaleLinear();\n    var yScale = d3.scaleLinear();\n\n\n    // var xAxisMajor = d3.axisBottom().scale(xScale);\n    // var xAxisMinor = d3.axisBottom().scale(xScale).ticks(50);\n//设置标志列表\n    const circleRadius = 7;\n    const colorLegendLabel='city'\n    const colorScale = d3.scaleOrdinal()\n    let range=[];\n    if(keys){\n        keys.forEach((d,i)=>{\n                range.push(d3.interpolateSpectral(i/8))\n            }\n        )\n        colorScale.domain(keys)\n            .range(range)\n    }\n\n\n\n\n\n\n\n\n    return <div className={'stream'} >\n        <svg height={height} width={width} >\n            <g transform={`translate(${margin.left},${margin.top})`}>\n                <g transform={`translate(${innerWidth + 60}, 60)`}>\n                    <text x={35} y={-25} className=\"axis-label\" textAnchor=\"middle\" style={{'fill':'#FFFFFF'}}>\n                        {colorLegendLabel}\n                    </text>\n                    <ColorLegend\n                        tickSpacing={22}\n                        tickSize={10}\n                        tickTextOffset={12}\n                        tickSize={circleRadius}\n                        colorScale={colorScale}\n                        // onHover={setHoveredValue}\n                        // hoveredValue={hoveredValue}\n                        // fadeOpacity={fadeOpacity}\n                    />\n                </g>\n                <Marks data={data}\n                       start={start}\n                       keys={keys}\n                       xScale={xScale}\n                       xValue={xValue}\n                       yScale={yScale}\n                       margin={margin}\n                       innerHeight={innerHeight}\n                       innerWidth={innerWidth}\n                       callback={()=>{\n                           if(start+24<139){\n                               console.log(data.length,start+24)\n                               setStart(start+24)\n                           }\n                           else{\n                               setStart(19)\n                           }\n                       }}\n                >\n\n                </Marks>\n                <AxisBottom\n                    xScale={xScale}\n                    innerHeight={innerHeight}\n                    tickFormat={xAxisTickFormat}\n                    tickOffset={2}\n                />\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(${-yAxisLabelOffset},${innerHeight /\n                    2}) rotate(-90)`}\n                >\n                    {yAxisLabel}\n                </text>\n                {/*<AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />*/}\n                <text\n                    className=\"axis-label\"\n                    x={innerWidth / 2}\n                    y={innerHeight + xAxisLabelOffset}\n                    textAnchor=\"middle\"\n                >\n                    {xAxisLabel}\n                </text>\n            </g>\n        </svg>\n    </div>\n\n\n}\n"]},"metadata":{},"sourceType":"module"}