{"ast":null,"code":"var _jsxFileName = \"/home/zhiguangda/ITS/deckgl/src/components/city/AxisBottom.js\";\nimport React from 'react';\nexport const AxisBottom = ({\n  xScale,\n  innerHeight,\n  tickFormat,\n  tickOffset = 3\n}) => xScale.ticks().map(tickValue => /*#__PURE__*/React.createElement(\"g\", {\n  className: \"tick\",\n  key: tickValue,\n  transform: `translate(${xScale(tickValue)},0)`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"line\", {\n  y2: innerHeight,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(\"text\", {\n  style: {\n    textAnchor: 'middle'\n  },\n  dy: \".71em\",\n  y: innerHeight + tickOffset,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n}, tickFormat(tickValue))));","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/city/AxisBottom.js"],"names":["React","AxisBottom","xScale","innerHeight","tickFormat","tickOffset","ticks","map","tickValue","textAnchor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA,UAAU,GAAG;AAAhD,CAAD,KACtBH,MAAM,CAACI,KAAP,GAAeC,GAAf,CAAmBC,SAAS,iBAExB;AACI,EAAA,SAAS,EAAC,MADd;AAEI,EAAA,GAAG,EAAEA,SAFT;AAGI,EAAA,SAAS,EAAG,aAAYN,MAAM,CAACM,SAAD,CAAY,KAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKI;AAAM,EAAA,EAAE,EAAEL,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,eAMI;AAAM,EAAA,KAAK,EAAE;AAAEM,IAAAA,UAAU,EAAE;AAAd,GAAb;AAAuC,EAAA,EAAE,EAAC,OAA1C;AAAkD,EAAA,CAAC,EAAEN,WAAW,GAAGE,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,UAAU,CAACI,SAAD,CADf,CANJ,CAFJ,CADG","sourcesContent":["import React from 'react';\nexport const AxisBottom = ({ xScale, innerHeight, tickFormat, tickOffset = 3 }) =>\n    xScale.ticks().map(tickValue => (\n\n        <g\n            className=\"tick\"\n            key={tickValue}\n            transform={`translate(${xScale(tickValue)},0)`}\n        >\n            <line y2={innerHeight} />\n            <text style={{ textAnchor: 'middle' }} dy=\".71em\" y={innerHeight + tickOffset}>\n                {tickFormat(tickValue)}\n            </text>\n        </g>\n    ));\n"]},"metadata":{},"sourceType":"module"}