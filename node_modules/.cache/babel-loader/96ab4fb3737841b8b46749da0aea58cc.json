{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport parseWKB from './lib/parse-wkb';\nvar VERSION = typeof \"2.3.9\" !== 'undefined' ? \"2.3.9\" : 'latest';\nexport var WKBWorkerLoader = {\n  id: 'wkb',\n  name: 'WKB',\n  category: 'geometry',\n  version: VERSION,\n  extensions: ['wkb'],\n  mimeTypes: [],\n  options: {\n    wkb: {\n      workerUrl: \"https://unpkg.com/@loaders.gl/wkb@\".concat(VERSION, \"/dist/wkb-loader.worker.js\")\n    }\n  }\n};\nexport var WKBLoader = _objectSpread(_objectSpread({}, WKBWorkerLoader), {}, {\n  parse: function () {\n    var _parse = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseWKB(arrayBuffer));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function parse(_x, _x2) {\n      return _parse.apply(this, arguments);\n    }\n\n    return parse;\n  }(),\n  parseSync: parseWKB\n});","map":{"version":3,"sources":["../../src/wkb-loader.js"],"names":["VERSION","WKBWorkerLoader","id","name","category","version","extensions","mimeTypes","options","wkb","workerUrl","WKBLoader","parse","parseWKB","parseSync"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAA,QAAA,MAAA,iBAAA;AAIA,IAAMA,OAAO,GAAG,OAAA,OAAA,KAAA,WAAA,GAAA,OAAA,GAAhB,QAAA;AAGA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,EAAE,EAD2B,KAAA;AAE7BC,EAAAA,IAAI,EAFyB,KAAA;AAG7BC,EAAAA,QAAQ,EAHqB,UAAA;AAI7BC,EAAAA,OAAO,EAJsB,OAAA;AAK7BC,EAAAA,UAAU,EAAE,CALiB,KAKjB,CALiB;AAM7BC,EAAAA,SAAS,EANoB,EAAA;AAO7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AACHC,MAAAA,SAAS,EAAA,qCAAA,MAAA,CAAA,OAAA,EAAA,4BAAA;AADN;AADE;AAPoB,CAAxB;AAeP,OAAO,IAAMC,SAAS,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA;AAEpBC,EAAAA,KAAK,EAAA,YAAA;AAAA,QAAA,MAAA,GAAA,iBAAA,CAAA,mBAAA,CAAA,IAAA,CAAE,SAAA,OAAA,CAAA,WAAA,EAAA,OAAA,EAAA;AAAA,aAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,eAAA,CAAA,EAAA;AAAA,kBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,iBAAA,CAAA;AAAA,qBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAAgCC,QAAQ,CAAxC,WAAwC,CAAxC,CAAA;;AAAA,iBAAA,CAAA;AAAA,iBAAA,KAAA;AAAA,qBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,OAAA,EAAA,OAAA,CAAA;AAAF,KAAA,CAAA,CAAA;;AAAA,aAAA,KAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,aAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;;AAAA,WAAA,KAAA;AAFe,GAEf,EAFe;AAGpBC,EAAAA,SAAS,EAAED;AAHS,CAAA,CAAf","sourcesContent":["/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n/** @typedef {import('@loaders.gl/loader-utils').WorkerLoaderObject} WorkerLoaderObject */\nimport parseWKB from './lib/parse-wkb';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/** @type {WorkerLoaderObject} */\nexport const WKBWorkerLoader = {\n  id: 'wkb',\n  name: 'WKB',\n  category: 'geometry',\n  version: VERSION,\n  extensions: ['wkb'],\n  mimeTypes: [],\n  options: {\n    wkb: {\n      workerUrl: `https://unpkg.com/@loaders.gl/wkb@${VERSION}/dist/wkb-loader.worker.js`\n    }\n  }\n};\n\n/** @type {LoaderObject} */\nexport const WKBLoader = {\n  ...WKBWorkerLoader,\n  parse: async (arrayBuffer, options) => parseWKB(arrayBuffer),\n  parseSync: parseWKB\n};\n"]},"metadata":{},"sourceType":"module"}