{"ast":null,"code":"import * as d3 from 'd3';\nimport { useEffect, useState } from \"react\";\nexport function useData(props) {\n  const [data, setData] = useState(null);\n  const [keys, setKey] = useState(null); //画河流图需要data和keys\n\n  /*\n  *data format data is a list\n  * [{\n  *   xvalue:x\n  *   key1: k1\n  *   key2: k2\n  *   ...\n  * }\n  * ,\n  * {\n  *   ...\n  * }\n  * ...\n  * ]\n  *\n  * keys 就是data中所有的key的集合\n  *\n  * */\n\n  useEffect(() => {\n    d3.csv(\"./data-city-oneweek.csv\").then(d => {\n      let tmpK = [];\n      d.forEach(d => {\n        if (tmpK.indexOf(d.city) === -1) {\n          tmpK.push(d.city);\n        }\n      });\n      setKey(tmpK); //nest 怎么早没想到用d3的工具呢\n\n      let tmp = d3.nest().key(d => d.timestamp).entries(d);\n      let tmpD = [];\n      tmp.forEach(d => {\n        let t = {};\n        t.date = d.key;\n        d.values.forEach(d => {\n          t[d.city] = d.light;\n        });\n        tmpD.push(t);\n      });\n      console.log('tmpD', tmpD);\n      tmpD.slice(5, 19).forEach(d => {\n        console.log(d.date);\n        console.log(new Date(d.date).getHours());\n        console.log(new Date(d.date));\n      });\n      setData(tmpD); // setData(tmpD.slice(19,19+24));\n    });\n  }, []);\n  return [data, keys];\n}","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/Barchart/useData.js"],"names":["d3","useEffect","useState","useData","props","data","setData","keys","setKey","csv","then","d","tmpK","forEach","indexOf","city","push","tmp","nest","key","timestamp","entries","tmpD","t","date","values","light","console","log","slice","Date","getHours"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC3B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,IAAD,CAA7B;AACA,QAAM,CAACK,IAAD,EAAMC,MAAN,IAAcN,QAAQ,CAAC,IAAD,CAA5B,CAF2B,CAG3B;;AACA;;;;;;;;;;;;;;;;;;;AAkBAD,EAAAA,SAAS,CAAC,MAAI;AACXD,IAAAA,EAAE,CAACS,GAAH,CAAO,yBAAP,EAAkCC,IAAlC,CAAuCC,CAAC,IAAE;AACtC,UAAIC,IAAI,GAAC,EAAT;AACAD,MAAAA,CAAC,CAACE,OAAF,CAAUF,CAAC,IAAE;AAET,YAAGC,IAAI,CAACE,OAAL,CAAaH,CAAC,CAACI,IAAf,MAAuB,CAAC,CAA3B,EAA6B;AACzBH,UAAAA,IAAI,CAACI,IAAL,CAAUL,CAAC,CAACI,IAAZ;AACH;AACJ,OALD;AAMAP,MAAAA,MAAM,CAACI,IAAD,CAAN,CARsC,CAStC;;AACC,UAAIK,GAAG,GAACjB,EAAE,CAACkB,IAAH,GACHC,GADG,CACCR,CAAC,IAAEA,CAAC,CAACS,SADN,EAEHC,OAFG,CAEKV,CAFL,CAAR;AAIA,UAAIW,IAAI,GAAC,EAAT;AACAL,MAAAA,GAAG,CAACJ,OAAJ,CAAYF,CAAC,IAAE;AACX,YAAIY,CAAC,GAAC,EAAN;AACAA,QAAAA,CAAC,CAACC,IAAF,GAAOb,CAAC,CAACQ,GAAT;AACAR,QAAAA,CAAC,CAACc,MAAF,CAASZ,OAAT,CAAiBF,CAAC,IAAE;AAChBY,UAAAA,CAAC,CAACZ,CAAC,CAACI,IAAH,CAAD,GAAUJ,CAAC,CAACe,KAAZ;AACH,SAFD;AAGAJ,QAAAA,IAAI,CAACN,IAAL,CAAUO,CAAV;AACH,OAPD;AAQAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBN,IAAnB;AACAA,MAAAA,IAAI,CAACO,KAAL,CAAW,CAAX,EAAa,EAAb,EAAiBhB,OAAjB,CAAyBF,CAAC,IAAE;AACxBgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,CAAC,CAACa,IAAd;AACIG,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAIE,IAAJ,CAASnB,CAAC,CAACa,IAAX,EAAiBO,QAAjB,EAAZ;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAIE,IAAJ,CAASnB,CAAC,CAACa,IAAX,CAAZ;AACP,OAJD;AAMAlB,MAAAA,OAAO,CAACgB,IAAD,CAAP,CA9BqC,CA+BtC;AACH,KAhCD;AAiCF,GAlCQ,EAkCP,EAlCO,CAAT;AAoCI,SAAO,CAACjB,IAAD,EAAME,IAAN,CAAP;AACP","sourcesContent":["import * as d3 from 'd3'\nimport {useEffect, useState} from \"react\";\n\nexport function useData(props) {\n    const [data,setData]=useState(null);\n    const [keys,setKey]=useState(null)\n    //画河流图需要data和keys\n    /*\n    *data format data is a list\n    * [{\n    *   xvalue:x\n    *   key1: k1\n    *   key2: k2\n    *   ...\n    * }\n    * ,\n    * {\n    *   ...\n    * }\n    * ...\n    * ]\n    *\n    * keys 就是data中所有的key的集合\n    *\n    * */\n    useEffect(()=>{\n       d3.csv(\"./data-city-oneweek.csv\").then(d=>{\n           let tmpK=[];\n           d.forEach(d=>{\n\n               if(tmpK.indexOf(d.city)===-1){\n                   tmpK.push(d.city)\n               }\n           });\n           setKey(tmpK);\n           //nest 怎么早没想到用d3的工具呢\n            let tmp=d3.nest()\n                .key(d=>d.timestamp)\n                .entries(d)\n\n            let tmpD=[];\n            tmp.forEach(d=>{\n                let t={};\n                t.date=d.key;\n                d.values.forEach(d=>{\n                    t[d.city]=d.light;\n                })\n                tmpD.push(t);\n            });\n            console.log('tmpD',tmpD);\n            tmpD.slice(5,19).forEach(d=>{\n                console.log(d.date)\n                    console.log(new Date(d.date).getHours())\n                    console.log(new Date(d.date))\n            }\n            )\n            setData(tmpD);\n           // setData(tmpD.slice(19,19+24));\n       })\n    },[]);\n\n        return [data,keys]\n}\n"]},"metadata":{},"sourceType":"module"}