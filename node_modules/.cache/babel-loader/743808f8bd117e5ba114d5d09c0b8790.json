{"ast":null,"code":"var _jsxFileName = \"/home/zhiguangda/ITS/deckgl/src/components/sliderTraffic.js\";\n\n/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, { PureComponent } from 'react';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider, styled } from 'baseui';\nimport { Slider } from 'baseui/slider';\nimport { Button, SHAPE, SIZE } from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\nimport { Select } from \"baseui/select\";\nconst engine = new Styletron();\nconst SelectContainer = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 2,\n  top: '10px',\n  left: '10px'\n});\nconst Container = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 1,\n  bottom: '20px',\n  width: '100%'\n});\nconst ThumbValue = styled('div', {\n  color: '#FF0000',\n  position: 'absolute',\n  top: '-2em',\n  width: '200px'\n});\nconst TickBar = styled('div', {\n  width: '480px',\n  height: '24px',\n  maxWidth: '80vw'\n});\nconst ANIMATION_SPEED = 1;\nexport default class sliderTraffic extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false\n    };\n    this._renderThumbValue = this._renderThumbValue.bind(this);\n    this._animate = this._animate.bind(this);\n    this._toggle = this._toggle.bind(this);\n    this._animationFrame = null;\n  }\n\n  componentDidMount() {} // this._animate()\n  // componentWillUnmount() {\n  //     cancelAnimationFrame(this._animationFrame);\n  // }\n\n\n  _toggle() {\n    cancelAnimationFrame(this._animationFrame);\n    const {\n      isPlaying\n    } = this.state;\n\n    if (!isPlaying) {\n      this._animate();\n    }\n\n    this.setState({\n      isPlaying: !isPlaying\n    });\n  }\n\n  _animate() {\n    const {\n      min,\n      max,\n      value\n    } = this.props;\n    let newValue = value[1] + ANIMATION_SPEED;\n\n    if (value[1] > max) {\n      newValue = min;\n    }\n\n    this.props.onChange({\n      value: [value[0], newValue]\n    });\n    this._animationFrame = requestAnimationFrame(this._animate);\n  }\n\n  _renderThumbValue({\n    $thumbIndex,\n    $value\n  }) {\n    if ($thumbIndex == 1) {\n      const value = $value[$thumbIndex];\n\n      if (value == 3600) {\n        console.log('thumb==3600');\n      } // console.log('thumb:',value)\n\n\n      return /*#__PURE__*/React.createElement(ThumbValue, {\n        Color: [0, 0, 0, 255],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 20\n        }\n      }, this.props.formatLabel(value));\n    } else {\n      return /*#__PURE__*/React.createElement(ThumbValue, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 20\n        }\n      });\n    } // return <ThumbValue>{0}</ThumbValue>;\n\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n\n  render() {\n    const {\n      value,\n      min,\n      max\n    } = this.props;\n    const isButtonEnabled = value[0] > min || value[1] < max;\n\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 20\n        }\n      }, \"Something went wrong.\");\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: 'start',\n      shape: SHAPE.round,\n      size: SIZE.compact,\n      disabled: !isButtonEnabled,\n      onClick: this._toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, this.state.isPlaying ? /*#__PURE__*/React.createElement(Stop, {\n      title: \"Stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(Start, {\n      title: \"Animate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(Slider, Object.assign({}, this.props, {\n      overrides: {\n        ThumbValue: this._renderThumbValue,\n        TickBar: () => /*#__PURE__*/React.createElement(TickBar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 48\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/sliderTraffic.js"],"names":["React","PureComponent","Client","Styletron","Provider","StyletronProvider","LightTheme","BaseProvider","styled","Slider","Button","SHAPE","SIZE","Start","Stop","Select","engine","SelectContainer","position","display","justifyContent","alignItems","zIndex","top","left","Container","bottom","width","ThumbValue","color","TickBar","height","maxWidth","ANIMATION_SPEED","sliderTraffic","constructor","props","state","isPlaying","_renderThumbValue","bind","_animate","_toggle","_animationFrame","componentDidMount","cancelAnimationFrame","setState","min","max","value","newValue","onChange","requestAnimationFrame","$thumbIndex","$value","console","log","formatLabel","getDerivedStateFromError","error","hasError","componentDidCatch","errorInfo","render","isButtonEnabled","round","compact"],"mappings":"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","sourcesContent":["/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, {PureComponent} from 'react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {LightTheme, BaseProvider, styled} from 'baseui';\nimport {Slider} from 'baseui/slider';\nimport {Button, SHAPE, SIZE} from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\nimport { Select } from \"baseui/select\";\n\nconst engine = new Styletron();\n\nconst SelectContainer=styled('div',{\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n    top: '10px',\n    left:'10px'\n});\n\n\nconst Container = styled('div', {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    bottom: '20px',\n    width: '100%'\n});\n\nconst ThumbValue = styled('div', {\n    color: '#FF0000',\n    position: 'absolute',\n    top: '-2em',\n    width: '200px'\n});\n\nconst TickBar = styled('div', {\n    width: '480px',\n    height: '24px',\n    maxWidth: '80vw'\n});\n\n\n\n\n\n\n\nconst ANIMATION_SPEED = 1;\n\nexport default class sliderTraffic extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false\n        };\n\n        this._renderThumbValue = this._renderThumbValue.bind(this);\n        this._animate = this._animate.bind(this);\n        this._toggle = this._toggle.bind(this);\n        this._animationFrame = null;\n    }\n    componentDidMount() {\n        // this._animate()\n    }\n\n    // componentWillUnmount() {\n    //     cancelAnimationFrame(this._animationFrame);\n    // }\n\n    _toggle() {\n        cancelAnimationFrame(this._animationFrame);\n        const {isPlaying} = this.state;\n        if (!isPlaying) {\n            this._animate();\n        }\n        this.setState({isPlaying: !isPlaying});\n    }\n\n    _animate() {\n        const {min,max, value} = this.props;\n        let newValue=value[1]+ANIMATION_SPEED;\n        if(value[1]>max){\n            newValue=min;\n        }\n        this.props.onChange({\n            value: [value[0],newValue]\n        });\n        this._animationFrame = requestAnimationFrame(this._animate);\n    }\n\n    _renderThumbValue({$thumbIndex, $value}) {\n\n        if($thumbIndex==1){\n            const value = $value[$thumbIndex];\n            if(value==3600){\n                console.log('thumb==3600')\n            }\n           // console.log('thumb:',value)\n            return <ThumbValue Color={[0,0,0,255]} >{this.props.formatLabel(value)}</ThumbValue>;\n        }\n        else{\n            return <ThumbValue></ThumbValue>\n        }\n        // return <ThumbValue>{0}</ThumbValue>;\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(error, errorInfo);\n    }\n\n\n    render() {\n        const {value, min, max} = this.props;\n        const isButtonEnabled = value[0] > min || value[1] < max;\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return (\n                    <Container>\n                        <Button\n                            id={'start'}\n                            shape={SHAPE.round}\n                            size={SIZE.compact}\n                            disabled={!isButtonEnabled}\n                            onClick={this._toggle}\n                        >\n                            {this.state.isPlaying ? <Stop title=\"Stop\" /> : <Start title=\"Animate\" />}\n                        </Button>\n                        <Slider\n                            {...this.props}\n                            overrides={{\n                                ThumbValue: this._renderThumbValue,\n                                TickBar: () => <TickBar />\n                            }}\n                        />\n\n                    </Container>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}