{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zhiguangda/ITS/deckgl/src/components/sliderCovid.js\";\n\n/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, { PureComponent } from 'react';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider, styled } from 'baseui';\nimport { Slider } from 'baseui/slider';\nimport { Button, SHAPE, SIZE } from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\nconst engine = new Styletron();\nconst ButtonContainer = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 2,\n  top: '10px',\n  left: '10px'\n});\nconst Container = styled('div', {\n  position: 'absolute',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  zIndex: 1,\n  bottom: '20px',\n  width: '100%'\n});\n_c = Container;\nconst ThumbValue = styled('div', {\n  color: '#000000',\n  position: 'absolute',\n  top: '-2em'\n});\n_c2 = ThumbValue;\nconst TickBar = styled('div', {\n  width: '480px',\n  height: '20px',\n  maxWidth: '80vw'\n});\n_c3 = TickBar;\nconst ANIMATION_SPEED = 1;\nlet count = 0;\nexport default class sliderCovid extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false\n    };\n    this._renderThumbValue = this._renderThumbValue.bind(this);\n    this._animate = this._animate.bind(this);\n    this._toggle = this._toggle.bind(this);\n    this._animationFrame = null;\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this._animationFrame);\n  }\n\n  _toggle() {\n    cancelAnimationFrame(this._animationFrame);\n    const {\n      isPlaying\n    } = this.state;\n\n    if (!isPlaying) {\n      this._animate();\n    }\n\n    this.setState({\n      isPlaying: !isPlaying\n    });\n  }\n\n  _animate() {\n    count++; // console.log(count);\n\n    if (count === ANIMATION_SPEED) {\n      const {\n        max,\n        value\n      } = this.props;\n      let newCount = value[1] + 1 > max ? 0 : value[1] + 1;\n      let date = new Date('2020-01-22');\n      date.setDate(date.getDate() + value[1]);\n      console.log('mounth:', date.getMonth()); // let month=date.getUTCMonth()+1;\n      // if(month<10){\n      //     month='0'+month\n      // }\n      // else{\n      //     month=month.toString()\n      // }\n      // let tmpstr=date.getFullYear()+'-'+date.getUTCMonth()+1+'-'+date.getDate();\n\n      let tmpstr = `${date.getFullYear()}-${date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}`;\n      console.log('tmpstr:', tmpstr);\n      this.props.onChange({\n        date: tmpstr,\n        value: [0, newCount]\n      });\n      count = 0;\n    }\n\n    this._animationFrame = requestAnimationFrame(this._animate);\n  }\n\n  _renderThumbValue({\n    $thumbIndex,\n    $value\n  }) {\n    //console.log('$thumbIndex:',$thumbIndex);\n    if ($thumbIndex == 1) {\n      const value = $value[$thumbIndex]; // console.log('thumb:',value)\n\n      return /*#__PURE__*/_jsxDEV(ThumbValue, {\n        Color: [0, 0, 0, 255],\n        children: this.props.formatLabel(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ThumbValue, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    } // return <ThumbValue>{0}</ThumbValue>;\n\n  }\n\n  render() {\n    const {\n      value,\n      min,\n      max\n    } = this.props;\n    const isButtonEnabled = value[0] > min || value[1] < max;\n\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(StyletronProvider, {\n      value: engine,\n      children: /*#__PURE__*/_jsxDEV(BaseProvider, {\n        theme: LightTheme,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            shape: SHAPE.round,\n            size: SIZE.compact,\n            disabled: !isButtonEnabled,\n            onClick: this._toggle,\n            children: this.state.isPlaying ? /*#__PURE__*/_jsxDEV(Stop, {\n              title: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(Start, {\n              title: \"Animate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 77\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Slider, { ...this.props,\n            overrides: {\n              ThumbValue: this._renderThumbValue,\n              TickBar: () => /*#__PURE__*/_jsxDEV(TickBar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 48\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ThumbValue\");\n$RefreshReg$(_c3, \"TickBar\");","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/sliderCovid.js"],"names":["React","PureComponent","Client","Styletron","Provider","StyletronProvider","LightTheme","BaseProvider","styled","Slider","Button","SHAPE","SIZE","Start","Stop","engine","ButtonContainer","position","display","justifyContent","alignItems","zIndex","top","left","Container","bottom","width","ThumbValue","color","TickBar","height","maxWidth","ANIMATION_SPEED","count","sliderCovid","constructor","props","state","isPlaying","_renderThumbValue","bind","_animate","_toggle","_animationFrame","componentWillUnmount","cancelAnimationFrame","setState","max","value","newCount","date","Date","setDate","getDate","console","log","getMonth","tmpstr","getFullYear","onChange","requestAnimationFrame","$thumbIndex","$value","formatLabel","render","min","isButtonEnabled","hasError","round","compact"],"mappings":"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","sourcesContent":["/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, {PureComponent} from 'react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {LightTheme, BaseProvider, styled} from 'baseui';\nimport {Slider} from 'baseui/slider';\nimport {Button, SHAPE, SIZE} from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\n\nconst engine = new Styletron();\n\nconst ButtonContainer=styled('div',{\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n    top: '10px',\n    left:'10px'\n});\n\nconst Container = styled('div', {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    bottom: '20px',\n    width: '100%'\n});\n\nconst ThumbValue = styled('div', {\n    color: '#000000',\n    position: 'absolute',\n    top: '-2em'\n});\n\nconst TickBar = styled('div', {\n    width: '480px',\n    height: '20px',\n    maxWidth: '80vw'\n});\n\nconst ANIMATION_SPEED = 1;\nlet count=0;\n\nexport default class sliderCovid extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false\n        };\n\n        this._renderThumbValue = this._renderThumbValue.bind(this);\n        this._animate = this._animate.bind(this);\n        this._toggle = this._toggle.bind(this);\n        this._animationFrame = null;\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this._animationFrame);\n    }\n\n    _toggle() {\n        cancelAnimationFrame(this._animationFrame);\n        const {isPlaying} = this.state;\n        if (!isPlaying) {\n            this._animate();\n        }\n        this.setState({isPlaying: !isPlaying});\n    }\n\n    _animate() {\n        count++;\n        // console.log(count);\n        if(count===ANIMATION_SPEED){\n            const {max,value} = this.props;\n            let newCount=((value[1]+1)>max)?0:value[1]+1;\n\n            let date=new Date('2020-01-22');\n            date.setDate(date.getDate()+value[1]);\n            console.log('mounth:',date.getMonth());\n\n            // let month=date.getUTCMonth()+1;\n            // if(month<10){\n            //     month='0'+month\n            // }\n            // else{\n            //     month=month.toString()\n            // }\n            // let tmpstr=date.getFullYear()+'-'+date.getUTCMonth()+1+'-'+date.getDate();\n            let tmpstr=`${date.getFullYear()}-${(date.getMonth()+1)<10?'0'+(date.getMonth()+1):date.getMonth()+1}-${date.getDate()<10?'0'+date.getDate():date.getDate()}`;\n            console.log('tmpstr:',tmpstr);\n            this.props.onChange({\n                date:tmpstr,\n                value:[0,newCount]\n            });\n            count=0\n        }\n        this._animationFrame = requestAnimationFrame(this._animate);\n    }\n\n    _renderThumbValue({$thumbIndex, $value}) {\n        //console.log('$thumbIndex:',$thumbIndex);\n        if($thumbIndex==1){\n            const value = $value[$thumbIndex];\n            // console.log('thumb:',value)\n            return <ThumbValue Color={[0,0,0,255]}>{this.props.formatLabel(value)}</ThumbValue>;\n        }\n        else{\n            return <ThumbValue></ThumbValue>\n        }\n\n        // return <ThumbValue>{0}</ThumbValue>;\n    }\n\n\n\n\n    render() {\n        const {value, min, max} = this.props;\n        const isButtonEnabled = value[0] > min || value[1] < max;\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return (\n            <StyletronProvider value={engine}>\n                <BaseProvider theme={LightTheme}>\n                    <Container>\n                        <Button\n                            shape={SHAPE.round}\n                            size={SIZE.compact}\n                            disabled={!isButtonEnabled}\n                            onClick={this._toggle}\n                        >\n                            {this.state.isPlaying ? <Stop title=\"Stop\" /> : <Start title=\"Animate\" />}\n                        </Button>\n                        <Slider\n                            {...this.props}\n                            overrides={{\n                                ThumbValue: this._renderThumbValue,\n                                TickBar: () => <TickBar />\n                            }}\n                        />\n                    </Container>\n                    {/*<ButtonContainer>*/}\n                    {/*    <Button*/}\n                    {/*        shape={SHAPE.round}*/}\n                    {/*        size={SIZE.compact}*/}\n                    {/*        disabled={!isButtonEnabled}*/}\n                    {/*    >*/}\n                    {/*    </Button>*/}\n                    {/*</ButtonContainer>*/}\n                </BaseProvider>\n            </StyletronProvider>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}