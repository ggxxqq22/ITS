{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport { LayerExtension } from '@deck.gl/core';\nimport { shaderModule, shaderModule64 } from './shader-module';\nvar defaultProps = {\n  getFilterValue: {\n    type: 'accessor',\n    value: 0\n  },\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\nvar DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nvar DataFilterExtension = function (_LayerExtension) {\n  _inherits(DataFilterExtension, _LayerExtension);\n\n  function DataFilterExtension() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$filterSize = _ref.filterSize,\n        filterSize = _ref$filterSize === void 0 ? 1 : _ref$filterSize,\n        _ref$fp = _ref.fp64,\n        fp64 = _ref$fp === void 0 ? false : _ref$fp;\n\n    _classCallCheck(this, DataFilterExtension);\n\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataFilterExtension).call(this, {\n      filterSize: filterSize,\n      fp64: fp64\n    }));\n  }\n\n  _createClass(DataFilterExtension, [{\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      var _extension$opts = extension.opts,\n          filterSize = _extension$opts.filterSize,\n          fp64 = _extension$opts.fp64;\n      return {\n        modules: [fp64 ? shaderModule64 : shaderModule],\n        defines: {\n          DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n          DATAFILTER_DOUBLE: Boolean(fp64)\n        }\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {\n      var attributeManager = this.getAttributeManager();\n\n      if (attributeManager) {\n        attributeManager.add({\n          filterValues: {\n            size: extension.opts.filterSize,\n            type: extension.opts.fp64 ? 5130 : 5126,\n            accessor: 'getFilterValue',\n            shaderAttributes: {\n              filterValues: {\n                divisor: 0\n              },\n              instanceFilterValues: {\n                divisor: 1\n              }\n            }\n          }\n        });\n      }\n    }\n  }]);\n\n  return DataFilterExtension;\n}(LayerExtension);\n\nexport { DataFilterExtension as default };\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/data-filter/data-filter.js"],"names":["defaultProps","getFilterValue","type","value","filterEnabled","filterRange","filterSoftRange","filterTransformSize","filterTransformColor","DATA_TYPE_FROM_SIZE","DataFilterExtension","LayerExtension","filterSize","fp64","extension","modules","defines","DATAFILTER_TYPE","DATAFILTER_DOUBLE","Boolean","context","attributeManager","filterValues","size","accessor","shaderAttributes","divisor","instanceFilterValues"],"mappings":";;;;;AAoBA,SAAA,cAAA,QAAA,eAAA;AACA,SAAA,YAAA,EAAA,cAAA,QAAA,iBAAA;AAGA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AAACC,IAAAA,IAAI,EAAL,UAAA;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GADG;AAGnBC,EAAAA,aAAa,EAHM,IAAA;AAInBC,EAAAA,WAAW,EAAE,CAAC,CAAD,CAAA,EAJM,CAIN,CAJM;AAKnBC,EAAAA,eAAe,EALI,IAAA;AAMnBC,EAAAA,mBAAmB,EANA,IAAA;AAOnBC,EAAAA,oBAAoB,EAAE;AAPH,CAArB;AAUA,IAAMC,mBAAmB,GAAG;AAC1B,KAD0B,OAAA;AAE1B,KAF0B,MAAA;AAG1B,KAH0B,MAAA;AAI1B,KAAG;AAJuB,CAA5B;;IAOqBC,mB;;;AACnB,WAAA,mBAAA,GAAiD;AAAA,QAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,QAAA,eAAA,GAAA,IAAA,CAApCE,UAAoC;AAAA,QAApCA,UAAoC,GAAA,eAAA,KAAA,KAAA,CAAA,GAAvB,CAAuB,GAAA,eAAA;AAAA,QAAA,OAAA,GAAA,IAAA,CAApBC,IAAoB;AAAA,QAApBA,IAAoB,GAAA,OAAA,KAAA,KAAA,CAAA,GAAb,KAAa,GAAA,OAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA;;AAC/C,QAAI,CAACJ,mBAAmB,CAAxB,UAAwB,CAAxB,EAAsC;AACpC,YAAM,IAAA,KAAA,CAAN,yBAAM,CAAN;AACD;;AAH8C,WAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,mBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAKzC;AAACG,MAAAA,UAAU,EAAX,UAAA;AAAaC,MAAAA,IAAI,EAAJA;AAAb,KALyC,CAAA,CAAA;AAMhD;;;;+BAEUC,S,EAAW;AAAA,UAAA,eAAA,GACOA,SAAS,CADhB,IAAA;AAAA,UACbF,UADa,GAAA,eAAA,CAAA,UAAA;AAAA,UACDC,IADC,GAAA,eAAA,CAAA,IAAA;AAGpB,aAAO;AACLE,QAAAA,OAAO,EAAE,CAACF,IAAI,GAAA,cAAA,GADT,YACI,CADJ;AAELG,QAAAA,OAAO,EAAE;AACPC,UAAAA,eAAe,EAAER,mBAAmB,CAD7B,UAC6B,CAD7B;AAEPS,UAAAA,iBAAiB,EAAEC,OAAO,CAAA,IAAA;AAFnB;AAFJ,OAAP;AAOD;;;oCAEeC,O,EAASN,S,EAAW;AAClC,UAAMO,gBAAgB,GAAG,KAAzB,mBAAyB,EAAzB;;AACA,UAAA,gBAAA,EAAsB;AACpBA,QAAAA,gBAAgB,CAAhBA,GAAAA,CAAqB;AACnBC,UAAAA,YAAY,EAAE;AACZC,YAAAA,IAAI,EAAET,SAAS,CAATA,IAAAA,CADM,UAAA;AAEZZ,YAAAA,IAAI,EAAEY,SAAS,CAATA,IAAAA,CAAAA,IAAAA,GAAAA,IAAAA,GAFM,IAAA;AAGZU,YAAAA,QAAQ,EAHI,gBAAA;AAIZC,YAAAA,gBAAgB,EAAE;AAChBH,cAAAA,YAAY,EAAE;AACZI,gBAAAA,OAAO,EAAE;AADG,eADE;AAIhBC,cAAAA,oBAAoB,EAAE;AACpBD,gBAAAA,OAAO,EAAE;AADW;AAJN;AAJN;AADK,SAArBL;AAeD;AACF;;;;EAxC8CV,c;;SAA5BD,mB;AA2CrBA,mBAAmB,CAAnBA,aAAAA,GAAAA,qBAAAA;AACAA,mBAAmB,CAAnBA,YAAAA,GAAAA,YAAAA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport GL from '@luma.gl/constants';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({filterSize = 1, fp64 = false} = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64});\n  }\n\n  getShaders(extension) {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n  }\n}\n\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}