{"ast":null,"code":"import React from 'react';\nimport * as d3 from \"d3\";\nexport const Marks = ({\n  data,\n  xScale,\n  xValue,\n  yScale,\n  yValue,\n  colorScale,\n  colorValue,\n  tooltipFormat,\n  circleRadius,\n  year,\n  callback,\n  margin\n}) => {\n  function dataAt(year) {\n    console.log('data:', data);\n    let results = [];\n    let pro = Object.getOwnPropertyNames(data[year]);\n    pro.forEach(d => {\n      results.push({\n        city: d,\n        data: data[year][d]\n      });\n    });\n    return results;\n  }\n\n  if (year && data) {\n    let currentData = dataAt(year + '/' + (year - 2000 + 1));\n    let svg = d3.select('svg');\n    let c1 = svg.selectAll(\"circle\").data(currentData, d => d['city']);\n    console.log('enter', c1);\n    let c = c1.join('circle').attr(\"stroke\", \"black\").transition() // .on('end',function repeat(){\n    //     console.log('end')\n    // })\n    .duration(1000).attr(\"r\", d => {\n      if (!(parseFloat(d.data['happy']) && parseFloat(d.data['worth']))) return 0;else return Math.random() * 10;\n    }).attr(\"cx\", d => {\n      if (parseFloat(d.data['happy'])) {\n        // console.log(d.data['happy'])\n        return xScale(d.data['happy']) + margin.left;\n      }\n    }).attr(\"cy\", d => {\n      if (d.data['worth']) {\n        return yScale(d.data['worth']) + margin.top;\n      }\n    }).attr(\"fill\", d => {\n      // console.log('d',d);\n      //  console.log('Area',d.data.Area)\n      return colorScale(d.data.Area);\n    }).end();\n    c.then(result => {\n      // if(year<2016){\n      //     setYear(year+1)\n      //     // updateCircle()\n      // }\n      // else {\n      //     setYear(2011)\n      //     // console.log('year:',year)\n      //     // year=2011;\n      //     // updateCircle()\n      // }\n      callback();\n      console.log('done');\n    });\n  }\n\n  return null;\n}; // data.map(d => (\n//     <circle\n//         className=\"mark\"\n//         cx={xScale(xValue(d))}\n//         cy={yScale(yValue(d))}\n//         fill={colorScale(colorValue(d))}\n//         r={circleRadius}\n//     >\n//         <title>{tooltipFormat(xValue(d))}</title>\n//     </circle>\n// ));\n\n_c = Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/home/zhiguangda/ITS/deckgl/src/components/city/Marks.js"],"names":["React","d3","Marks","data","xScale","xValue","yScale","yValue","colorScale","colorValue","tooltipFormat","circleRadius","year","callback","margin","dataAt","console","log","results","pro","Object","getOwnPropertyNames","forEach","d","push","city","currentData","svg","select","c1","selectAll","c","join","attr","transition","duration","parseFloat","Math","random","left","top","Area","end","then","result"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from \"d3\";\n\n\nexport const Marks = ({\n                          data,\n                          xScale,\n                          xValue,\n                          yScale,\n                          yValue,\n                          colorScale,\n                          colorValue,\n                          tooltipFormat,\n                          circleRadius,\n                          year,\n                          callback,\n                          margin\n                      }) =>{\n    function dataAt(year){\n        console.log('data:',data);\n        let results=[];\n        let pro=Object.getOwnPropertyNames(data[year]);\n        pro.forEach(d=>{\n            results.push({\n                city:d,\n                data:data[year][d],\n            })\n        })\n        return results\n    }\n\n    if(year&&data){\n        let currentData=dataAt(year+'/'+(year-2000+1));\n        let svg=d3.select('svg');\n        let c1=svg.selectAll(\"circle\")\n            .data(currentData,d=>d['city'])\n        console.log('enter',c1)\n        let c=c1\n            .join('circle')\n            .attr(\"stroke\", \"black\")\n\n            .transition()\n            // .on('end',function repeat(){\n            //     console.log('end')\n            // })\n            .duration(1000)\n            .attr(\"r\", d =>{\n                if(!(parseFloat(d.data['happy'])&&parseFloat(d.data['worth']))) return 0;\n                else return Math.random()*10\n            })\n            .attr(\"cx\", d => {if(parseFloat(d.data['happy'])){\n                // console.log(d.data['happy'])\n                return xScale(d.data['happy'])+margin.left\n            }})\n            .attr(\"cy\", d => {if(d.data['worth']){\n                return yScale(d.data['worth'])+margin.top\n            }\n            })\n            .attr(\"fill\", d =>{\n                // console.log('d',d);\n                //  console.log('Area',d.data.Area)\n                return colorScale(d.data.Area)\n            } )\n            .end();\n        c.then(result=>{\n            // if(year<2016){\n            //     setYear(year+1)\n            //     // updateCircle()\n            // }\n            // else {\n            //     setYear(2011)\n            //     // console.log('year:',year)\n            //     // year=2011;\n            //     // updateCircle()\n            // }\n            callback();\n            console.log('done')\n        })\n    }\n    return null\n}\n    // data.map(d => (\n    //     <circle\n    //         className=\"mark\"\n    //         cx={xScale(xValue(d))}\n    //         cy={yScale(yValue(d))}\n    //         fill={colorScale(colorValue(d))}\n    //         r={circleRadius}\n    //     >\n    //         <title>{tooltipFormat(xValue(d))}</title>\n    //     </circle>\n    // ));\n"]},"metadata":{},"sourceType":"module"}