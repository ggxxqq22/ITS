[{"/home/zhiguangda/ITS/deckgl/src/index.js":"1","/home/zhiguangda/ITS/deckgl/src/components/front_glass/wallpaper.js":"2","/home/zhiguangda/ITS/deckgl/src/components/routeMap.js":"3","/home/zhiguangda/ITS/deckgl/src/components/sliderexample.js":"4","/home/zhiguangda/ITS/deckgl/src/components/airQuality.js":"5","/home/zhiguangda/ITS/deckgl/src/components/front_glass/welcome.js":"6","/home/zhiguangda/ITS/deckgl/src/components/streamgraph/main.js":"7","/home/zhiguangda/ITS/deckgl/src/components/Barchart/main.js":"8","/home/zhiguangda/ITS/deckgl/src/components/city/city.js":"9","/home/zhiguangda/ITS/deckgl/src/components/WorkFlow/news.js":"10","/home/zhiguangda/ITS/deckgl/src/components/panel/control.js":"11","/home/zhiguangda/ITS/deckgl/src/components/lineChart/main.js":"12","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Mirror.js":"13","/home/zhiguangda/ITS/deckgl/src/components/covid-19.jsx":"14","/home/zhiguangda/ITS/deckgl/src/components/sliderTraffic.js":"15","/home/zhiguangda/ITS/deckgl/src/components/city/AxisBottom.js":"16","/home/zhiguangda/ITS/deckgl/src/components/city/AxisLeft.js":"17","/home/zhiguangda/ITS/deckgl/src/components/streamgraph/useData.js":"18","/home/zhiguangda/ITS/deckgl/src/components/city/ColorLegend.js":"19","/home/zhiguangda/ITS/deckgl/src/components/streamgraph/Marks.js":"20","/home/zhiguangda/ITS/deckgl/src/components/Barchart/useData.js":"21","/home/zhiguangda/ITS/deckgl/src/components/city/useData.js":"22","/home/zhiguangda/ITS/deckgl/src/components/Barchart/Marks.js":"23","/home/zhiguangda/ITS/deckgl/src/components/city/Marks.js":"24","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Navi.js":"25","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Weather.js":"26","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Clock.js":"27","/home/zhiguangda/ITS/deckgl/src/components/charts/charts.js":"28","/home/zhiguangda/ITS/deckgl/src/components/charts/panel.js":"29","/home/zhiguangda/ITS/deckgl/src/components/lineChart/ColorLegend.js":"30","/home/zhiguangda/ITS/deckgl/src/components/sliderCovid.js":"31","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Appo.js":"32","/home/zhiguangda/ITS/deckgl/src/components/front_glass/meetingwel.js":"33","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Control.js":"34","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/octrl.js":"35","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/ictrl.js":"36","/home/zhiguangda/ITS/deckgl/src/components/Map.js":"37","/home/zhiguangda/ITS/deckgl/src/components/tem.js":"38","/home/zhiguangda/ITS/deckgl/src/rank/A1.js":"39","/home/zhiguangda/ITS/deckgl/src/rank/A5.js":"40","/home/zhiguangda/ITS/deckgl/src/rank/A2.js":"41","/home/zhiguangda/ITS/deckgl/src/rank/A4.js":"42","/home/zhiguangda/ITS/deckgl/src/rank/A3.js":"43","/home/zhiguangda/ITS/deckgl/src/components/covid_music.js":"44","/home/zhiguangda/ITS/deckgl/src/components/gpu/g.js":"45","/home/zhiguangda/ITS/deckgl/src/components/gpu/panel.js":"46","/home/zhiguangda/ITS/deckgl/src/components/olmpic.js":"47","/home/zhiguangda/ITS/deckgl/src/new/p1.js":"48","/home/zhiguangda/ITS/deckgl/src/new/p3.js":"49","/home/zhiguangda/ITS/deckgl/src/new/p2.js":"50","/home/zhiguangda/ITS/deckgl/src/new/p4.js":"51","/home/zhiguangda/ITS/deckgl/src/new/p5.js":"52"},{"size":3733,"mtime":1646719696490,"results":"53","hashOfConfig":"54"},{"size":1606,"mtime":1641548544932,"results":"55","hashOfConfig":"54"},{"size":72789,"mtime":1643082320383,"results":"56","hashOfConfig":"54"},{"size":781,"mtime":1619515473929,"results":"57","hashOfConfig":"54"},{"size":8661,"mtime":1619515473886,"results":"58","hashOfConfig":"54"},{"size":1852,"mtime":1640843535166,"results":"59","hashOfConfig":"54"},{"size":4242,"mtime":1619515473929,"results":"60","hashOfConfig":"54"},{"size":4165,"mtime":1591239990417,"results":"61","hashOfConfig":"54"},{"size":10077,"mtime":1591239990418,"results":"62","hashOfConfig":"54"},{"size":1652,"mtime":1619515473886,"results":"63","hashOfConfig":"54"},{"size":15673,"mtime":1619708944989,"results":"64","hashOfConfig":"54"},{"size":13062,"mtime":1619515473924,"results":"65","hashOfConfig":"54"},{"size":3306,"mtime":1647946506078,"results":"66","hashOfConfig":"54"},{"size":10081,"mtime":1591239990419,"results":"67","hashOfConfig":"54"},{"size":4185,"mtime":1619515473929,"results":"68","hashOfConfig":"54"},{"size":498,"mtime":1591239990418,"results":"69","hashOfConfig":"54"},{"size":485,"mtime":1591239990418,"results":"70","hashOfConfig":"54"},{"size":1500,"mtime":1591239990422,"results":"71","hashOfConfig":"54"},{"size":823,"mtime":1591239990418,"results":"72","hashOfConfig":"54"},{"size":2222,"mtime":1591239990421,"results":"73","hashOfConfig":"54"},{"size":1500,"mtime":1591239990417,"results":"74","hashOfConfig":"54"},{"size":2854,"mtime":1591239990419,"results":"75","hashOfConfig":"54"},{"size":16938,"mtime":1591239990417,"results":"76","hashOfConfig":"54"},{"size":2772,"mtime":1591239990418,"results":"77","hashOfConfig":"54"},{"size":2945,"mtime":1622614980541,"results":"78","hashOfConfig":"79"},{"size":2175,"mtime":1647945330248,"results":"80","hashOfConfig":"54"},{"size":1502,"mtime":1647937662179,"results":"81","hashOfConfig":"54"},{"size":904,"mtime":1619515473923,"results":"82","hashOfConfig":"79"},{"size":728,"mtime":1619515473923,"results":"83","hashOfConfig":"79"},{"size":833,"mtime":1591239990419,"results":"84","hashOfConfig":"54"},{"size":4962,"mtime":1619515473929,"results":"85","hashOfConfig":"54"},{"size":5971,"mtime":1622614979857,"results":"86","hashOfConfig":"79"},{"size":1312,"mtime":1621006095631,"results":"87","hashOfConfig":"54"},{"size":17775,"mtime":1622614980582,"results":"88","hashOfConfig":"79"},{"size":22142,"mtime":1647953947893,"results":"89","hashOfConfig":"54"},{"size":16579,"mtime":1648014670425,"results":"90","hashOfConfig":"54"},{"size":1797,"mtime":1631930272879,"results":"91","hashOfConfig":"54"},{"size":2791,"mtime":1631929729551,"results":"92","hashOfConfig":"54"},{"size":2023,"mtime":1631940006245,"results":"93","hashOfConfig":"54"},{"size":2024,"mtime":1631940119980,"results":"94","hashOfConfig":"54"},{"size":2023,"mtime":1631940046405,"results":"95","hashOfConfig":"54"},{"size":2023,"mtime":1631940096739,"results":"96","hashOfConfig":"54"},{"size":2023,"mtime":1631940073983,"results":"97","hashOfConfig":"54"},{"size":1919,"mtime":1635733261812,"results":"98","hashOfConfig":"54"},{"size":22827,"mtime":1635463310585,"results":"99","hashOfConfig":"54"},{"size":1070,"mtime":1635463073014,"results":"100","hashOfConfig":"54"},{"size":2030,"mtime":1634187028285,"results":"101","hashOfConfig":"54"},{"size":1977,"mtime":1646719710533,"results":"102","hashOfConfig":"54"},{"size":1964,"mtime":1646719712728,"results":"103","hashOfConfig":"54"},{"size":1964,"mtime":1646719711712,"results":"104","hashOfConfig":"54"},{"size":1977,"mtime":1648688695654,"results":"105","hashOfConfig":"54"},{"size":1964,"mtime":1646719714164,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},"1tsy427",{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"116","usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},"16dss00",{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"187"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"178"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"178"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"110"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"110"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"110"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"110"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"110"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"110"},"/home/zhiguangda/ITS/deckgl/src/index.js",["258","259","260","261"],"import React,{Fragment}from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route,  Switch,Link } from 'react-router-dom'\n\nimport {City} from './components/city/city';\nimport RouteMap from \"./components/routeMap\";\nimport Covid from \"./components/covid-19\";\nimport AirQuality from \"./components/airQuality\";\nimport {StreamG} from \"./components/streamgraph/main\";\nimport {BarG} from \"./components/Barchart/main\";\nimport {Panel} from \"./components/panel/control\";\nimport LineChart from \"./components/lineChart/main\";\nimport './index.css';\nimport Ad from \"./components/sliderexample\"\nimport News from \"./components/WorkFlow/news\"\nimport Welcome from \"./components/front_glass/welcome\"\nimport Wallpaper from \"./components/front_glass/wallpaper.js\"\nimport Meetingwel from \"./components/front_glass/meetingwel.js\"\nimport Mirror from \"./components/magicmirror/Mirror.js\"\nimport Map from \"./components/Map.js\"\nimport A1 from \"./rank/A1.js\"\nimport A2 from \"./rank/A2.js\"\nimport A3 from \"./rank/A3.js\"\nimport A4 from \"./rank/A4.js\"\nimport A5 from \"./rank/A5.js\"\nimport P1 from \"./new/p1.js\"\nimport P2 from \"./new/p2.js\"\nimport P3 from \"./new/p3.js\"\nimport P4 from \"./new/p4.js\"\nimport P5 from \"./new/p5.js\"\nimport Cm from \"./components/covid_music.js\"\nimport Gpu from \"./components/gpu/g.js\"\nimport Olympic from \"./components/olmpic.js\"\nimport Covidmusic from \"./components/covid_music.js\"\nconst map = document.getElementById(\"map\");\n\nfunction Getpage(){\n    return (\n        <Router>\n            <Route>\n                <Route exact path=\"/\">\n                    <RouteMap />\n                </Route>\n                <Route path=\"/covid\">\n                    <Covid />\n                </Route>\n                <Route path=\"/airquality\">\n                    <AirQuality />\n                </Route>\n                <Route path=\"/bubble\">\n                    <City />\n                </Route>\n                <Route path=\"/stream\">\n                    <StreamG />\n                </Route>\n                <Route path=\"/bar\">\n                    <BarG />\n                </Route>\n                <Route path=\"/control\">\n                    <Panel/>\n                </Route>\n                <Route path={\"/slider\"}>\n                    <Ad/>\n                </Route>\n                <Route path={\"/news\"}>\n                    <News/>\n                </Route>\n                <Route path={\"/news\"}>\n                    <News/>\n                </Route>\n                <Route path={\"/welcome\"}>\n                    <Welcome/>\n                </Route>\n                <Route path={\"/wallpaper\"}>\n                    <Wallpaper/>\n                </Route>\n\t\t<Route path={\"/meetingwel\"}>\n\t\t    <Meetingwel/>\n\t\t</Route>\n\t\t<Route path=\"/magicmirror\">\n\t\t    <Mirror/>\n\t\t</Route>\n        <Route path=\"/map\">\n\t\t    <Map />\n\t\t</Route>\n\t\t<Route path=\"/A1\">\n\t\t    <A1 />\n\t\t</Route>\n\t\t<Route path=\"/A2\">\n\t\t    <A2 />\n\t\t</Route>\n\t\t<Route path=\"/A3\">\n\t\t    <A3 />\n\t\t</Route>\n\t\t<Route path=\"/A4\">\n\t\t    <A4 />\n\t\t</Route>\n\t\t<Route path=\"/A5\">\n\t\t    <A5 />\n\t\t</Route>\n        <Route path=\"/P1\">\n\t\t    <P1 />\n\t\t</Route>\n\t\t<Route path=\"/P2\">\n\t\t    <P2 />\n\t\t</Route>\n\t\t<Route path=\"/P3\">\n\t\t    <P3 />\n\t\t</Route>\n\t\t<Route path=\"/P4\">\n\t\t    <P4 />\n\t\t</Route>\n\t\t<Route path=\"/P5\">\n\t\t    <P5 />\n\t\t</Route>\n\t\t<Route path=\"/covid_music\">\n\t\t    <Cm />\n\t\t</Route>\n\t\t<Route path=\"/gpu\">\n\t\t    <Gpu />\n\t\t</Route>\n\t\t<Route path=\"/olympic\">\n\t\t    <Olympic />\n\t\t</Route>\n\t\t<Route path=\"/covidmusic\">\n\t\t    <Covidmusic />\n\t\t</Route>\t\n            </Route>\n        </Router>\n    )\n}\n\n\n// getData();\n\n// ReactDOM.render(\n//         <Map />,\n//     map\n// );\n\nReactDOM.render(\n    <Getpage />,\n    map\n)\n\n// ReactDOM.render(\n//     <Getpage/>\n//     ,map\n// )\n",["262","263"],"/home/zhiguangda/ITS/deckgl/src/components/front_glass/wallpaper.js",["264","265","266","267","268","269","270"],"import React, {Component} from \"react\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\n\n\nexport default class App extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        // 动态加载 css\n        debugger\n        var code='  html,body{margin:0;padding:0;overflow-y:hidden;}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 16.666%;/*三列图片排列*/\\n' +\n            '        height: 100%;\\n' +\n            '        margin: 0;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '\\t\\tfont-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%\\n' +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0\\n' +\n            '    } '\n        loadStyle(code);\n\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both;\"}}>\n            <li><img src=\"/content/wallpaper/6.png\"/></li>\n            <li><img src=\"/content/wallpaper/5.png\"/></li>\n            <li><img src=\"/content/wallpaper/4.png\"/></li>\n            <li><img src=\"/content/wallpaper/3.png\"/></li>\n            <li><img src=\"/content/wallpaper/2.png\"/></li>\n            <li><img src=\"/content/wallpaper/1.png\"/></li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/routeMap.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"// /// app.js\nimport React,{Fragment} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {TripsLayer} from '@deck.gl/geo-layers';\nimport {StaticMap} from 'react-map-gl';\nimport * as d3 from 'd3'\n//\n// // Set your mapbox access token here\n// const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiemhpZ3VhbmdkYSIsImEiOiJjanozdXg0b3EwMHh4M21tcXk2MHlpN3B1In0.lInf8zFl2BsP_bDjMFhf3w';\n//\n// // Initial viewport settings\n// const initialViewState = {\n//     longitude: -122.41669,\n//     latitude: 37.7853,\n//     zoom: 13,\n//     pitch: 0,\n//     bearing: 0\n// };\n//\n// // Data to be used by the LineLayer\n// const data = [   {\n//              waypoints: [{coordinates: [-122.3907988, 37.7664413], timestamp: 1554772579000},\n//                      {coordinates: [-122.3908298,37.7667706], timestamp: 1554772579010},\n//                      {coordinates: [-122.4485672, 37.8040182], timestamp: 1554772580200}\n//              ]\n//      }];\n//\n// class App extends React.Component {\n//     render() {\n//         const layers = [\n//             new TripsLayer({id: 'trips-layer', data,\n//                 getPath:d => d.waypoints.map(p => p.coordinates),\n//                 getTimestamps: d => d.waypoints.map(p => p.timestamp - 1554772579000),\n//                 getColor: [253, 128, 93],\n//                 opacity: 0.8,\n//                 widthMinPixels: 5,\n//                 rounded: true,\n//                 trailLength: 200,\n//                 currentTime: 0\n//\n//             })\n//         ];\n//\n//         return (\n//             <DeckGL\n//                 initialViewState={initialViewState}\n//                 controller={true}\n//                 layers={layers}\n//             >\n//                 <StaticMap mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN} />\n//             </DeckGL>\n//         );\n//     }\n// }\n// ReactDOM.render(<App />, document.getElementById('root'));\nimport {Component} from 'react';\n\nimport {AmbientLight, PointLight, LightingEffect} from '@deck.gl/core';\nimport {ColumnLayer, PolygonLayer,IconLayer,ScatterplotLayer} from '@deck.gl/layers';\n\nimport SliderTraffic from \"./sliderTraffic\";\nimport { Select,SIZE } from \"baseui/select\";\nimport {BaseProvider, LightTheme, styled} from \"baseui\";\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\n\nconst SelectContainer=styled('div',{\n    position: 'absolute',\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    zIndex: 1,\n    top: '50px',\n    right:'10px',\n    width:'15%',\n    // height:'5%'\n});\nconst SelectContainer2=styled('div',{\n    position: 'absolute',\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    zIndex: 1,\n    top: '50px',\n    left:'10px',\n    width:'15%',\n    // height:'5%'\n});\nconst engine = new Styletron();\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiemhpZ3VhbmdkYSIsImEiOiJjanozdXg0b3EwMHh4M21tcXk2MHlpN3B1In0.lInf8zFl2BsP_bDjMFhf3w';\n\nconst DATA_URL =\n    'https://raw.githubusercontent.com/uber-web/kepler.gl-data/master/earthquakes/data.csv';\n\n//加载区域数据\nvar depData=[];\nvar depCenter=[];\n\nlet desCenter=[];\nlet desData=[];\n\nlet depPolygon=[];\nlet desPolygon=[];\n\nlet colorTable=[[128,255,0,255],[255,255,40,255],[255,128,0,255],[255,64,64,255],[255,0,0,255]];\n\n\nconst ICON_MAPPING = {\n    marker: {x: 0, y: 0, width: 32, height: 32, mask: true}\n};\n\n\n\n// Source data CSV\n// const DATA_URL = {\n//     BUILDINGS:\n//         'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/buildings.json', // eslint-disable-line\n//     TRIPS:\n//         'https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/trips-v7.json' // eslint-disable-line\n// };\n\nconst ambientLight = new AmbientLight({\n    color: [255, 255, 255],\n    intensity: 1.0\n});\n\nconst pointLight = new PointLight({\n    color: [255, 255, 255],\n    intensity: 2.0,\n    position: [120.167057, 30.185901, 8000]\n});\n\nconst lightingEffect = new LightingEffect({ambientLight, pointLight});\n\nconst material = {\n    ambient: 0.1,\n    diffuse: 0.9,\n    shininess: 64,\n    specularColor: [60, 64, 70]\n};\n\nconst DEFAULT_THEME = {\n    buildingColor: [74, 80, 87],\n    trailColor0: [253, 128, 93],\n    trailColor1: [23, 184, 190],\n    material,\n    effects: [lightingEffect]\n};\n\nconst INITIAL_VIEW_STATE = {\n    longitude:  120.207057,\n    latitude: 30.225901,\n    // longitude:-74.00823,\n    // latitude: 40.71351,\n    zoom: 12.4,\n    pitch: 45,\n    bearing: 0\n};\n\n//柱状图的颜色\nconst colorRange = [\n    [1, 152, 189],\n    [73, 227, 206],\n    [216, 254, 181],\n    [254, 237, 177],\n    [254, 173, 84],\n    [209, 55, 78]\n];\n\n\n\n\n// d3.json(\"https://api.openaq.org/v1/latest?limit=10000\").then(data=>{\n//     console.log(data)\n// })\n\n\nvar Routes=[];\nfunction Rad(d){\n    return d * Math.PI / 180.0;//经纬度转换成三角函数中度分表形式。\n}\nvar getDistance=function(lng1,lat1,lng2,lat2){\n    var radLat1 = Rad(lat1);\n    var radLat2 = Rad(lat2);\n    var a = radLat1 - radLat2;\n    var  b = Rad(lng1) - Rad(lng2);\n    var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +\n        Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));\n    s = s *6378.137 ;// EARTH_RADIUS;\n    s = Math.round(s * 10000) / 10000; //输出为公里\n    //s=s.toFixed(4);\n    return s;\n}\n\n// var od=[];\n// var getRoutedata=function(start,end) {\n//\n//     var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + depCenter[start][0] + ',' + depCenter[start][1] + ';' + desCenter[end][0] + ',' + desCenter[end][1] + '?steps=true&geometries=geojson&access_token=' + 'pk.eyJ1IjoiemhpZ3VhbmdkYSIsImEiOiJjanozdXg0b3EwMHh4M21tcXk2MHlpN3B1In0.lInf8zFl2BsP_bDjMFhf3w';\n//\n//     // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n//     var req = new XMLHttpRequest();\n//     req.open('GET', url, true);\n//     req.send()\n//     req.onload = function () {\n//         var json = JSON.parse(req.response);\n//         // console.log('route:',json)\n//         var data = json.routes[0];\n//         var route = data.geometry.coordinates;\n//         var timestamps=[0];//先设置每条路径1000stamp\n//         for(var i=0;i<route.length;i++){\n//             if(i!==0){\n//                 var dist=getDistance(route[i-1][0],route[i-1][1],route[i][0],route[i][1])*50;\n//                 timestamps.push(dist+timestamps[i-1])\n//             }\n//         }\n//         var geojson = {\n//             'path': route,\n//             'timestamps':timestamps,\n//         };\n//         console.log(geojson)\n//         Routes.push(geojson)\n//\n//     }\n// }\n//getRoutedata([120.167057,30.185901], [120.302548\t,30.399632])\n\nvar saveJson={}\n\n// var getRoute=new function(time) {\n//     // var gets = [];\n//     d3.csv(\"./edge_dep_csv.csv\").then(function (data) {\n//\n//         let re=/([-+]?[0-9]*\\.?[0-9]+)/g;\n//         console.log('data1:',data)\n//         data.forEach(d=>{\n//             let tmp=d.value.match(re)\n//             let tmpData=[];\n//             for(let i=0;i<tmp.length-1;i+=2){\n//                 tmpData.push([parseFloat(tmp[i+1]),parseFloat(tmp[i])])\n//             }\n//             depData.push(tmpData)\n//         })\n//         depData.forEach(d=>{\n//             let sumlong=0\n//             let sumlat=0;\n//             d.forEach(data=>{\n//                 sumlong+=data[0];\n//                 sumlat+=data[1];\n//             })\n//             depCenter.push([sumlong/d.length,sumlat/d.length])\n//         })\n//         d3.csv(\"./edge_des_csv.csv\").then(function (data) {\n//             let re=/([-+]?[0-9]*\\.?[0-9]+)/g\n//             console.log('data2:',data)\n//             data.forEach(d=>{\n//                 let tmp=d.value.match(re)\n//                 let tmpData=[];\n//                 for(let i=0;i<tmp.length-1;i+=2){\n//                     tmpData.push([parseFloat(tmp[i+1]),parseFloat(tmp[i])])\n//                 }\n//                 desData.push(tmpData)\n//             })\n//             desData.forEach(d=>{\n//                 let sumlong=0;\n//                 let sumlat=0;\n//                 d.forEach(data=>{\n//                     sumlong+=data[0];\n//                     sumlat+=data[1];\n//                 })\n//                 desCenter.push([sumlong/d.length,sumlat/d.length])\n//             });\n//             // d3.json('http://localhost:5000/data/12:00:00').then(function(data){\n//             //     data.forEach(d=>{\n//             //         var tmp=d.split(',');\n//             //         if(tmp[0]!=-1 && tmp[1]!=-1) {\n//             //             if(tmp[0]>46&&tmp[0]<=60){\n//             //              //   if (tmp[2] !== '0') {\n//             //                 var urlNow = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + depCenter[tmp[0]][0].toFixed(6) + ',' + depCenter[tmp[0]][1].toFixed(6) + ';' + desCenter[tmp[1]][0].toFixed(6) + ',' + desCenter[tmp[1]][1].toFixed(6) + '?steps=true&geometries=geojson&access_token=' + MAPBOX_TOKEN;\n//             //                 gets.push($.ajax({\n//             //                     type: 'GET',\n//             //                     url: urlNow,\n//             //                     success: function (r) {\n//             //                         console.log('r:', r)\n//             //                         //var json = JSON.parse(data);\n//             //                         var plan = r.routes[0];\n//             //                         var route = plan.geometry.coordinates;\n//             //                         var timestamps = [0];//先设置每条路径1000stamp\n//             //                         for (var i = 0; i < route.length; i++) {\n//             //                             if (i !== 0) {\n//             //                                 var dist = getDistance(route[i - 1][0], route[i - 1][1], route[i][0], route[i][1]) * 50;\n//             //                                 timestamps.push(dist + timestamps[i - 1])\n//             //                             }\n//             //                         }\n//             //                         var geojson = {\n//             //                             'vendor': 1,\n//             //                             'path': route,\n//             //                             'timestamps': timestamps,\n//             //\n//             //                         };\n//             //                         console.log(geojson)\n//             //                         Routes.push(geojson)\n//             //                         saveJson[tmp[0]+','+tmp[1]] = geojson\n//             //                     },\n//             //                     error:function(){\n//             //                         console.log('err')\n//             //                     }\n//             //                 }));\n//             //\n//             //            // }\n//             //             }\n//             //         }\n//             //     })\n//             //     // url.forEach(function(value) {\n//             //     //     console.log('url:',value)\n//             //     //     gets.push($.ajax({\n//             //     //         type: 'GET',\n//             //     //         url: value,\n//             //     //         success: function(data) {\n//             //     //             console.log('data:',data)\n//             //     //             //var json = JSON.parse(data);\n//             //     //             var plan = data.routes[0];\n//             //     //             var route = plan.geometry.coordinates;\n//             //     //             var timestamps=[0];//先设置每条路径1000stamp\n//             //     //             for(var i=0;i<route.length;i++){\n//             //     //                 if(i!==0){\n//             //     //                     var dist=getDistance(route[i-1][0],route[i-1][1],route[i][0],route[i][1])*50;\n//             //     //                     timestamps.push(dist+timestamps[i-1])\n//             //     //                 }\n//             //     //             }\n//             //     //             var geojson = {\n//             //     //                 'vendor':1,\n//             //     //                 'path': route,\n//             //     //                 'timestamps':timestamps,\n//             //     //\n//             //     //             };\n//             //     //             console.log(geojson)\n//             //     //             Routes.push(geojson)\n//             //     //\n//             //     //\n//             //     //         }\n//             //     //     }));\n//             //     // });\n//             //\n//             //     $.when.apply($, gets).then(function() {\n//             //         console.log(saveJson)\n//             //         var jsonData=JSON.stringify(saveJson)\n//             //         download(jsonData,'route.json','text/plain')\n//             //         console.log('Routes:',Routes)\n//             //         resolve(Routes);\n//             //         // resolve([\n//             //         //     {\n//             //         //         \"vendor\": 1,\n//             //         //         \"path\": [\n//             //         //             [120.167057,30.185901],\n//             //         //             [120.165752,30.185723],\n//             //         //             [120.16581,30.188491],\n//             //         //             [120.190417,30.198224],\n//             //         //             [120.191971\t,30.204],\n//             //         //             [120.189622\t,30.20767],\n//             //         //             [120.182369\t,30.218973],\n//             //         //             [120.180889\t,30.222601],\n//             //         //             [120.200108\t,30.306856],\n//             //         //             [120.23477\t,30.311914],\n//             //         //             [120.246959\t,30.316748],\n//             //         //             [120.309708\t,30.387518],\n//             //         //             [120.312426\t,30.39154],\n//             //         //             [120.309069\t,30.400897],\n//             //         //             [120.302548\t,30.399632],],\n//             //         //\n//             //         //             \"timestamps\": [ 838, 867.979, 947.036, 962.913, 996.971, 1032.865, 1060.03, 1077.834, 1205.212, 1210.243, 1295.677, 1315.668, 1431.726, 1480.25, 1488.658]\n//             //         //     }])\n//             //     });\n//             // })\n//\n//             d3.json('http://localhost:5000/data/'+time+':00:00').then(function(data){\n//                 var count=0;\n//                 d3.json('./10.json').then(function (map) {\n//                    // console.log('map:',map)\n//                     data.forEach(d=>{\n//                         var tmp=d.split(',');\n//                         if(tmp[0]!=-1 && tmp[1]!=-1) {\n//                             if(parseInt(tmp[2])>=5){\n//                                 count++;\n//                                 var key=tmp[0]+','+tmp[1];\n//                                 console.log(map[key]);\n//                                 Routes.push(map[key]);\n//                             }\n//                             // if(tmp[0]>40&&tmp[0]<=60&&tmp[1]>40&&tmp[1]<=60){\n//                                 //   if (tmp[2] !== '0') {\n//                                 // var urlNow = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + depCenter[tmp[0]][0].toFixed(6) + ',' + depCenter[tmp[0]][1].toFixed(6) + ';' + desCenter[tmp[1]][0].toFixed(6) + ',' + desCenter[tmp[1]][1].toFixed(6) + '?steps=true&geometries=geojson&access_token=' + MAPBOX_TOKEN;\n//                                 // gets.push($.ajax({\n//                                 //     type: 'GET',\n//                                 //     url: urlNow,\n//                                 //     success: function (r) {\n//                                 //         console.log('r:', r)\n//                                 //         //var json = JSON.parse(data);\n//                                 //         var plan = r.routes[0];\n//                                 //         var route = plan.geometry.coordinates;\n//                                 //         var timestamps = [0];//先设置每条路径1000stamp\n//                                 //         for (var i = 0; i < route.length; i++) {\n//                                 //             if (i !== 0) {\n//                                 //                 var dist = getDistance(route[i - 1][0], route[i - 1][1], route[i][0], route[i][1]) * 50;\n//                                 //                 timestamps.push(dist + timestamps[i - 1])\n//                                 //             }\n//                                 //         }\n//                                 //         var geojson = {\n//                                 //             'vendor': 1,\n//                                 //             'path': route,\n//                                 //             'timestamps': timestamps,\n//                                 //\n//                                 //         };\n//                                 //         console.log(geojson)\n//                                 //         Routes.push(geojson)\n//                                 //         saveJson[tmp[0]+','+tmp[1]] = geojson\n//                                 //     },\n//                                 //     error:function(){\n//                                 //         console.log('err')\n//                                 //     }\n//                                 // }));\n//\n//                                 // }\n//                            // }\n//                         }\n//                     })\n//                     console.log('count:',count)\n//                    // console.log(Routes)\n//                 })\n//                 // url.forEach(function(value) {\n//                 //     console.log('url:',value)\n//                 //     gets.push($.ajax({\n//                 //         type: 'GET',\n//                 //         url: value,\n//                 //         success: function(data) {\n//                 //             console.log('data:',data)\n//                 //             //var json = JSON.parse(data);\n//                 //             var plan = data.routes[0];\n//                 //             var route = plan.geometry.coordinates;\n//                 //             var timestamps=[0];//先设置每条路径1000stamp\n//                 //             for(var i=0;i<route.length;i++){\n//                 //                 if(i!==0){\n//                 //                     var dist=getDistance(route[i-1][0],route[i-1][1],route[i][0],route[i][1])*50;\n//                 //                     timestamps.push(dist+timestamps[i-1])\n//                 //                 }\n//                 //             }\n//                 //             var geojson = {\n//                 //                 'vendor':1,\n//                 //                 'path': route,\n//                 //                 'timestamps':timestamps,\n//                 //\n//                 //             };\n//                 //             console.log(geojson)\n//                 //             Routes.push(geojson)\n//                 //\n//                 //\n//                 //         }\n//                 //     }));\n//                 // });\n//\n//                 // $.when.apply($, gets).then(function() {\n//                 //     console.log(saveJson)\n//                 //     var jsonData=JSON.stringify(saveJson)\n//                 //     download(jsonData,'route.json','text/plain')\n//                 //     console.log('Routes:',Routes)\n//                 //     resolve(Routes);\n//                 //\n//                 // });\n//             })\n//         });\n//     });\n//\n// };\n\n\n\n//每条路径按流量加线的数量\nlet getStep=function(step,trip){\n    let newTrip=[]\n    trip.forEach(d=>{\n        d+=3600/step;\n        newTrip.push(d)\n    })\n    return newTrip;\n}\n\n\nfunction getArea(){\n    d3.csv(\"./edge_dep_csv.csv\").then(function (data) {\n        let re = /([-+]?[0-9]*\\.?[0-9]+)/g;\n        console.log('data1:', data)\n        data.forEach((d,index) => {\n            let tmp = d.value.match(re)\n            let tmpData = [];\n            for (let i = 0; i < tmp.length - 1; i += 2) {\n                tmpData.push([parseFloat(tmp[i + 1]), parseFloat(tmp[i])])\n            }\n            depData.push(tmpData)\n            depPolygon.push({\n                contour:tmpData,\n                in:0,\n                out:0,\n                number:index\n            })\n        })\n        depData.forEach(d => {\n            let sumlong = 0\n            let sumlat = 0;\n            d.forEach(data => {\n                sumlong += data[0];\n                sumlat += data[1];\n            })\n            depCenter.push([sumlong / d.length, sumlat / d.length])\n        })\n        d3.csv(\"./edge_des_csv.csv\").then(function (data) {\n            let re = /([-+]?[0-9]*\\.?[0-9]+)/g\n            console.log('data2:', data)\n            data.forEach((d,index)=> {\n                let tmp = d.value.match(re)\n                let tmpData = [];\n                for (let i = 0; i < tmp.length - 1; i += 2) {\n                    tmpData.push([parseFloat(tmp[i + 1]), parseFloat(tmp[i])])\n                }\n                desData.push(tmpData)\n\n                desPolygon.push({\n                    contour:tmpData,\n                    in:0,\n                    out:0,\n                    number:index\n                })\n\n\n            });\n            desData.forEach(d => {\n                let sumlong = 0;\n                let sumlat = 0;\n                d.forEach(data => {\n                    sumlong += data[0];\n                    sumlat += data[1];\n                })\n                desCenter.push([sumlong / d.length, sumlat / d.length])\n            });\n        })\n})\n}\n//获取流量数据\nfunction getRoute(time) {\n    return new Promise(resolve => {\n        // var gets = [];\n        // d3.json('http://localhost:5000/data/'+time).then(function (data) {\n        d3.json('http://10.72.100.6:8888/data/'+time).then(function (data) {\n\n            var count = 0;\n            d3.json('./10.json').then(function (map) {\n                // console.log('map:',map)\n                var routeData=[];\n                var sumMax=0;\n                data.forEach(d => {\n                    var tmp = d.split(',');\n                    if (tmp[0] != -1 && tmp[1] != -1) {\n                        if (parseInt(tmp[2]) >= 2) {\n\n                            depPolygon[parseInt(tmp[0])].out+=parseInt(tmp[2]);\n                            desPolygon[parseInt(tmp[1])].in+=parseInt(tmp[2]);\n                            count++;\n                            var key = tmp[0] + ',' + tmp[1];\n\n                            //  console.log(map[key]);\n                            var pre=[];\n                            var sum=0;\n                            var countD=[];\n                            map[key].path.forEach(d=>{\n                                if(pre.length==0){\n                                    pre=d\n                                }\n                                else{\n                                    // console.log('pre:',pre);\n                                    var m=getDistance(pre[0],pre[1],d[0],d[1]);\n                                    countD.push(m);\n                                    sum+=m;\n                                    pre=d;\n                                }\n                            });\n                            if(sum>=sumMax){\n                                sumMax=sum\n                            }\n//control color\n                            if(parseInt(tmp[2]) >= 2&& parseInt(tmp[2]) < 5){\n                                routeData.push({\n                                    'od':parseInt(tmp[0])+','+parseInt(tmp[1]),\n                                    'traffic':parseInt(tmp[2]),\n                                    \"color\":0,\n                                    \"path\":map[key].path,\n                                    \"timestamps\":countD\n                                })\n                                // console.log('path',map[key].path)\n                            }\n\n                            else if(parseInt(tmp[2]) >=5&&parseInt(tmp[2]) <20){\n                                routeData.push({\n                                    'od':parseInt(tmp[0])+','+parseInt(tmp[1]),\n                                    'traffic':parseInt(tmp[2]),\n                                    \"color\":1,\n                                    \"path\":map[key].path,\n                                    \"timestamps\":countD\n                                })\n                            }\n                            else if(parseInt(tmp[2]) >=20&&parseInt(tmp[2]) <100){\n                                routeData.push({\n                                    'od':parseInt(tmp[0])+','+parseInt(tmp[1]),\n                                    'traffic':parseInt(tmp[2]),\n                                    \"color\":2,\n                                    \"path\":map[key].path,\n                                    \"timestamps\":countD\n                                })\n                            }\n                            else if(parseInt(tmp[2]) >= 100&&parseInt(tmp[2]) <150){\n                                routeData.push({\n                                    'od':parseInt(tmp[0])+','+parseInt(tmp[1]),\n                                    'traffic':parseInt(tmp[2]),\n                                    \"color\":3,\n                                    \"path\":map[key].path,\n                                    \"timestamps\":countD\n                                })\n                            }\n                            else if(parseInt(tmp[2]) >= 150){\n                                routeData.push({\n                                    'od':parseInt(tmp[0])+','+parseInt(tmp[1]),\n                                    'traffic':parseInt(tmp[2]),\n                                    \"color\":4,\n                                    \"path\":map[key].path,\n                                    \"timestamps\":countD\n                                })\n                            }\n\n                        }\n\n                    }\n                });\n                let newRoutes=[];\n                //按照流量多加动画效果\n                routeData.forEach(d=>{\n                    var tmpTime=[time*3600];\n                    let preIndex=0;\n                    // console.log('timestamps:',d.timestamps)\n                    d.timestamps.forEach(t=>{\n                        // console.log('t:',t)\n                        tmpTime.push(tmpTime[preIndex]+(3600/sumMax)*t)//加上当前已经过去的小时的时间\n                        preIndex++;\n                    });\n                    d.timestamps=tmpTime;\n                    let tmpStep=tmpTime;\n                    for(let i=0;i<(d.traffic);i++){\n                        tmpStep=getStep((d.traffic),tmpStep);\n                        newRoutes.push({\n                            'od':d.od,\n                            'traffic':d.traffic,\n                            \"color\":d.color,\n                            \"path\":d.path,\n                            \"timestamps\":tmpStep\n                        })\n                    }\n                });\n                newRoutes.forEach(d=>{\n                    routeData.push(d)\n                })\n                // routeData.forEach(d=>{\n                //     Routes.push(d)\n                // })\n                Routes=routeData;\n                console.log('count:', count);\n                console.log('Routes:', Routes)\n                resolve('0')\n                // console.log(Routes)\n            })\n\n        })\n\n    });\n}\n\n\nlet predict_origin=new Map();\nlet predict_des=new Map();\n\n//获取预测流量数据\nfunction getPredictData(){\n    return new Promise( resolve => {\n        d3.csv('./Traffic_Predict_Data/prediction1-origin.csv').then(d=>{\n            d.map((x,index)=>{\n                // console.log('time',x.DepTime);\n                let date=new Date(x.DepTime);\n                // console.log('hour',date.getHours())\n                let hour=date.getHours();\n                if(!predict_origin.has(hour)){\n                    predict_origin.set(hour,{})\n                }\n                let tmp=predict_origin.get(hour)\n                tmp[x.Origin]=x.Trips\n            })\n            d3.csv('./Traffic_Predict_Data/prediction2-dep.csv').then(d=>{d.map((x,index)=>{\n                let date=new Date(x.DepTime);\n                // console.log('hour',date.getHours())\n                let hour=date.getHours();\n                    if(!predict_des.has(hour)){\n                        predict_des.set(hour,{})\n                    }\n                    let tmp=predict_des.get(hour)\n                        tmp[x.Destination]=x.Trips;\n                    });\n                resolve();\n                }\n            )\n            }\n        )\n    })\n}\n\nlet realOrg=new Map()\nlet realDes=new Map()\n//获取真实流量数据\nfunction getRealData(){\n    d3.csv('./Traffic_Predict_Data/origin.csv').then(d=>{\n            d.map((x,index)=>{\n                // console.log('time',x.DepTime);\n                let date=new Date(x.DepTime);\n                // console.log('hour',date.getHours())\n                let hour=date.getHours();\n                if(!realOrg.has(hour)){\n                    realOrg.set(hour,{})\n                }\n                let tmp=realOrg.get(hour)\n                tmp[x.Origin]=x.Trips\n            })\n            d3.csv('./Traffic_Predict_Data/destination.csv').then(d=>{d.map((x,index)=>{\n                    let date=new Date(x.DepTime);\n                    // console.log('hour',date.getHours())\n                    let hour=date.getHours();\n                    if(!realDes.has(hour)){\n                        realDes.set(hour,{})\n                    }\n                    let tmp=realDes.get(hour)\n                    tmp[x.Destination]=x.Trips;\n                });\n                }\n            )\n        }\n    )\n}\n\nlet blockRoute=[]\nlet count=[]\nlet blockData=new Map();\nfunction getBlockData(){\n    d3.csv('./blockdetect/anomalyFile.csv').then(d=>{\n        d.map(x=>{\n            console.log(x)\n            console.log(x['occurencingTime'])\n            let da=new Date(x['occurencingTime']);\n            console.log('da',da)\n            let h=da.getHours();\n            let m=da.getMinutes();\n            let s=da.getSeconds();\n            let t=h*3600+m*60+s;\n            blockData.set(t,[parseFloat(x['longitude']),parseFloat(x['latitude'])])\n        })\n        console.log(blockData)\n    })\n}\nfunction getBlockRoute(){\n    return new Promise(resolve => {\n        d3.csv('https://files.momodel.cn/tianyuan/GPS_588_merge.csv').then(d=>{\n            console.log(d)\n            let path=[];\n            let timestamps=[]\n            let m=0;\n            d.map((x,index)=>{\n                // console.log('x',x);\n                // console.log('lat',x.lat)\n                let da=new Date(x['date']);\n                let h=da.getHours();\n                let m=da.getMinutes();\n                let s=da.getSeconds();\n                let t=h*3600+m*60+s;\n                if(count.indexOf(t)===-1&&m%5===0){\n                    m++;\n                    count.push(t)\n                    timestamps.push(t)\n                    path.push([parseFloat(x['Long']),parseFloat(x['Lat'])])\n                    if(m%1===0){\n                        blockData.set(t,[parseFloat(x['Long']),parseFloat(x['Lat'])])\n\n                    }\n                }\n\n            })\n            blockRoute.push({\n                path:path,\n                timestamps:timestamps,\n                color:0\n            })\n\n\n            resolve();\n        })\n\n    })\n\n\n\n\n\n\n}\n\n//设置预测流量数据\nfunction setPredictData(hour){\n    console.log('org',predict_origin);\n    let data=[];\n    let tmp=predict_origin.get(parseInt(hour));\n    console.log('tmp',tmp)\n    for(let key in tmp){\n        // console.log('key',key)\n        data.push({\n            centroid: depCenter[parseInt(key)],\n            value:tmp[key]\n        })\n    }\n    // console.log('data',data)\n    return data;\n}\n//设置实际流量数据\nfunction setRealData(hour){\n    // console.log('org',predict_origin)\n    let data=[];\n    let tmp=realOrg.get(parseInt(hour));\n    console.log('tmp',tmp)\n    for(let key in tmp){\n        // console.log('key',key)\n        data.push({\n            centroid: depCenter[parseInt(key)],\n            value:tmp[key]\n        })\n    }\n    console.log('data',data)\n    return data;\n\n}\n\n\n\n// getRoute.then(function () {\n//     console.log('get')\n// });\n\nlet tmpIcon=[];\n\nexport default class RouteMap extends Component {\n\n    constructor(props) {\n        super(props);\n         // const [value, setValue] = React.useState([0]);\n        this.state = {\n            time: 18000,\n            hour:-1,\n            depV:false,\n            desV:false,\n            area:[],\n            options:[],\n            block:false,\n            pre_org:[],\n            pre_des:[],\n            real_org:[],\n            real:false,\n            showPredict:true,\n            blockIcon:[],\n            showRoute:true\n\n\n        };\n    }\n    componentDidMount() {\n        getArea();\n        let p= getPredictData();\n        p.then(function() {\n            // this.setState({\n            //     pre_origin: predict_origin,\n            //     pre_des : predict_des\n            // })\n        }.bind(this))\n\n        getRealData();\n\n        let p2=getBlockRoute();\n        p2.then(function () {\n            console.log('blockRoute',blockRoute)\n\n            this.setState({\n                blockRoute:blockRoute\n            })\n        }.bind(this) )\n\n\n        let button=document.getElementById('start')\n        console.log(button)\n\n        setTimeout(()=>{button.click()},1200)\n\n        // getBlockData();\n\n\n        // this.setState({\n        //     depPolygon:depPolygon,\n        //     desPolygon:desPolygon\n        // })\n    }\n\n    componentWillUnmount() {\n        // if (this._animationFrame) {\n        //     window.cancelAnimationFrame(this._animationFrame);\n        // }\n    }\n\n//get route from mapbox\n    // getRoute(){\n    //     d3.csv(\"./edge_dep_csv.csv\").then(function (data) {\n    //\n    //         let re=/([-+]?[0-9]*\\.?[0-9]+)/g;\n    //         console.log('data1:',data)\n    //         data.forEach(d=>{\n    //             let tmp=d.value.match(re)\n    //             let tmpData=[];\n    //             for(let i=0;i<tmp.length-1;i+=2){\n    //                 tmpData.push([parseFloat(tmp[i+1]),parseFloat(tmp[i])])\n    //             }\n    //             depData.push(tmpData)\n    //         })\n    //         depData.forEach(d=>{\n    //             let sumlong=0\n    //             let sumlat=0;\n    //             d.forEach(data=>{\n    //                 sumlong+=data[0];\n    //                 sumlat+=data[1];\n    //             })\n    //             depCenter.push([sumlong/d.length,sumlat/d.length])\n    //         })\n    //         d3.csv(\"./edge_des_csv.csv\").then(function (data) {\n    //             let re=/([-+]?[0-9]*\\.?[0-9]+)/g\n    //             console.log('data2:',data)\n    //             data.forEach(d=>{\n    //                 let tmp=d.value.match(re)\n    //                 let tmpData=[];\n    //                 for(let i=0;i<tmp.length-1;i+=2){\n    //                     tmpData.push([parseFloat(tmp[i+1]),parseFloat(tmp[i])])\n    //                 }\n    //                 desData.push(tmpData)\n    //             })\n    //             desData.forEach(d=>{\n    //                 let sumlong=0;\n    //                 let sumlat=0;\n    //                 d.forEach(data=>{\n    //                     sumlong+=data[0];\n    //                     sumlat+=data[1];\n    //                 })\n    //                 desCenter.push([sumlong/d.length,sumlat/d.length])\n    //             });\n    //             // d3.json('http://localhost:5000/data/12:00:00').then(function(data){\n    //             //     data.forEach(d=>{\n    //             //         var tmp=d.split(',');\n    //             //         if(tmp[0]!=-1 && tmp[1]!=-1) {\n    //             //             if(tmp[0]>46&&tmp[0]<=60){\n    //             //              //   if (tmp[2] !== '0') {\n    //             //                 var urlNow = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + depCenter[tmp[0]][0].toFixed(6) + ',' + depCenter[tmp[0]][1].toFixed(6) + ';' + desCenter[tmp[1]][0].toFixed(6) + ',' + desCenter[tmp[1]][1].toFixed(6) + '?steps=true&geometries=geojson&access_token=' + MAPBOX_TOKEN;\n    //             //                 gets.push($.ajax({\n    //             //                     type: 'GET',\n    //             //                     url: urlNow,\n    //             //                     success: function (r) {\n    //             //                         console.log('r:', r)\n    //             //                         //var json = JSON.parse(data);\n    //             //                         var plan = r.routes[0];\n    //             //                         var route = plan.geometry.coordinates;\n    //             //                         var timestamps = [0];//先设置每条路径1000stamp\n    //             //                         for (var i = 0; i < route.length; i++) {\n    //             //                             if (i !== 0) {\n    //             //                                 var dist = getDistance(route[i - 1][0], route[i - 1][1], route[i][0], route[i][1]) * 50;\n    //             //                                 timestamps.push(dist + timestamps[i - 1])\n    //             //                             }\n    //             //                         }\n    //             //                         var geojson = {\n    //             //                             'vendor': 1,\n    //             //                             'path': route,\n    //             //                             'timestamps': timestamps,\n    //             //\n    //             //                         };\n    //             //                         console.log(geojson)\n    //             //                         Routes.push(geojson)\n    //             //                         saveJson[tmp[0]+','+tmp[1]] = geojson\n    //             //                     },\n    //             //                     error:function(){\n    //             //                         console.log('err')\n    //             //                     }\n    //             //                 }));\n    //             //\n    //             //            // }\n    //             //             }\n    //             //         }\n    //             //     })\n    //             //     // url.forEach(function(value) {\n    //             //     //     console.log('url:',value)\n    //             //     //     gets.push($.ajax({\n    //             //     //         type: 'GET',\n    //             //     //         url: value,\n    //             //     //         success: function(data) {\n    //             //     //             console.log('data:',data)\n    //             //     //             //var json = JSON.parse(data);\n    //             //     //             var plan = data.routes[0];\n    //             //     //             var route = plan.geometry.coordinates;\n    //             //     //             var timestamps=[0];//先设置每条路径1000stamp\n    //             //     //             for(var i=0;i<route.length;i++){\n    //             //     //                 if(i!==0){\n    //             //     //                     var dist=getDistance(route[i-1][0],route[i-1][1],route[i][0],route[i][1])*50;\n    //             //     //                     timestamps.push(dist+timestamps[i-1])\n    //             //     //                 }\n    //             //     //             }\n    //             //     //             var geojson = {\n    //             //     //                 'vendor':1,\n    //             //     //                 'path': route,\n    //             //     //                 'timestamps':timestamps,\n    //             //     //\n    //             //     //             };\n    //             //     //             console.log(geojson)\n    //             //     //             Routes.push(geojson)\n    //             //     //\n    //             //     //\n    //             //     //         }\n    //             //     //     }));\n    //             //     // });\n    //             //\n    //             //     $.when.apply($, gets).then(function() {\n    //             //         console.log(saveJson)\n    //             //         var jsonData=JSON.stringify(saveJson)\n    //             //         download(jsonData,'route.json','text/plain')\n    //             //         console.log('Routes:',Routes)\n    //             //         resolve(Routes);\n    //             //         // resolve([\n    //             //         //     {\n    //             //         //         \"vendor\": 1,\n    //             //         //         \"path\": [\n    //             //         //             [120.167057,30.185901],\n    //             //         //             [120.165752,30.185723],\n    //             //         //             [120.16581,30.188491],\n    //             //         //             [120.190417,30.198224],\n    //             //         //             [120.191971\t,30.204],\n    //             //         //             [120.189622\t,30.20767],\n    //             //         //             [120.182369\t,30.218973],\n    //             //         //             [120.180889\t,30.222601],\n    //             //         //             [120.200108\t,30.306856],\n    //             //         //             [120.23477\t,30.311914],\n    //             //         //             [120.246959\t,30.316748],\n    //             //         //             [120.309708\t,30.387518],\n    //             //         //             [120.312426\t,30.39154],\n    //             //         //             [120.309069\t,30.400897],\n    //             //         //             [120.302548\t,30.399632],],\n    //             //         //\n    //             //         //             \"timestamps\": [ 838, 867.979, 947.036, 962.913, 996.971, 1032.865, 1060.03, 1077.834, 1205.212, 1210.243, 1295.677, 1315.668, 1431.726, 1480.25, 1488.658]\n    //             //         //     }])\n    //             //     });\n    //             // })\n    //\n    //             d3.json('http://localhost:5000/data/0:00:00').then(function(data){\n    //                 var count=0;\n    //                 d3.json('./10.json').then(function (map) {\n    //                     // console.log('map:',map)\n    //                     data.forEach(d=>{\n    //                         var tmp=d.split(',');\n    //                         if(tmp[0]!=-1 && tmp[1]!=-1) {\n    //                             if(parseInt(tmp[2])>=5){\n    //                                 count++;\n    //                                 var key=tmp[0]+','+tmp[1];\n    //                                 console.log(map[key]);\n    //                                 Routes.push(map[key]);\n    //                             }\n    //                             // if(tmp[0]>40&&tmp[0]<=60&&tmp[1]>40&&tmp[1]<=60){\n    //                             //   if (tmp[2] !== '0') {\n    //                             // var urlNow = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + depCenter[tmp[0]][0].toFixed(6) + ',' + depCenter[tmp[0]][1].toFixed(6) + ';' + desCenter[tmp[1]][0].toFixed(6) + ',' + desCenter[tmp[1]][1].toFixed(6) + '?steps=true&geometries=geojson&access_token=' + MAPBOX_TOKEN;\n    //                             // gets.push($.ajax({\n    //                             //     type: 'GET',\n    //                             //     url: urlNow,\n    //                             //     success: function (r) {\n    //                             //         console.log('r:', r)\n    //                             //         //var json = JSON.parse(data);\n    //                             //         var plan = r.routes[0];\n    //                             //         var route = plan.geometry.coordinates;\n    //                             //         var timestamps = [0];//先设置每条路径1000stamp\n    //                             //         for (var i = 0; i < route.length; i++) {\n    //                             //             if (i !== 0) {\n    //                             //                 var dist = getDistance(route[i - 1][0], route[i - 1][1], route[i][0], route[i][1]) * 50;\n    //                             //                 timestamps.push(dist + timestamps[i - 1])\n    //                             //             }\n    //                             //         }\n    //                             //         var geojson = {\n    //                             //             'vendor': 1,\n    //                             //             'path': route,\n    //                             //             'timestamps': timestamps,\n    //                             //\n    //                             //         };\n    //                             //         console.log(geojson)\n    //                             //         Routes.push(geojson)\n    //                             //         saveJson[tmp[0]+','+tmp[1]] = geojson\n    //                             //     },\n    //                             //     error:function(){\n    //                             //         console.log('err')\n    //                             //     }\n    //                             // }));\n    //\n    //                             // }\n    //                             // }\n    //                         }\n    //                     })\n    //                     console.log('count:',count)\n    //                     this.layers[1].setData(Routes)\n    //                     // resolve(Routes);\n    //                     // console.log(Routes)\n    //                 })\n    //\n    //                 // url.forEach(function(value) {\n    //                 //     console.log('url:',value)\n    //                 //     gets.push($.ajax({\n    //                 //         type: 'GET',\n    //                 //         url: value,\n    //                 //         success: function(data) {\n    //                 //             console.log('data:',data)\n    //                 //             //var json = JSON.parse(data);\n    //                 //             var plan = data.routes[0];\n    //                 //             var route = plan.geometry.coordinates;\n    //                 //             var timestamps=[0];//先设置每条路径1000stamp\n    //                 //             for(var i=0;i<route.length;i++){\n    //                 //                 if(i!==0){\n    //                 //                     var dist=getDistance(route[i-1][0],route[i-1][1],route[i][0],route[i][1])*50;\n    //                 //                     timestamps.push(dist+timestamps[i-1])\n    //                 //                 }\n    //                 //             }\n    //                 //             var geojson = {\n    //                 //                 'vendor':1,\n    //                 //                 'path': route,\n    //                 //                 'timestamps':timestamps,\n    //                 //\n    //                 //             };\n    //                 //             console.log(geojson)\n    //                 //             Routes.push(geojson)\n    //                 //\n    //                 //\n    //                 //         }\n    //                 //     }));\n    //                 // });\n    //\n    //                 // $.when.apply($, gets).then(function() {\n    //                 //     console.log(saveJson)\n    //                 //     var jsonData=JSON.stringify(saveJson)\n    //                 //     download(jsonData,'route.json','text/plain')\n    //                 //     console.log('Routes:',Routes)\n    //                 //     resolve(Routes);\n    //                 //     // resolve([\n    //                 //     //     {\n    //                 //     //         \"vendor\": 1,\n    //                 //     //         \"path\": [\n    //                 //     //             [120.167057,30.185901],\n    //                 //     //             [120.165752,30.185723],\n    //                 //     //             [120.16581,30.188491],\n    //                 //     //             [120.190417,30.198224],\n    //                 //     //             [120.191971\t,30.204],\n    //                 //     //             [120.189622\t,30.20767],\n    //                 //     //             [120.182369\t,30.218973],\n    //                 //     //             [120.180889\t,30.222601],\n    //                 //     //             [120.200108\t,30.306856],\n    //                 //     //             [120.23477\t,30.311914],\n    //                 //     //             [120.246959\t,30.316748],\n    //                 //     //             [120.309708\t,30.387518],\n    //                 //     //             [120.312426\t,30.39154],\n    //                 //     //             [120.309069\t,30.400897],\n    //                 //     //             [120.302548\t,30.399632],],\n    //                 //     //\n    //                 //     //             \"timestamps\": [ 838, 867.979, 947.036, 962.913, 996.971, 1032.865, 1060.03, 1077.834, 1205.212, 1210.243, 1295.677, 1315.668, 1431.726, 1480.25, 1488.658]\n    //                 //     //     }])\n    //                 // });\n    //             })\n    //         });\n    //     });\n    // }\n\n\n\n//routeTip\n//     _renderTooltip() {\n//         const {hoveredObject, pointerX, pointerY} = this.state || {};\n//         return hoveredObject && (\n//             <div className=\"tooltip\" style={{color:'#ffffff',position: 'absolute', zIndex: 1, pointerEvents: 'none', left: pointerX, top: pointerY}}>\n//                 <div>\n//                     <b>O-D: </b>\n//                     <span>{hoveredObject.od}</span>\n//                 </div>\n//                 <div>\n//                     <b>Traffic: </b>\n//                     <span>{hoveredObject.traffic}</span>\n//                 </div>\n//\n//             </div>\n//\n//         );\n//     }\n\n//areaTipDep\n    _renderTooltipDep() {\n        const { depObject,  depX,  depY} = this.state || {};\n        return depObject && (\n            <div className=\"tooltip\" style={{color:'#00ffff',position: 'absolute', zIndex: 1, pointerEvents: 'none', left: depX, top: depY}}>\n                <div>\n                    <b>区域 id: </b>\n                    <span>{depObject.number}</span>\n                </div>\n\n                <div>\n                    <b>驶出流量: </b>\n                    <span>{depObject.out}</span>\n                </div>\n\n            </div>\n\n        );\n    }\n    //areaTipDes\n    _renderTooltipDes() {\n        const { desObject, desX, desY} = this.state || {};\n        return desObject && (\n            <div className=\"tooltip\" style={{color:'#00ffff',position: 'absolute', zIndex: 1, pointerEvents: 'none', left: desX, top: desY}}>\n                <div>\n                    <b>区域: </b>\n                    <span>{desObject.number}</span>\n                </div>\n\n                <div>\n                    <b>驶入流量: </b>\n                    <span>{desObject.in}</span>\n                </div>\n\n            </div>\n\n        );\n    }\n\n    _getPredictData(){\n        if(this.state.showPredict){\n            return this.state.real?this.state.real_org:this.state.pre_org\n        }\n        else return [{\n            centroid: [0,0],\n            value:[0,0]\n        }]\n    }\n\n    _renderLayers() {\n        const {\n            // buildings = DATA_URL.BUILDINGS,\n            trailLength = 120,\n            theme = DEFAULT_THEME,\n            // TripsLayer=new TripsLayer({\n            //     id: 'trips',\n            //     //data: trips,\n            //     // data:[\n            //     //     {\n            //     //         \"vendor\": 1,\n            //     //         \"path\": [\n            //     //             [120.167057,30.185901],\n            //     //             [120.165752,30.185723],\n            //     //             [120.16581,30.188491],\n            //     //             [120.190417,30.198224],\n            //     //             [120.191971\t,30.204],\n            //     //             [120.189622\t,30.20767],\n            //     //             [120.182369\t,30.218973],\n            //     //             [120.180889\t,30.222601],\n            //     //             [120.200108\t,30.306856],\n            //     //             [120.23477\t,30.311914],\n            //     //             [120.246959\t,30.316748],\n            //     //             [120.309708\t,30.387518],\n            //     //             [120.312426\t,30.39154],\n            //     //             [120.309069\t,30.400897],\n            //     //             [120.302548\t,30.399632],],\n            //     //\n            //     //             \"timestamps\": [ 838, 867.979, 947.036, 962.913, 996.971, 1032.865, 1060.03, 1077.834, 1205.212, 1210.243, 1295.677, 1315.668, 1431.726, 1480.25, 1488.658]\n            //     //     }],\n            //     data:Routes,\n            //     getPath: d => d.path,\n            //     getTimestamps: d => d.timestamps,\n            //     getColor: d => (d.vendor === 0 ? theme.trailColor0 : theme.trailColor1),\n            //     opacity: 0.3,\n            //     widthMinPixels: 2,\n            //     rounded: true,\n            //     trailLength,\n            //     currentTime: this.state.time,\n            //\n            //     shadowEnabled: false\n            // }),\n        } = this.props;\n\n        return [\n         new ScatterplotLayer({\n            id: 'scatterplot-layer',\n            data:this.state.blockIcon,\n            pickable: true,\n            opacity: 0.8,\n            stroked: true,\n            filled: true,\n            radiusScale: 6,\n            radiusMinPixels: 1,\n            radiusMaxPixels: 100,\n            lineWidthMinPixels: 1,\n            getPosition: d => d.coordinates,\n            getRadius: d => 20,\n            getFillColor: d => [255, 140, 0],\n            getLineColor: d => [0, 0, 0],\n            visible:this.state.block\n        }),\n\n            // new IconLayer({\n            //     id:'blockIcon',\n            //     data:this.state.blockIcon,\n            //     iconAtlas:'./warning.png',\n            //     iconMapping:ICON_MAPPING,\n            //     getIcon: d => 'marker',\n            //     sizeScale: 15,\n            //     getPosition: d => d.coordinates,\n            //     getColor:[255,255,0],\n            //     getSize: d => 5,\n            //\n            // }),\n            new TripsLayer({\n                id:'blockRoute',\n                data:this.state.blockRoute,\n                getPath:d=>d.path,\n                getTimestamps: d => d.timestamps,\n                // getColor: d => colorTable[d.color],\n                getColor:[0,140,255,255],\n                opacity: 0.3,\n                widthMinPixels: 5,\n                rounded: true,\n                trailLength:1200,\n                currentTime: this.state.time,\n                shadowEnabled: false,\n                pickable:true,\n                visible:this.state.block\n            }),\n\n            new TripsLayer({\n                id: 'trips',\n                //data: trips,\n                // data:[\n                //     {\n                //         \"vendor\": 1,\n                //         \"path\": [\n                //             [120.167057,30.185901],\n                //             [120.165752,30.185723],\n                //             [120.16581,30.188491],\n                //             [120.190417,30.198224],\n                //             [120.191971\t,30.204],\n                //             [120.189622\t,30.20767],\n                //             [120.182369\t,30.218973],\n                //             [120.180889\t,30.222601],\n                //             [120.200108\t,30.306856],\n                //             [120.23477\t,30.311914],\n                //             [120.246959\t,30.316748],\n                //             [120.309708\t,30.387518],\n                //             [120.312426\t,30.39154],\n                //             [120.309069\t,30.400897],\n                //             [120.302548\t,30.399632],],\n                //\n                //             \"timestamps\": [ 838, 867.979, 947.036, 962.913, 996.971, 1032.865, 1060.03, 1077.834, 1205.212, 1210.243, 1295.677, 1315.668, 1431.726, 1480.25, 1488.658]\n                //     }],\n                // data:getRoute,\n                data:this.state.Route,\n                // updateTriggers:{\n                //   data:Routes\n                // },\n                getPath: d => d.path,\n                getTimestamps: d => d.timestamps,\n                getColor: d => colorTable[d.color],\n                // getColor:[0,255,255,255],\n                opacity: 0.3,\n                widthMinPixels: 10,\n                rounded: true,\n                trailLength,\n                currentTime: this.state.time,\n                shadowEnabled: false,\n                pickable:true,\n                visible:this.state.showRoute\n                // onHover: info=>this.setState({\n                //     hoveredObject: info.object,\n                //     pointerX: info.x,\n                //     pointerY: info.y\n                // })\n                // onHover:info=>{\n                //     console.log(info)\n                // }\n            }),\n\n            new PolygonLayer({\n                id: 'dep_polygon',\n                data:this.state.depPolygon,\n                pickable: true,\n                stroked: true,\n                filled: true,\n                wireframe: true,\n                lineWidthMinPixels: 1,\n                getPolygon: d => d.contour,\n                // getElevation: d => d.population / d.area / 10,\n                getFillColor: d => [255, 255, 0,50],\n                getLineColor: [80, 80, 80],\n                getLineWidth: 1,\n                onHover: info=>this.setState({\n                    depObject: info.object,\n                    depX: info.x,\n                    depY: info.y\n                }),\n                visible:this.state.depV\n                // onHover: info=>{\n                //     console.log(info)\n                // }\n\n            }),\n\n            new PolygonLayer({\n                id:'des_polygon',\n                data:this.state.desPolygon,\n                pickable: true,\n                stroked: true,\n                filled: true,\n                wireframe: true,\n                lineWidthMinPixels: 1,\n                getPolygon: d => d.contour,\n                // getElevation: d => d.population / d.area / 10,\n                getFillColor: d => [255, 0, 0,50],\n                getLineColor: [80, 80, 80],\n                getLineWidth: 1,\n                onHover: info=>this.setState({\n                    desObject: info.object,\n                    desX: info.x,\n                    desY: info.y\n                }),\n                visible:this.state.desV\n            }),\n\n            new ColumnLayer({\n                id: 'predict-origin-layer',\n                data: this._getPredictData(),\n                diskResolution: 12,\n                radius: 100,\n                extruded: true,\n                pickable: true,\n                elevationScale: 5000,\n                getPosition: d => d.centroid,\n                getFillColor: d => {\n                    let k = (Math.log(d.value) / Math.log(4)).toFixed(0);\n                    if (k <= 5) {\n                        return colorRange[k]\n                    } else {\n                        return colorRange[5]\n                    }\n                },\n                getLineColor: [0, 0, 0],\n                getElevation: d =>parseInt(d.value)/100,\n                transitions: {\n                    getElevation: {\n                        duration: 3000,\n                        // type: 'spring',\n                        // stiffness: 0.01,\n                        // damping: 0.15,\n                        // easing: d3.easeCubicInOut,\n                        enter: d => {\n                            // console.log(d);\n                            let tmp = [];\n                            for (let i = 0; i < 300; i++) {\n                                tmp.push(d[0] * i / 300)\n                            }\n                            // console.log(tmp)\n                            return tmp;\n                        },\n                    }\n                },\n                updateTriggers: {\n                    getElevation: [this.state.pre_org,this.state.real_org],\n                }\n            }),\n            // new PolygonLayer({\n            //     id: 'buildings',\n            //     data: buildings,\n            //     extruded: true,\n            //     wireframe: false,\n            //     opacity: 0.5,\n            //     getPolygon: f => f.polygon,\n            //     getElevation: f => f.height,\n            //     getFillColor: theme.buildingColor,\n            //     material: theme.material\n            // })\n        ];\n    }\n    _formatLabel(t) {\n        return `${Math.floor(t/3600)}:${Math.floor((t%3600)/60)}:${Math.floor((t%3600)%60)}`;\n    }\n\n    render() {\n        const {\n            viewState,\n            mapStyle = 'mapbox://styles/mapbox/dark-v9',\n            theme = DEFAULT_THEME,\n        } = this.props;\n\n        return (\n            <Fragment>\n                <DeckGL\n                    layers={this._renderLayers()}\n                    effects={theme.effects}\n                    initialViewState={INITIAL_VIEW_STATE}\n                    viewState={viewState}\n                    controller={true}\n                >\n                    <StaticMap\n                        reuseMaps\n                        mapStyle={mapStyle}\n                        preventStyleDiffing={true}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    />\n                </DeckGL>\n\n                { this._renderTooltipDep() }\n                {this._renderTooltipDes()}\n\n                <StyletronProvider value={engine}>\n                    <BaseProvider theme={LightTheme}>\n                        <SliderTraffic\n\n                            min={0}\n                            max={86400}\n                            value={[0,this.state.time]}\n                            formatLabel={this._formatLabel}\n                            onChange={({value}) => {\n                                let nowTime=value[1];\n\n                                if(blockData.has(nowTime)){\n                                    console.log('icon')\n                                    tmpIcon.push({\n                                        coordinates:blockData.get(nowTime)\n                                    })\n                                    let tmp=[];\n                                    tmpIcon.forEach(d=>{\n                                        tmp.push(d)\n                                    })\n                                    // if(tmpIcon.length>10){\n                                        console.log('set')\n                                        this.setState({\n                                            blockIcon:tmp\n                                        })\n                                    // }\n\n\n                                    console.log(this.state.blockIcon)\n                                }\n\n                                // console.log('nowTime:',nowTime);\n                                if(Math.floor(nowTime/3600)!==this.state.hour){\n                                    this.setState({hour:Math.floor(nowTime/3600)})\n                                    console.log('nowztime:',nowTime);\n                                    var hour=(nowTime/3600).toFixed(0);\n                                    console.log('hour:',hour);\n                                    this.setState({\n                                        pre_org:setPredictData(hour),\n                                        real_org:setRealData(hour)\n                                    });\n                                    // console.log('pre_org',this.state.pre_org);\n\n                                    var p=getRoute(hour);\n                                    p.then(function() {\n                                        console.log('Route',Routes)\n                                        this.setState({\n                                            Route:Routes,\n                                            depPolygon:depPolygon,\n                                            desPolygon:desPolygon\n                                        })\n                                    }.bind(this))\n                                }\n                                this.setState({time: nowTime})\n                                // console.log('time',this.state.time)\n                                //console.log(this.state)\n                                //console.log('value:',value)\n                            }}\n                        />\n                {/*     <SelectContainer>*/}\n                {/*        <Select id={'area'}*/}\n                {/*        options={[*/}\n                {/*            {label:\"出发区域\",id:'dep_polygon'},*/}\n                {/*            {label:\"到达区域\",id:'des_polygon'},*/}\n                {/*            { label: \"隐藏\", id: \"\" },*/}\n\n                {/*        ]}*/}\n                {/*        value={this.state.area}*/}\n                {/*        placeholder=\"显示区域\"*/}\n                {/*        // onChange={params => setValue(params.value)}*/}\n                {/*        size={SIZE.mini}*/}\n                {/*        onChange={params=> {*/}\n                {/*            // console.log('params:',params);*/}\n                {/*            if(params.option!=null){*/}\n\n\n                {/*                if(params.option.id=='dep_polygon'){*/}\n                {/*                    console.log()*/}\n                {/*                    this.setState({*/}\n                {/*                        depPolygon:depPolygon,*/}\n                {/*                        depV:true,*/}\n                {/*                        desV:false,*/}\n                {/*                        area:[{label:\"出发区域\",id:'dep_polygon'}]*/}\n                {/*                    })*/}\n                {/*                }*/}\n                {/*                else if(params.option.id=='des_polygon'){*/}\n                {/*                    console.log('desPolygon',this.state.desPolygon)*/}\n                {/*                    this.setState({*/}\n                {/*                        desPolygon:desPolygon,*/}\n                {/*                        desV:true,*/}\n                {/*                        depV:false,*/}\n                {/*                        area:[{label:\"到达区域\",id:'des_polygon'}]*/}\n                {/*                    })*/}\n                {/*                }*/}\n                {/*                else{*/}\n                {/*                    this.setState({*/}\n                {/*                        desV:false,*/}\n                {/*                        depV:false,*/}\n                {/*                        area:[{ label: \"隐藏\", id: \"\" }]*/}\n                {/*                    })*/}\n                {/*                }*/}\n                {/*            }*/}\n                {/*            else{*/}\n                {/*                this.setState({*/}\n                {/*                    area:[],*/}\n                {/*                    desV:false,*/}\n                {/*                    depV:false,*/}\n                {/*                })*/}\n                {/*            }*/}\n\n                {/*        }}*/}\n                {/*    />*/}\n\n                {/*</SelectContainer>*/}\n                {/*        <SelectContainer2>*/}\n                {/*            <Select id={'option'}*/}\n                {/*                    options={[*/}\n                {/*                        {label:\"显示轨迹\",id:'route'},*/}\n                {/*                        {label:'预测流量',id:\"predict\"},*/}\n                {/*                        {label:\"实际流量\",id:'real'},*/}\n                {/*                        {label:'路障检测',id:'block'}*/}\n                {/*                    ]}*/}\n                {/*                    value={this.state.options}*/}\n                {/*                    placeholder={'选择服务'}*/}\n                {/*                    size={SIZE.mini}*/}\n                {/*                    onChange={ params=>{*/}\n                {/*                        if (params.option!==null){*/}\n                {/*                            if(params.option.id==='predict'){*/}\n                {/*                                this.setState({*/}\n                {/*                                    real:false,*/}\n                {/*                                    options:[{label:\"预测流量\",id:\"predict\"}],*/}\n                {/*                                    showPredict:true*/}\n                {/*                                })*/}\n                {/*                            }*/}\n                {/*                            else if(params.option.id==='real'){*/}\n                {/*                                this.setState({*/}\n                {/*                                    real:true,*/}\n                {/*                                    options:[{label:\"实际流量\",id:\"real\"}],*/}\n                {/*                                    showPredict:true*/}\n                {/*                                })*/}\n                {/*                            }*/}\n                {/*                            else if(params.option.id==='block'){*/}\n                {/*                                this.setState({*/}\n                {/*                                    block:true,*/}\n                {/*                                    options:[{label:\"路障检测\",id:\"block\"}],*/}\n                {/*                                    time:45466,*/}\n                {/*                                    showPredict:false,*/}\n                {/*                                    showRoute:false*/}\n                {/*                                })*/}\n\n                {/*                            }*/}\n                {/*                            else if(params.option.id==='route'){*/}\n                {/*                                this.setState({*/}\n                {/*                                    block:false,*/}\n                {/*                                    options:[{label:\"显示轨迹\",id:\"route\"}],*/}\n                {/*                                    showRoute:true,*/}\n\n                {/*                                })*/}\n                {/*                            }*/}\n                {/*                        }*/}\n                {/*                    }}*/}\n                {/*            />*/}\n                {/*        </SelectContainer2>*/}\n                    </BaseProvider>\n                </StyletronProvider>\n\n\n            </Fragment>\n        );\n    }\n}\n\n\n\n\n/* {(<SliderInput\n                     value={[0,this.state.time]}\n                    min={0}\n                    max={24 * 60}\n                    formatLabel={this._formatLabel}\n                    onChange={({value}) => {\n                        if (value % 3600 === 0) {\n                            var p = getRoute(value / 3600);\n                            p.then(function () {\n                                this.setState({\n                                    Routes: Routes\n                                })\n                            }.bind(this))\n                        }\n                        this.setState({time: value});\n                        console.log(value)\n                    }}\n                />)\n                }*/\n\n\n// export function renderToDOM(container) {\n//     render(<App />, container);\n// }\n\n\n\n\n\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<CustomTicks />,document.getElementById('app'))\n\n// require('d3-request').csv(DATA_URL, (error, response) => {\n//         if (!error) {\n//             const data = response.map(row => ({\n//                 timestamp: new Date(`${row.DateTime} UTC`).getTime(),\n//                 latitude: Number(row.Latitude),\n//                 longitude: Number(row.Longitude),\n//                 depth: Number(row.Depth),\n//                 magnitude: Number(row.Magnitude)\n//             }));\n//             ReactDOM.render(<App2 data={data} />, document.getElementById('root'));\n//         }\n//     });\n","/home/zhiguangda/ITS/deckgl/src/components/sliderexample.js",["292"],"import * as React from 'react';\nimport {Slider} from 'baseui/slider';\nconst background={\n    width: \"30%\",\n    margin: \"30px auto\",\n    backgroundColor: \"#FFFFFF\",\n    // [\"#FF895D\",\"#FF6836\",\"#F3470D\",\"#D13808\",\"#A4300C\",\"#7A270E\"],\n    minHeight: \"0px\",\n    boxSizing: \"border-box\",\n    position: \"fixed\",\n    // top: \"80%\",\n    bottom:\"10%\",\n    border:\"10px\",\n    dashed: \"#FF6836\",\n    opacity:1,\n    zIndex:1\n};\nexport default () => {\n    const [value, setValue] = React.useState([60]);\n    return (\n        <div id={'background'} style ={background}>\n            <Slider\n                value={value}\n                onChange={({ value }) => value && setValue(value)}\n                onFinalChange={({ value }) => console.log(value)}\n            />\n        </div>\n    );\n};\n","/home/zhiguangda/ITS/deckgl/src/components/airQuality.js",["293","294","295","296"],"import React, {Component, Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport {AmbientLight, PointLight, LightingEffect} from '@deck.gl/core';\n// import {HexagonLayer} from '@deck.gl/aggregation-layers';\nimport DeckGL from '@deck.gl/react';\nimport { Select,SIZE } from \"baseui/select\";\nimport{ColumnLayer} from \"@deck.gl/layers\";\n\nimport * as d3 from 'd3'\nimport {Provider as StyletronProvider} from \"styletron-react\";\nimport {BaseProvider, LightTheme, styled} from \"baseui\";\nimport SliderTraffic from \"./sliderTraffic\";\n\nimport {Client as Styletron} from 'styletron-engine-atomic';\nconst SelectContainer=styled('div',{\n    position: 'absolute',\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    zIndex: 1,\n    top: '50px',\n    right:'10px',\n    width:'20%',\n    height:'10%'\n});\nconst engine = new Styletron();\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiemhpZ3VhbmdkYSIsImEiOiJjanozdXg0b3EwMHh4M21tcXk2MHlpN3B1In0.lInf8zFl2BsP_bDjMFhf3w'; // eslint-disable-line\n\n// Source data CSV\n\nconst ambientLight = new AmbientLight({\n    color: [255, 255, 255],\n    intensity: 1.0\n});\n\nconst pointLight1 = new PointLight({\n    color: [255, 255, 255],\n    intensity: 1.0,\n    position: [0, 0, 80000]\n});\n\nconst pointLight2 = new PointLight({\n    color: [255, 255, 255],\n    intensity: 1.0,\n    position: [180, 0, 80000]\n});\n\nconst lightingEffect = new LightingEffect({ambientLight, pointLight1, pointLight2});\n\nlet qualityMap=new Map()\n\nfunction download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {type: contentType});\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n}\n\n// let maxpm10=0;\nfunction getData(){\n    return new Promise(resolve => {\n        d3.json(\"./air.json\").then(data=>{\n            console.log(data)\n            data.results.forEach(d=>{\n                // console.log('d',d);\n                if(d.coordinates){\n                    d.measurements.forEach(l=>{\n                        // if(l.value>maxpm10){\n                        //     maxpm10=l.value;\n                        // }\n                        // console.log(l)\n                        if(qualityMap.has(l.parameter)){\n                            qualityMap.get(l.parameter).push(\n                                {centroid: [d.coordinates.longitude,d.coordinates.latitude], value: l.value},\n                            )\n                        }\n                        else{\n                            qualityMap.set(l.parameter,[{centroid: [d.coordinates.longitude,d.coordinates.latitude], value: l.value}])\n                        }\n                    })\n                }\n            })\n            // console.log('maxpm',maxpm10)\n            // qualityMap.get('pm10').forEach(d=>{\n            //     d.value=(d.value/maxpm10)*1000;\n            // })\n            resolve('0');\n        })\n    })\n}\n\n\n// let p=getData()\n// p.then(results=>{\n//     console.log('qulity',qualityMap)\n// })\n\n\nconst material = {\n    ambient: 0.64,\n    diffuse: 0.6,\n    shininess: 32,\n    specularColor: [51, 51, 51]\n};\n\nconst INITIAL_VIEW_STATE = {\n    longitude:  120.207057,\n    latitude: 30.225901,\n\n    zoom: 3,\n    pitch: 45,\n    bearing: 0\n\n};\n\nconst colorRange = [\n    [1, 152, 189],\n    [73, 227, 206],\n    [216, 254, 181],\n    [254, 237, 177],\n    [254, 173, 84],\n    [209, 55, 78]\n];\n\n\n/* eslint-disable react/no-deprecated */\nexport default class AirQuality extends Component {\n    static get defaultColorRange() {\n        return colorRange;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[]\n        };\n\n    }\n\n    componentDidMount() {\n        let p=getData();\n        p.then(results=>{\n            this.setState({\n                data:[]\n            });\n            console.log('qualityMap:',qualityMap)\n        })\n        // this._animate();\n    }\n\n    _renderLayers() {\n\n\n        return [\n        //     new HexagonLayer({\n        //         id: 'heatmap',\n        //         colorRange,\n        //         coverage,\n        //         data,\n        //         elevationRange: [0, 3000],\n        //         elevationScale: data && data.length ? 50 : 0,\n        //         extruded: true,\n        //         getPosition: d => d,\n        //         onHover: this.props.onHover,\n        //         pickable: Boolean(this.props.onHover),\n        //         radius,\n        //         upperPercentile,\n        //         material,\n        //\n        //         transitions: {\n        //             elevationScale: 3000\n        //         }\n        //     })\n\n            new ColumnLayer({\n\n                    id: 'column-layer',\n                    data:this.state.data,\n                    diskResolution: 12,\n                    radius: 5000,\n                    extruded: true,\n                    pickable: true,\n                    elevationScale: 5000,\n                    getPosition: d => d.centroid,\n                    getFillColor: d => {\n                        let k=(Math.log(d.value)/Math.log(4)).toFixed(0);\n                        if(k<=5){\n                            return colorRange[k]\n                        }\n                        else{\n                            return colorRange[5]\n                        }\n                    },\n                    getLineColor: [0, 0, 0],\n                getElevation:d=>d.value,\n                transitions:{\n                    getElevation:{\n                        duration: 3000,\n                        // type: 'spring',\n                        // stiffness: 0.01,\n                        // damping: 0.15,\n                        // easing: d3.easeCubicInOut,\n                        enter: d => {\n                            console.log(d);\n                            let tmp=[];\n                            for(let i=0;i<300;i++){\n                                tmp.push(d[0]*i/300)\n                            }\n                            console.log(tmp)\n                            return tmp;\n                        },\n                    }\n                },\n\n                updateTriggers:{\n                    getElevation: [this.state.data],\n                }\n\n                // onHover: ({object, x, y}) => {\n                //     const tooltip = `height: ${object.value * 5000}m`;\n                //\n                // }\n            })\n         ];\n\n    }\n\n    render() {\n        const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n\n        return (\n            <Fragment>\n                <DeckGL\n                    layers={this._renderLayers()}\n                     effects={[lightingEffect]}\n                    initialViewState={INITIAL_VIEW_STATE}\n                    controller={true}\n                >\n                    <StaticMap\n                        reuseMaps\n                        mapStyle={mapStyle}\n                        preventStyleDiffing={true}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    />\n                </DeckGL>\n                <StyletronProvider value={engine}>\n                    <BaseProvider theme={LightTheme}>\n                        <SelectContainer>\n                            <Select\n                                options={[\n                                    {label:\"pm10\",id:'pm10'},\n                                    {label:\"pm25\",id:'pm25'},\n                                    { label: \"co\", id: \"co\" },\n                                    { label: \"no2\", id: \"no2\" },\n                                    { label: \"so2\", id: \"so2\" },\n                                    { label: \"o3\", id: \"o3\" },\n                                    { label: \"bc\", id: \"bc\" },\n                                ]}\n                                value={this.state.label}\n                                placeholder=\"选择污染类型\"\n                                // onChange={params => setValue(params.value)}\n                                size={SIZE.mini}\n                                clearable={true}\n                                onChange={parems=> {\n                                    this.setState({\n                                        data:qualityMap.get(parems.option.id),\n                                        label:{label:parems.option.label,id:parems.option.id}\n                                    })\n\n                                }}\n                            />\n                        </SelectContainer>\n                    </BaseProvider>\n                </StyletronProvider>\n            </Fragment>\n\n\n\n    );\n    }\n}\n","/home/zhiguangda/ITS/deckgl/src/components/front_glass/welcome.js",["297"],"import React, {Component} from \"react\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    // 动态加载 css\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        margin: 0 ;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '        font-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden\\n' +\n            '    }\\n' +\n            '    li video{\\n' +\n            '        width: 4800px;\\n' +\n            '        height: 1280px;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '        object-fit: fill;\\n '  +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '    } '\n        loadStyle(code);\n        var speed = 0.5;//设置速度\n\n        var vdo = document.getElementById(\"video\");//获取id\n        vdo.playbackRate = speed;//改变速度\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\n                <li>\n                    <video src=\"content/welcome/welcome.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                </li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/streamgraph/main.js",["298","299","300","301","302","303"],"import './stream.css'\nimport * as d3 from 'd3'\nimport React, { useState, useCallback, useEffect,Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport {useData} from './useData'\nimport {AxisBottom} from \"../city/AxisBottom\";\nimport {AxisLeft} from \"../city/AxisLeft\";\nimport {Marks} from \"./Marks\"\nimport {ColorLegend} from \"../city/ColorLegend\";\n\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 200, bottom: 65, left: 150 };\nvar innerWidth = width - margin.right - margin.left;\nvar innerHeight = height - margin.top - margin.bottom;\nconst xAxisLabel = 'Time';\nconst yAxisLabel='Light';\nconst siFormat = d3.format('.2s');\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 70;\nconst xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n\n//画河流图需要data和keys\n/*\n*data format data is a list\n* [{\n*   xvalue:x\n*   key1: k1\n*   key2: k2\n*   ...\n* }\n* ,\n* {\n*   ...\n* }\n* ...\n* ]\n*\n* keys 就是data中所有的key的集合\n*\n* */\n\nexport function StreamG(){\n\n\n    const [data,keys]=useData();\n    const [start,setStart]=useState(19)\n\n\n\n\n\n    var xValue = function (d) { return new Date(d.date).getHours(); };\n    var xScale = d3.scaleLinear();\n    var yScale = d3.scaleLinear();\n\n\n    // var xAxisMajor = d3.axisBottom().scale(xScale);\n    // var xAxisMinor = d3.axisBottom().scale(xScale).ticks(50);\n//设置标志列表\n    const circleRadius = 7;\n    const colorLegendLabel='city'\n    const colorScale = d3.scaleOrdinal()\n    let range=[];\n    if(keys){\n        keys.forEach((d,i)=>{\n                range.push(d3.interpolateSpectral(i/8))\n            }\n        )\n        colorScale.domain(keys)\n            .range(range)\n    }\n\n\n\n    return <div className={'stream'} >\n        <svg height={height} width={width} >\n            <g transform={`translate(${margin.left},${margin.top})`}>\n                <g transform={`translate(${innerWidth + 60}, 60)`}>\n                    <text x={35} y={-25} className=\"axis-label\" textAnchor=\"middle\" style={{'fill':'#FFFFFF'}}>\n                        {colorLegendLabel}\n                    </text>\n                    <ColorLegend\n                        tickSpacing={22}\n                        tickSize={10}\n                        tickTextOffset={12}\n                        tickSize={circleRadius}\n                        colorScale={colorScale}\n                        // onHover={setHoveredValue}\n                        // hoveredValue={hoveredValue}\n                        // fadeOpacity={fadeOpacity}\n                    />\n                </g>\n                <Marks data={data}\n                       start={start}\n                       keys={keys}\n                       xScale={xScale}\n                       xValue={xValue}\n                       yScale={yScale}\n                       margin={margin}\n                       innerHeight={innerHeight}\n                       innerWidth={innerWidth}\n                       callback={()=>{\n                           if(start+24<139){\n                               console.log(data.length,start+24)\n                               setStart(start+24)\n                           }\n                           else{\n                               setStart(19)\n                           }\n                       }}\n                >\n\n                </Marks>\n                <AxisBottom\n                    xScale={xScale}\n                    innerHeight={innerHeight}\n                    tickFormat={xAxisTickFormat}\n                    tickOffset={2}\n                />\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(${-yAxisLabelOffset},${innerHeight /\n                    2}) rotate(-90)`}\n                >\n                    {yAxisLabel}\n                </text>\n                {/*<AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />*/}\n                <text\n                    className=\"axis-label\"\n                    x={innerWidth / 2}\n                    y={innerHeight + xAxisLabelOffset}\n                    textAnchor=\"middle\"\n                >\n                    {xAxisLabel}\n                </text>\n            </g>\n        </svg>\n    </div>\n\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/Barchart/main.js",["304","305","306","307","308","309"],"import * as d3 from 'd3'\nimport React, { useState, useCallback, useEffect,Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport {useData} from './useData'\nimport {AxisBottom} from \"../city/AxisBottom\";\nimport {AxisLeft} from \"../city/AxisLeft\";\nimport {Marks} from \"./Marks\"\nimport {ColorLegend} from \"../city/ColorLegend\";\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 200, bottom: 65, left: 150 };\nvar innerWidth = width - margin.right - margin.left;\nvar innerHeight = height - margin.top - margin.bottom;\nconst xAxisLabel = 'Time';\nconst yAxisLabel='Light';\nconst siFormat = d3.format('.2s');\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 70;\nconst xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\n//画河流图需要data和keys\n/*\n*data format data is a list\n* [{\n*   xvalue:x\n*   key1: k1\n*   key2: k2\n*   ...\n* }\n* ,\n* {\n*   ...\n* }\n* ...\n* ]\n*\n* keys 就是data中所有的key的集合\n*\n* */\n\nexport function BarG(){\n\n\n    const [data,keys]=useData();\n    const [start,setStart]=useState(19)\n\n\n\n\n\n    var xValue = function (d) { return new Date(d.date).getHours(); };\n    var xScale = d3.scaleLinear();\n    var yScale = d3.scaleLinear();\n\n\n\n\n    // var xAxisMajor = d3.axisBottom().scale(xScale);\n    // var xAxisMinor = d3.axisBottom().scale(xScale).ticks(50);\n\n    const circleRadius = 7;\n    const colorLegendLabel='city'\n    const colorScale = d3.scaleOrdinal()\n    let range=[];\n    if(keys){\n        keys.forEach((d,i)=>{\n                range.push(d3.interpolateSpectral(i/8))\n            }\n        )\n        colorScale.domain(keys)\n            .range(range)\n    }\n\n\n\n\n\n    return <div className={'bar'}>\n        <svg height={height} width={width}>\n            <g transform={`translate(${margin.left},${margin.top})`}>\n                <g transform={`translate(${innerWidth + 60}, 60)`}>\n                    <text x={35} y={-25} className=\"axis-label\" textAnchor=\"middle\">\n                        {colorLegendLabel}\n                    </text>\n                    <ColorLegend\n                        tickSpacing={22}\n                        tickSize={10}\n                        tickTextOffset={12}\n                        tickSize={circleRadius}\n                        colorScale={colorScale}\n                        // onHover={setHoveredValue}\n                        // hoveredValue={hoveredValue}\n                        // fadeOpacity={fadeOpacity}\n                    />\n                </g>\n                <Marks data={data}\n                       start={start}\n                       keys={keys}\n                       xScale={xScale}\n                       xValue={xValue}\n                       yScale={yScale}\n                       margin={margin}\n                       innerHeight={innerHeight}\n                       innerWidth={innerWidth}\n                       callback={()=>{\n                           if(start+24<139){\n                               console.log(data.length,start+24)\n                               setStart(start+24)\n                           }\n                           else{\n                               setStart(19)\n                           }\n                       }}\n                >\n\n                </Marks>\n                <AxisBottom\n                    xScale={xScale}\n                    innerHeight={innerHeight}\n                    tickFormat={xAxisTickFormat}\n                    tickOffset={2}\n                />\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(${-yAxisLabelOffset},${innerHeight /\n                    2}) rotate(-90)`}\n                >\n                    {yAxisLabel}\n                </text>\n                {/*<AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />*/}\n                <text\n                    className=\"axis-label\"\n                    x={innerWidth / 2}\n                    y={innerHeight + xAxisLabelOffset}\n                    textAnchor=\"middle\"\n                >\n                    {xAxisLabel}\n                </text>\n            </g>\n        </svg>\n    </div>\n}\n","/home/zhiguangda/ITS/deckgl/src/components/city/city.js",["310","311","312","313","314","315","316","317","318","319","320","321"],"import React, { useState, useCallback, useEffect,Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { csv, scaleLinear, scaleOrdinal, max, format, extent } from 'd3';\nimport { useData } from './useData';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { ColorLegend } from './ColorLegend';\nimport * as d3 from 'd3'\nimport './city.css'\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 200, bottom: 65, left: 90 };\nconst xAxisLabelOffset = 50;\nconst yAxisLabelOffset = 45;\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\nconst xAxisLabel = 'Satisfaction';\nconst yAxisLabel = 'Worthwhile';\nconst colorLegendLabel = 'Area';\nconst siFormat = format('.2s');\nconst xAxisTickFormat = tickValue => siFormat(tickValue).replace('G', 'B');\nlet tmp=[];\nfunction getData() {\n\n    return new Promise(resolve => {\n        d3.csv('./happy.csv').then(d=>{\n            d.map((l,index)=>{\n                let pro=Object.getOwnPropertyNames(l);\n                // console.log(l['Area']);\n                pro.map((n,index)=>{\n                    if(index>1){\n                        if(tmp[n]===undefined){\n                            tmp[n]={}\n                        }\n                        if(tmp[n][l['Area']]===undefined){\n                            tmp[n][l['Area']]={};\n                        }\n                        tmp[n][l['Area']].happy=l[n];\n                    }\n                })\n                // l.map((t,i)=>{\n                //     if(i>1){\n                //         if(data[i]===undefined){\n                //             data[i]=[]\n                //         }\n                //         // data[i].happy=\n                //         console.log(Object.getOwnPropertyNames(t))\n                //     }\n                //\n                // })\n            })\n\n\n            d3.csv('./worthwhile.csv').then(d=>{\n                d.map((l,index)=>{\n                    let pro=Object.getOwnPropertyNames(l);\n                    pro.map((n,index)=>{\n                        if(index>1){\n                            if(tmp[n]===undefined){\n                                tmp[n]={}\n                            }\n                            if(tmp[n][l['Area']]===undefined){\n                                tmp[n][l['Area']]={};\n                            }\n                            tmp[n][l['Area']].worth=l[n];\n                        }\n                    })\n                })\n                console.log('data:',tmp)\n                resolve();\n            });\n\n        });\n    })\n\n\n}\n\nexport function City() {\n\n    // const [data, setData] = useState(null);\n    const data=useData();\n    // console.log('dataini:',data);\n    const [year,setYear]=useState(2011);\n    // useEffect(function init(){\n    //     console.log('start');\n    //     console.log('data2:',data);\n    //     if(data['2011/12']){\n    //         console.log('in');\n    //         let svg=d3.select('svg');\n    //         // console.log(svg);\n    //         let k=dataAt('2011/12');\n    //         console.log('k',k)\n    //         //这里并不能马上赋值成功，hook调用时异步的\n    //         // setCurrentData(k);\n    //         // console.log('currentData',currentData);\n    //         svg.selectAll('circle')\n    //             .data(k,d=>['city'])\n    //             .join('circle')\n    //             .attr(\"stroke\", \"black\")\n    //             .attr(\"r\", d =>{\n    //                 if(!(parseFloat(d.data['happy'])&&parseFloat(d.data['worth']))) return 0;\n    //                 else return 5\n    //             })\n    //             .attr(\"cx\", d => {if(parseFloat(d.data['happy'])){\n    //                 console.log(d.data['happy'])\n    //                 return xScale(d.data['happy'])\n    //             }})\n    //             .attr(\"cy\", d => {if(d.data['worth']){\n    //                 return yScale(d.data['worth'])\n    //             }\n    //             })\n    //             .attr(\"fill\", d => 'blue');\n    //         setYear(2012)\n    //         console.log(year)\n    //     }\n    // },[data]);\n    // useEffect(function update() {\n    //\n    //         if(year){\n    //             let currentData=dataAt(year+'/'+(year-2000+1));\n    //             let svg=d3.select('svg');\n    //             let c=svg.selectAll(\"circle\")\n    //                 .data(currentData,d=>d['city'])\n    //                 .join('circle')\n    //                 .attr(\"stroke\", \"black\")\n    //                 .attr(\"r\", d =>{\n    //                     if(!(parseFloat(d.data['happy'])&&parseFloat(d.data['worth']))) return 0;\n    //                     else return 5\n    //                 })\n    //                 .transition()\n    //                 // .on('end',function repeat(){\n    //                 //     console.log('end')\n    //                 // })\n    //                 .duration(1000)\n    //                 .attr(\"cx\", d => {if(parseFloat(d.data['happy'])){\n    //                     // console.log(d.data['happy'])\n    //                     return xScale(d.data['happy'])\n    //                 }})\n    //                 .attr(\"cy\", d => {if(d.data['worth']){\n    //                     return yScale(d.data['worth'])\n    //                 }\n    //                 })\n    //                 .attr(\"fill\", d => 'blue')\n    //                 .end();\n    //             c.then(result=>{\n    //                 if(year<2016){\n    //                     setYear(year+1)\n    //                     // updateCircle()\n    //                 }\n    //                 else {\n    //                     setYear(2011)\n    //                     // console.log('year:',year)\n    //                     // year=2011;\n    //                     // updateCircle()\n    //                 }\n    //                 console.log('done')\n    //             })\n    //         }\n    // },[year])\n    // function dataAt(year){\n    //     console.log('data:',data)\n    //     let results=[];\n    //     let pro=Object.getOwnPropertyNames(data[year]);\n    //     pro.forEach(d=>{\n    //         results.push({\n    //             city:d,\n    //             data:data[year][d],\n    //         })\n    //     })\n    //     return results\n    // }\n    // const [hoveredValue, setHoveredValue] = useState(null);\n    // if (!data) {\n    //     return <pre>Loading...</pre>;\n    // }\n    const xValue = d => d.data['happy'];\n    const yValue = d => d.data['worth'];\n    const colorValue = d => d.species;\n    const circleRadius = 7;\n\n\n    const xScale = scaleLinear()\n        // .domain(extent(data, xValue))\n        .domain([6.8,8.5])\n        .range([0, innerWidth])\n\n    const yScale = scaleLinear()\n        // .domain(extent(data, yValue))\n        .domain([8.5,6.8])\n        .range([0, innerHeight]);\n\n    const colorScale = scaleOrdinal()\n        .domain(['InnerLondon','OuterLondon'])\n        .range(['#E6842A', '#137B80']);\n\n    return (\n        <Fragment>\n            <b >time:<span id=\"Time\"></span>\n            </b>\n            <svg width={width} height={height}>\n                <g transform={`translate(${margin.left},${margin.top})`}>\n                    <AxisBottom\n                        xScale={xScale}\n                        innerHeight={innerHeight}\n                        tickFormat={xAxisTickFormat}\n                        tickOffset={5}\n                    />\n                    <text\n                        className=\"axis-label\"\n                        textAnchor=\"middle\"\n                        transform={`translate(${-yAxisLabelOffset},${innerHeight /\n                        2}) rotate(-90)`}\n                    >\n                        {yAxisLabel}\n                    </text>\n                    <AxisLeft yScale={yScale} innerWidth={innerWidth} tickOffset={5} />\n                    <text\n                        className=\"axis-label\"\n                        x={innerWidth / 2}\n                        y={innerHeight + xAxisLabelOffset}\n                        textAnchor=\"middle\"\n                    >\n                        {xAxisLabel}\n                    </text>\n                    <g transform={`translate(${innerWidth + 60}, 60)`}>\n                        <text x={35} y={-25} className=\"axis-label\" textAnchor=\"middle\">\n                            {colorLegendLabel}\n                        </text>\n                        <ColorLegend\n                            tickSpacing={22}\n                            tickSize={10}\n                            tickTextOffset={12}\n                            tickSize={circleRadius}\n                            colorScale={colorScale}\n                            // onHover={setHoveredValue}\n                            // hoveredValue={hoveredValue}\n                            // fadeOpacity={fadeOpacity}\n                        />\n                    </g>\n                    <g >\n                        <Marks\n                            data={data}//参数变了，组件就会自动刷新\n                            xScale={xScale}\n                            xValue={xValue}\n                            yScale={yScale}\n                            yValue={yValue}\n                            colorScale={colorScale}\n                            colorValue={colorValue}\n                            tooltipFormat={xAxisTickFormat}\n                            circleRadius={circleRadius}\n                            year={year}\n                            margin={margin}\n                            callback={()=>{\n                                if(year<2016){\n                                    setYear(year+1)\n                                }\n                                else{\n                                    setYear(2011)\n                                }\n                                document.getElementById('Time').innerHTML=year+'/'+(year-2000+1)\n\n                            }}\n                        />\n                    </g>\n                </g>\n            </svg>\n\n        </Fragment>\n\n    );\n};\n","/home/zhiguangda/ITS/deckgl/src/components/WorkFlow/news.js",["322","323"],"import React, {Component} from \"react\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\n\n\nexport default class App extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n    debugger\n        var code='        html,body{margin:0;padding:0;overflow-y:hidden;}\\n' +\n            '        li {\\n' +\n            '            list-style: none;\\n' +\n            '            float: left;\\n' +\n            '            width: 100%;/*三列图片排列*/\\n' +\n            '            height: 50%;\\n' +\n            '            margin: 0 ;\\n' +\n            '            overflow: hidden;/*超出隐藏*/\\n' +\n            '            font-size: 0;\\n' +\n            '        }\\n' +\n            '        li img {\\n' +\n            '            width: 100%;\\n' +\n            '            height: 100%\\n' +\n            '        }\\n' +\n            '        li video{\\n' +\n            '            width: 100%;\\n' +\n            '            height: 100%\\n' +\n            '        }\\n' +\n            '        ul{\\n' +\n            '            margin:0;padding:0\\n' +\n            '        }'\n        loadStyle(code);\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both;\"}}>\n            <li>\n                <video src=\"/content/workflow/news.mp4\" autoPlay muted=\"muted\" loop=\"loop\"></video>\n            </li>\n            <li>\n                <img src=\"/content/workflow/news_down.jpg\"/>\n            </li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/panel/control.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React ,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport { Select,SIZE } from \"baseui/select\";\nimport {BaseProvider, LightTheme, styled} from \"baseui\";\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as d3 from 'd3'\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport {text} from \"d3-request\";\nimport $ from \"jquery\"\n// let keys=[];\nlet ip={}\nlet content={}\n// const { exec } = require('child_process');\n// // 输出当前目录（不一定是代码所在的目录）下的文件和文件夹\n// exec('ls -l', (err, stdout, stderr) => {\n//     if(err) {\n//         console.log(err);\n//         return;\n//     }\n//     console.log(`stdout: ${stdout}`);\n//     console.log(`stderr: ${stderr}`);\n// })\n\n//读取ip地址\nfunction readipData(){\n\n    return new Promise(resolve => {\n        // d3.csv('https://raw.githubusercontent.com/HOOLoLo/ITS/master/deckgl/public/panel.csv').then(d=>{\n        d3.csv('panel.csv').then(d=>{\n                d.map(x=>{\n                ip[x['no']]=x['ip']\n            })\n            let name=Object.keys(ip);\n            console.log(name)\n            resolve(name)\n            // console.log(ip)\n        })\n    })\n\n}\n\nfunction setK() {\n    return new Promise(resolve => {\n        d3.csv('content.csv').then(d=>{\n            d.map(x=>{\n                content[x['name']]=x['path']\n            })\n            console.log(content)\n            let k=Object.keys(content);\n            console.log('k',k)\n            resolve(k)\n        })\n    })\n}\n\n// setK().then()\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\n\n\n\n\n\n\nlet p=setK();\nlet p2=readipData()\nexport function Panel() {\n    const [value, setValue] = React.useState('MIC');\n    const [ipValue,setIP]=React.useState('1号机(MIC)');\n\n    const[keys,setKeys]=React.useState(['wait']);\n    const[ipName,setName]=React.useState(['wait']);\n\n    p.then((result)=>{\n        setKeys(result)\n    });\n\n    p2.then((result)=>{\n        setName(result)\n    })\n\n\n    // setKeys(setK());\n\n\n    const classes = useStyles();\n    function handleChange(event) {\n        console.log()\n        setValue(event.target.value);\n    }\n\n    function handleIPChoese(event) {\n        setIP(event.target.value);\n    }\n\n\n    function send(event) {\n\n        console.log(event.currentTarget)\n        const http=new XMLHttpRequest();\n        const url=ip[event.currentTarget.value]+'/url/'+value;\n        console.log(url)\n        http.open('GET',url)\n        http.send()\n    }\n\n    function sendVolume(event){\n        const http=new XMLHttpRequest();\n        console.log(event.currentTarget.value)\n        const url=ip[ipValue]+'/volume/'+event.currentTarget.value;\n        http.open('GET',url)\n        http.send()\n    }\n    function sendScroll(event) {\n        const http=new XMLHttpRequest();\n        console.log(event.currentTarget.value)\n        const url=ip[ipValue]+'/scroll/'+event.currentTarget.value;\n        http.open('GET',url)\n        http.send()\n\n    }\n    function sendOpenChrome(event) {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/openChrome';\n        http.open('GET',url);\n        http.send()\n    }\n\n    function shutdown() {\n        let message=window.confirm('确定关闭'+ipValue+'吗？')\n        if (message===true){\n            const http=new XMLHttpRequest();\n            const url=ip[ipValue]+'/shutdown';\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function openAllChrome(){\n        for(let prop in ip){\n            if(ip[prop]){\n                console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/openChrome';\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n\n    function updateService() {\n        let message=window.confirm('确定更新'+ipValue+'服务吗？')\n        if(message===true){\n            const http=new XMLHttpRequest();\n            const url=ip[ipValue]+'/update';\n            // $.post(url,\"copy file////Mypassport/Storage/content.csv . /Y\",text)\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function updateMain(){\n        let message=window.confirm('确定更新'+ipValue+'服务吗？')\n        if(message===true){\n            const http=new XMLHttpRequest();\n            const url='http://192.168.0.161:5556'+'/updateMain';\n            // $.post(url,\"copy file////Mypassport/Storage/content.csv . /Y\",text)\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function openPotPlayer(){\n        for(let prop in ip){\n            if(ip[prop]){\n                console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/openPotPlayer/'+document.getElementById('videoname').value;\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n    function closePotPlayer() {\n        for(let prop in ip){\n            if(ip[prop]){\n                console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/closePotPlayer';\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n    //全景视频使用\n    function dragLeft(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/dragLeft/'+document.getElementById('leftPix').value;\n        http.open('GET',url);\n        http.send()\n    }\n\n    function dragRight() {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/dragLeft/'+document.getElementById('rightPix').value;\n        http.open('GET',url);\n        http.send();\n    }\n    function sendCommand(){\n            const url=ip[ipValue]+'/cmd';\n            $.post(url,{cmd:document.getElementById('command').value})\n\n    }\n    // if(!keys){\n    //     console.log('keys')\n    //     return <div>wait</div>\n    // }\n\n    // function startBackMusic() {\n    //     const http=new XMLHttpRequest();\n    //     const url=ip[ipValue]+'/openMusic';\n    //     http.open('GET',url);\n    //     http.send()\n    // }\n    // function stopBackMusic() {\n    //     const http=new XMLHttpRequest();\n    //     const url=ip[ipValue]+'/stopMusic';\n    //     http.open('GET',url);\n    //     http.send()\n    // }\n\n\n    function adjustAllvideo(){\n        let list=[10,10,10,10,10,10,10]\n        ip.map((i,v)=>{\n            const http=new XMLHttpRequest();\n            //用正负来区分左右把不要单独了\n            const url=ip[i]+'/dragLeft/'+list[i];\n            http.open('GET',url);\n            http.send()\n        })\n    }\n    function flip(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/flip';\n        http.open('GET',url);\n        http.send()\n    }\n\n    function sendDownload(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/download/'+document.getElementById('downloadfile').value;\n        http.open('GET',url);\n        http.send()\n    }\n    function closePreview() {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/closepreview';\n        http.open('GET',url);\n        http.send()\n    }\n\n    function openEdge(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/openEdge';\n        http.open('GET',url);\n        http.send()\n    }\n    return (\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Content</FormLabel>\n\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"primary\"  onClick={openAllChrome} >\n                        打开所有浏览器\n                    </Button>\n                </div>\n\n                <RadioGroup aria-label=\"content\" name=\"content\" value={value} onChange={handleChange}>\n                    {/*{*/}\n                    {/*    ()=>{*/}\n                    {/*        if(keys!==[]){*/}\n                    {/*            console.log(keys);*/}\n                    {/*   */}\n                    {/*        }*/}\n                    {/*    }*/}\n                    {/*}*/}\n                    {\n                        keys.map((value,index)=>{\n                            console.log('d',value);\n                            return(\n                                <div>\n                                    {index===0&&<Chip color=\"primary\" size=\"small\"  label={'拼接屏内容'}/>}\n                                    {index===10&&<Chip color=\"primary\" size=\"small\"  label={'融合内容'}/>}\n                                    {index===19&&<Chip color=\"primary\" size=\"small\"  label={'玻璃内容'}/>}\n                                    {index===24&&<Chip color=\"primary\" size=\"small\"  label={'窗户'}/>}\n                                    <FormControlLabel key={index} value={value} control={<Radio />} label={value}  />\n                                </div>\n\n                            )\n                        })\n                    }\n\n\n                    {/*<FormControlLabel value={keys[0]} control={<Radio />} label={d}  />*/}\n                    {/*<FormControlLabel value={d} control={<Radio />} label={d}  />*/}\n                    {/*<FormControlLabel value={d} control={<Radio />} label={d}  />*/}\n                    {/*<FormControlLabel value={d} control={<Radio />} label={d}  />*/}\n                    {/*<FormControlLabel value={d} control={<Radio />} label={d}  />*/}\n                </RadioGroup>\n                <div className={classes.root}>\n                    {\n                        ipName.map(((value, index) => {\n                            return(\n                                <Button key={index} variant=\"contained\" color=\"primary\" value={value} onClick={send} >\n                                    {value}\n                                </Button>\n                            )\n                        }))\n                    }\n                    {/*<Button variant=\"contained\" color=\"primary\" value={1} onClick={send} >*/}\n                    {/*    1号机(MIC)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={2} onClick={send}>*/}\n                    {/*    2号机(ML)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={3} onClick={send}>*/}\n                    {/*    3号机(DTW)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={4} onClick={send}>*/}\n                    {/*    4号机(news)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={5} onClick={send}>*/}\n                    {/*    5号机(conclusion)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={6} onClick={send}>*/}\n                    {/*    6号机(融合)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={7} onClick={send}>*/}\n                    {/*    7号机(玻璃)*/}\n                    {/*</Button>*/}\n                    {/*<Button variant=\"contained\" color=\"primary\" value={8} onClick={send}>*/}\n                    {/*    8号机(窗户)*/}\n                    {/*</Button>*/}\n                </div>\n                <RadioGroup aria-label=\"ipLabel\" name=\"ipLabel\" value={ipValue} onChange={handleIPChoese}>\n                {\n                    ipName.map((value,index)=>{\n                        console.log('d',value);\n                        return(\n                                <FormControlLabel key={index} value={value} control={<Radio />} label={value}  />\n\n                        )\n                    })\n                }\n                </RadioGroup>\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"secondary\"  value={'up'} onClick={sendVolume}> 增大音量</Button>\n                    <Button variant=\"contained\" color=\"secondary\"  value={'down'} onClick={sendVolume} > 减小音量</Button>\n                </div>\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"secondary\"  value={'front'} onClick={sendScroll}> 向前滑动</Button>\n                    <Button variant=\"contained\" color=\"secondary\"  value={'back'} onClick={sendScroll} > 向后滑动</Button>\n                </div>\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={sendOpenChrome}> 打开浏览器</Button>\n                    <Button variant=\"contained\" color=\"secondary\"  onClick={shutdown}> 关机</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={openEdge}>打开Edge浏览器</Button>\n                </div>\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={updateService}> 更新服务</Button>\n                </div>\n                <div className={classes.root}>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={updateMain}> 从git上更新主服务</Button>\n                </div>\n                <div className={classes.root}>\n                    <TextField id=\"videoname\" label=\"输入视频名称\" variant=\"outlined\" defaultValue=\"vr.webm\"/>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={openPotPlayer}> 打开全景视频</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={closePotPlayer}> 关闭全景视频</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={closePreview}> 关闭预览</Button>\n\n                </div>\n                <div className={classes.root}>\n                    <TextField id=\"leftPix\" label=\"输入距离\" variant=\"outlined\" defaultValue={'50'}/>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={dragLeft}> 向左调整</Button>\n                    <TextField id=\"rightPix\" label=\"输入距离\" variant=\"outlined\" defaultValue={'50'}/>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={dragRight}> 向右调整</Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={flip}> 视频左右翻转</Button>\n                </div>\n                <div className={classes.root}>\n                    <TextField id=\"command\" label=\"输入指令\" variant=\"outlined\" defaultValue={\"copy file////Mypassport/Storage/360video . /Y\"}/>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={sendCommand}> 发送指令</Button>\n                </div>\n                <div className={classes.root}>\n                    <TextField id=\"downloadfile\" label=\"文件名\" variant=\"outlined\" defaultValue={\"vr.webm\"}/>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={sendDownload}> 下载文件</Button>\n                </div>\n            </FormControl>\n        );\n\n\n\n}\n\n","/home/zhiguangda/ITS/deckgl/src/components/lineChart/main.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import * as d3 from 'd3'\nimport React, {useState, useCallback, useEffect, Fragment, Component} from 'react';\n\nimport {ColorLegend} from \"./ColorLegend\";\nimport './line.css'\nconst width = 960;\nconst height = 500;\nconst margin = { top: 20, right: 200, bottom: 65, left: 150 };\nvar innerWidth = width - margin.right - margin.left;\nvar innerHeight = height - margin.top - margin.bottom;\nconst colorLegendLabel='country';\nconst circleRadius=5;\nconst colorScale = d3.scaleOrdinal()\nconst countrylist=['China','US','Japan','Italy','France','United Kingdom'];\nconst colorTable=['#E25A42','#F2DA57','#42A5B3','#A0B700','#193556','#137B80'];\ncolorScale.domain(countrylist)\n    .range(colorTable)\n\nconst totalTime=10000;\n// let currentTime=new Date(2020,1,22);\n\nconst yScale = d3.scaleLinear()\n    .domain([0, 100000])\n    .range([innerHeight, 0]);\nconst yAxisGenerator = d3.axisLeft()\n    // .tickValues(d3.range(0, 3, 5));\n    let xdomain=[new Date(2020, 0, 22), new Date()];\n    let xScale=d3.scaleTime()\n        .domain(xdomain)\n        .range([0, innerWidth]);\n    const xAxisGenerator = d3.axisBottom()\n\n\n    let covidMap=new Map();\n    //数据格式\n//{\n//  {\n//  {\n//  'country':{\n//      time1:\n//      time2:\n//      ...\n//  }\n//\n//  }\n//}\n    let dateKey=[];\n    let sorted=new Map();\n    let dataFlow=[];\n\n    let lineData=[]\n    function getCovid() {\n        return new Promise(resolve => {\n            d3.csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv').then(d=>{\n            d.map((i,index)=>{\n                for(let k in i){\n                    let t=new Date(k)\n                    if(t.getDate()){\n                        i[k]=parseInt(i[k])\n                    }\n                }\n                if(!covidMap.has(i['Country/Region'])){\n                    covidMap.set(i['Country/Region'],i)\n                }\n                else{\n                    let tmp=covidMap.get(i['Country/Region'])\n                    for(let k in tmp){\n                        // console.log(k)\n                        let d=new Date(k);\n                        if(d.getDate()){\n                            if(dateKey.indexOf(k)===-1){\n                                dateKey.push(k)\n                            }\n                            // console.log(tmp[k])\n                            tmp[k]=(tmp[k]+i[k])\n                            // console.log(tmp)\n                        }\n                    }\n                }\n                }\n            )\n                //这么做好像没有什么用，曲线图是将每天的数据\n                console.log(covidMap)\n                // dateKey.forEach(d=>{\n                //     console.log(new Date(d))\n                // })\n                countrylist.map((d,index)=>{\n                    let c={\n                        color:colorTable[index],\n                        country: d,\n                        path:[]\n                    }\n                    for(let k in covidMap.get(d)){\n                        let tmp=new Date(k);\n                        if(tmp.getDate()){\n                            // console.log('k',k)\n                            let t=new Date(tmp.getFullYear(),tmp.getMonth(),tmp.getDate())\n                       c.path.push([tmp,covidMap.get(d)[k]])\n                        }\n                    }\n                    lineData.push(c)\n                })\n                console.log(lineData)\n                resolve()\n\n                // dateKey.forEach(k=>{\n                //     let arrayMap=Array.from(covidMap)\n                //     console.log('arrayMap',arrayMap);\n                //     let tmp=[]\n                //     arrayMap.forEach(d=>{\n                //         if(countrylist.indexOf(d[0])!==-1){\n                //             // tmp.push({\n                //             //     Country:d[0]\n                //             //     Value:\n                //             // })\n                //         }\n                //     })\n                //\n                //     sorted[k]= arrayMap.sort((a,b)=>{\n                //         if(a[1][k]>b[1][k]){\n                //             return -1\n                //         }\n                //         else return 1\n                //     })\n                //     // console.log(sorted[k])\n                // })\n                // console.log(sorted)\n                // for(let i in sorted){\n                //\n                // }\n\n            })\n        })\n    }\n\nlet last = array => array[array.length - 1];\n\n\n\n\n    // var xAxisMajor = d3.axisBottom().scale(xScale);\n    // var xAxisMinor = d3.axisBottom().scale(xScale).ticks(50);\n\n    // const circleRadius = 7;\n    // const colorLegendLabel='city'\n    // const colorScale = d3.scaleOrdinal()\n    // let range=[];\n    // if(keys){\n    //     keys.forEach((d,i)=>{\n    //             range.push(d3.interpolateSpectral(i/8))\n    //         }\n    //     )\n    //     colorScale.domain(keys)\n    //         .range(range)\n    // }\n//\n// }\n\n\n\nfunction setData(day) {\n    let data=[]\n    lineData.map((x)=>{\n        let tmp=[];\n        x.path.map((i,index)=>{\n            if(index>day){\n                tmp.push(x.path[day])\n            }\n            else{\n                tmp.push(i)\n            }\n        })\n        data.push({\n            color:x.color,\n            country:x.country,\n            path:tmp\n        })\n    })\n    return data\n}\n\nexport default class App extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            day:0,\n            linedata:[],\n            yScale:d3.scaleLinear()\n                .domain([0, 10000])\n                .range([innerHeight, 0])\n                .nice(),\n            lineGenerator : d3.line()\n            // .curve(d3.curveCatmullRom)\n                .x(d => xScale(d[0]))\n                .y(d => this.state.yScale(d[1]))\n        }\n\n    }\n\n    componentDidMount() {\n        let testData=\n            []\n        //     [{\n        //     path:[[new Date(2020,0,22),1000],[new Date(2020,1,10),10000]]\n        // }]\n        let p1=getCovid();\n        p1.then(result=>{\n            let svg=d3.select('svg');\n            const g = svg.append(\"g\")\n                .attr('id','Axis')\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n            let gx=g.append(\"g\")\n            // .call(xAxisGenerator)\n                .attr(\"transform\", `translate(0, ${innerHeight})`);\n            let gy=g.append(\"g\").attr('id','yAxis')\n                gy.call(yAxisGenerator.scale(this.state.yScale));\n            let p=gx.transition().duration(2000)\n                .call(xAxisGenerator.scale(xScale))\n                .end()\n            p.then(\n                // ()=>{\n                //     let x=d3.scaleTime()\n                //         .domain([new Date(2010, 0, 1), new Date(2010, 10, 1)])\n                //         .range([0, innerWidth])\n                //     gx.transition().duration(2000)\n                //         .call(xAxisGenerator.scale(x))\n                // }\n            )\n            svg.append('g').attr('id','line')\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n            svg.append('g').attr('id','text')\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n            // let lineg=svg.append('g');\n            //\n            // let line=lineg.selectAll('path')\n            //     .data(this.state.linedata)\n            //     .join('path')\n            //\n            // line\n            //     .attr(\"fill\", \"none\")\n            //     .attr(\"stroke\", \"black\")\n            //     .attr(\"stroke-width\", 2.5)\n            //     .attr(\"stroke-linejoin\", \"round\")\n            //     .attr(\"stroke-linecap\", \"round\")\n            //     .attr(\"d\",lineGenerator(this.state.linedata))\n\n            // let lineg=d3.select('#line');\n            // let line=lineg.selectAll('path')\n            //     .data(testData)\n            //     .join('path')\n            //     .attr(\"fill\", \"none\")\n            //     .attr(\"stroke\", \"black\")\n            //     .attr(\"stroke-width\", 2.5)\n            //     .attr(\"stroke-linejoin\", \"round\")\n            //     .attr(\"stroke-linecap\", \"round\")\n            //     // .attr(\"d\",lineGenerator(this.state.linedata[0].path))\n            //     .attr(\"d\",d=>{\n            //         console.log('d',lineGenerator(d.path))\n            //         return lineGenerator(d.path)\n            //     });\n            // setTimeout(function () {\n            //\n            //     this.setState({\n            //         linedata: newData\n            //     })\n            // },1000)\n            this._animate()\n        });\n    }\n    _animate(){\n\n\n            let newData=setData(this.state.day)\n            console.log('newData',newData);\n            let max=-1;\n            newData.map(x=>{\n                x.path.map(t=>{\n                    if(t[1]>max){\n                        max=t[1]\n                    }\n                })\n            })\n            if(this.state.yScale.domain()[1]<max){\n                this.state.yScale.domain([0,max])\n                let gy=d3.select('#yAxis');\n                gy.transition().duration(500).call(yAxisGenerator.scale(this.state.yScale))\n            }\n\n            this.setState({\n                        linedata: newData\n                    })\n\n        let text=d3.select('#text');\n            text.selectAll('text')\n                .data(this.state.linedata)\n                .join('text')\n                .property('_next',function(d){\n                    console.log(d)\n                    return d.path[this.state.day][1]\n                }.bind(this))\n                .property('_current',function (d) {\n                    if(this.state.day!==0){\n                        return d.path[this.state.day-1][1]\n                    }\n                    else return d.path[this.state.day][1]\n\n                }.bind(this))\n                .transition()\n                .duration(500)\n                .ease(d3.easeLinear)\n                .textTween(function(d) {\n                    // console.log('d',d);\n                    // console.log('day',this.state.day)\n                    const i = d3.interpolate(this._current, this._next);\n                    return function(t) { return this._cuurent=i(t).toFixed(0); };\n                })\n                // .text(d=>d.path[this.state.day][1])\n                .attr('transform',d=> `translate(${xScale(d.path[this.state.day][0])}, ${this.state.yScale(d.path[this.state.day][1])})`)\n                .style(\"font-family\", \"monospace\")\n                .style(\"fill\", d => d.color);\n\n            let lineg=d3.select('#line');\n            let line=lineg.selectAll('path')\n                .data(this.state.linedata)\n                .join('path')\n            let p=line\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", d=>d.color)\n                .attr(\"stroke-width\", 2.5)\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-linecap\", \"round\")\n                .transition()\n                .ease(d3.easeLinear)\n                .duration(500)\n                .attr(\"d\",d=>this.state.lineGenerator(d.path))\n                .end()\n            p.then(()=>{\n                if(this.state.day<this.state.linedata[0].path.length-1){\n                    // let y = d3.scaleLinear()\n                    //     .domain([0, 1000])\n                    //     .range([innerHeight, 0]);\n                    // let gy=d3.select('#yAxis');\n                    // gy.transition().duration(500).call(yAxisGenerator.scale(y))\n                    xdomain=[new Date(2020, 0, 22), new Date(2020, 3, 1)]\n                    this.state.day+=1;\n                    this._animationFrame = window.requestAnimationFrame(this._animate.bind(this));\n                }\n            })\n\n\n    }\n    componentWillUnmount() {\n        if (this._animationFrame) {\n            window.cancelAnimationFrame(this._animationFrame);\n        }\n    }\n\n     render() {\n\n\n\n\n         return <div className={'line'}>\n             <svg width={width} height={height}>\n                 <g transform={`translate(${margin.left},${margin.top})`}>\n                     <g transform={`translate(${innerWidth + 60}, 60)`}>\n                         <text x={35} y={-25} className=\"axis-label\" textAnchor=\"middle\" >\n                             {colorLegendLabel}\n                         </text>\n                         <ColorLegend\n                             tickSpacing={22}\n                             tickSize={10}\n                             tickTextOffset={12}\n                             tickSize={circleRadius}\n                             colorScale={colorScale}\n                             // onHover={setHoveredValue}\n                             // hoveredValue={hoveredValue}\n                             // fadeOpacity={fadeOpacity}\n                         />\n                     </g>\n                 </g>\n\n             </svg>\n         </div>\n     }\n}\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Mirror.js",["358","359","360","361","362","363","364"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport Clock from './Clock'\r\n// import Navi from './Navi'\r\nimport Weather from './Weather'\r\nimport {SettingOutlined, CalendarOutlined, EllipsisOutlined,RadiusSettingOutlined} from '@ant-design/icons';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport TuneIcon from '@material-ui/icons/Tune'\r\nimport { Octrl } from './octrl';\r\nimport { Ictrl } from './ictrl';\r\n\r\nclass Mirror extends React.Component {\r\n  state = {\r\n    current: 0\r\n  };\r\n  handleClick = e => {\r\n    // console.log('click ', e);\r\n    this.setState({ current: e.key });\r\n  };\r\n  render() {\r\n    const { current } = this.state;\r\n    return (\t\r\n    //   <div style={{\r\n    //     background: 'white',\r\n    //     color: 'black',\r\n    //     height: '100%',\r\n    //     width: '100%',\r\n    //     overflow: 'hidden'\r\n    //   }}>\r\n\r\n        /* <Weather />\r\n        <Clock /> */\r\n        \r\n        \r\n        \r\n    //   </div>\r\n\t<div style={{\r\n\t\twidth:\"100%\",\r\n\t\theight: \"100%\",\r\n\t\tbackgroundColor: \"black\",\r\n\t\tcolor: \"white\"\r\n\t}}>\r\n\t\t<BottomNavigation \r\n        value={this.state.current} \r\n        onChange={(event, newValue) => this.setState({current: newValue})}\r\n        showLabels\r\n        style={{\r\n          position: 'absolute',\r\n          left: '0',\r\n          top: '0',\r\n          backgroundColor: 'black',\r\n          borderLeftColor: 'black',\r\n          borderRightColor: 'black',\r\n          borderTopColor: 'black',\r\n          borderStyle: 'solid',\r\n          borderWidth: '3px',\r\n          borderBottomColor: '#0277bd' ,\r\n          width: '100%',\r\n          height: '3%',\r\n          color: 'white'\r\n        }}>\r\n          <BottomNavigationAction style={{color: 'white' }} label=\"实验室控制\" icon={<SettingsIcon />} />\r\n          <BottomNavigationAction style={{color: 'white' }} label=\"更多控制\" icon={<TuneIcon />} />\r\n    </BottomNavigation>\r\n\t\t<Clock />\r\n\t\t<Weather />\r\n\t\t<div style={{\r\n                position: 'absolute',\r\n                top: '10%',\r\n                left: '0',\r\n                width: '100%',\r\n                height: '80%'\r\n        }}>\r\n\t\t\t<div style = {{\r\n                    position: 'absolute',\r\n                    top: '0',\r\n                    left: '0',\r\n                    width: '100%',\r\n                    height: '100%'\r\n                }}>\r\n                    {\r\n                        this.state.current == \"screenSaver\"?\r\n                                (<div></div>)\r\n                            :this.state.current == \"0\"?<Octrl />:<Ictrl />         \r\n                    }\r\n        \t</div>\r\n\t\t</div>\r\n    \r\n    <div  style={{\r\n      position: 'absolute',\r\n      left: '0',\r\n      bottom: '0',\r\n      width: '100%',\r\n      height: '15%',\r\n      backgroundImage: 'url(\"./background.png\")',\r\n      backgroundSize: '100% 100%'\r\n    }}>\r\n          <div style={{\r\n          'position': 'absolute',\r\n          'top': '35%',\r\n          'right': '5%',\r\n          'line-height': '1.5em',\r\n          'font-size': '3em',\r\n        }}>\r\n          计算社会科学研究中心<br></br>欢迎您!\r\n    </div>\r\n    </div>\r\n\t</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Mirror;","/home/zhiguangda/ITS/deckgl/src/components/covid-19.jsx",["365","366","367","368"],"import React, {Component, Fragment} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {ScatterplotLayer} from '@deck.gl/layers';\nimport {DataFilterExtension} from '@deck.gl/extensions';\nimport {MapView} from '@deck.gl/core';\nimport SliderCovid from './sliderCovid'\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\nimport * as d3 from 'd3'\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiemhpZ3VhbmdkYSIsImEiOiJjanozdXg0b3EwMHh4M21tcXk2MHlpN3B1In0.lInf8zFl2BsP_bDjMFhf3w';\n\n\nconst MAP_VIEW = new MapView({\n    // 1 is the distance between the camera and the ground\n    farZMultiplier: 100\n});\n\n\nlet days=39;\n\nlet flag=-1;\n\n//read data\n\nlet dateMap=new Map();\nfunction getData(){\n    return new Promise(resolve => {\n        d3.csv(\"./COVID19_open_line_list.csv\").then(function (data) {\n            data.forEach(d=>{\n                let tmp=d.date_confirmation.split('.');\n                let tmpstr=tmp[2]+'-'+tmp[1]+'-'+tmp[0];\n                if(dateMap.has(tmpstr)){\n                    dateMap.get(tmpstr).push([d.longitude,d.latitude])\n                }\n                else{\n                    dateMap.set(tmpstr,[]);\n                }\n            })\n            resolve('done');\n        })\n    })\n}\n\n\n\n\n\nconst INITIAL_VIEW_STATE = {\n    longitude:  120.207057,\n    latitude: 30.225901,\n    zoom: 3,\n    pitch: 0,\n    bearing: 0\n};\n\nconst MS_PER_DAY = 8.64e7; // milliseconds in a day\n\nconst dataFilter = new DataFilterExtension({filterSize: 1});\n\nexport default class Covid extends Component {\n    // constructor(props) {\n    //     super(props);\n    //\n    //     const timeRange = this._getTimeRange(props.data);\n    //\n    //     this.state = {\n    //         timeRange,\n    //         filterValue: timeRange,\n    //         hoveredObject: null\n    //     };\n    //     this._onHover = this._onHover.bind(this);\n    //     this._renderTooltip = this._renderTooltip.bind(this);\n    // }\n    constructor(props) {\n        super(props);\n        // const [value, setValue] = React.useState([0]);\n        this.state = {\n            pointData:[],\n            days:days,\n            dayCount:0\n        };\n    }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (nextProps.data !== this.props.data) {\n    //         const timeRange = this._getTimeRange(nextProps.data);\n    //         this.setState({timeRange, filterValue: timeRange});\n    //     }\n    // }\n\n    // _getTimeRange(data) {\n    //     if (!data) {\n    //         return null;\n    //     }\n    //     return data.reduce(\n    //         (range, d) => {\n    //             const t = d.timestamp / MS_PER_DAY;\n    //             range[0] = Math.min(range[0], t);\n    //             range[1] = Math.max(range[1], t);\n    //             return range;\n    //         },\n    //         [Infinity, -Infinity]\n    //     );\n    // }\n\n    // _onHover({x, y, object}) {\n    //     this.setState({x, y, hoveredObject: object});\n    // }\n    _renderLayers() {\n\n        return [\n            // new ScatterplotLayer({\n            //     id: 'covid',\n            //     data:this.state.pointData,\n            //     opacity: 0.8,\n            //     radiusScale: 100,\n            //     radiusMinPixels: 1,\n            //     wrapLongitude: true,\n            //\n            //     getPosition: d =>d.coordinate,\n            //     getRadius: 500,\n            //     // getFillColor: d => {\n            //     //     const r = Math.sqrt(Math.max(d.depth, 0));\n            //     //     return [255 - r * 15, r * 5, r * 10];\n            //     // },\n            //\n            //     getFillColor:[255,0,0,255],\n            //\n            //     // getFilterValue: d => d.timestamp / MS_PER_DAY, // in days\n            //     // filterRange: [filterValue[0], filterValue[1]],\n            //     // filterSoftRange: [\n            //     //     filterValue[0] * 0.9 + filterValue[1] * 0.1,\n            //     //     filterValue[0] * 0.1 + filterValue[1] * 0.9\n            //     // ],\n            //     // extensions: [dataFilter],\n            //\n            //     pickable: true,\n            //     // onHover: this._onHover\n            // }),\n            new HeatmapLayer({\n                id:'heatmap',\n                data:this.state.pointData,\n                getPosition:d=>d.coordinate,\n                getWeight:10,\n                radiusPixels:20\n\n            })\n        ];\n    }\n\n    // _renderTooltip() {\n    //     const {x, y, hoveredObject} = this.state;\n    //     return (\n    //         hoveredObject && (\n    //             <div className=\"tooltip\" style={{top: y, left: x}}>\n    //                 <div>\n    //                     <b>Time: </b>\n    //                     <span>{new Date(hoveredObject.timestamp).toUTCString()}</span>\n    //                 </div>\n    //                 <div>\n    //                     <b>Magnitude: </b>\n    //                     <span>{hoveredObject.magnitude}</span>\n    //                 </div>\n    //                 <div>\n    //                     <b>Depth: </b>\n    //                     <span>{hoveredObject.depth} km</span>\n    //                 </div>\n    //             </div>\n    //         )\n    //     );\n    // }\n\n    _formatLabel(t) {\n        const date = new Date('2020-01-22');\n        date.setDate(date.getDate()+t);\n        return `${date.getFullYear()}/${date.getMonth()+1}/${date.getDate()}`;\n    }\n\n    render() {\n        const {mapStyle = 'mapbox://styles/mapbox/light-v9'} = this.props;\n        // const {timeRange, filterValue} = this.state;\n\n        return (\n            <Fragment>\n                <DeckGL\n                    views={MAP_VIEW}\n                    layers={this._renderLayers()}\n                    initialViewState={INITIAL_VIEW_STATE}\n                    controller={true}\n                >\n                    <StaticMap\n                        reuseMaps\n                        mapStyle={mapStyle}\n                        preventStyleDiffing={true}\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\n                    />\n\n                    {/*{this._renderTooltip}*/}\n                </DeckGL>\n\n                <SliderCovid\n                    min={0}\n                    max={this.state.days}\n                    value={[0,this.state.dayCount]}\n                    formatLabel={this._formatLabel}\n\n                    onChange={({date,value}) => {\n                        console.log('value:',value)\n\n                        if(flag===-1){\n                            let p=getData();\n                            console.log(dateMap);\n                            p.then(result=>{\n                                let pointData=[];\n                                if(dateMap.has(date)){\n                                    dateMap.get(date).forEach(d=>{\n                                        console.log(d)\n                                        pointData.push({\n                                            coordinate:[parseFloat(d[0]),parseFloat(d[1])]\n                                        })\n                                    })\n                                    this.setState({\n                                        pointData:pointData,\n                                        dayCount:value[1]\n                                    })\n                                }\n\n                                flag=0;\n\n                            });\n\n                        }\n                        else{\n                            let pointData=[];\n\n                            if(dateMap.has(date)){\n                                dateMap.get(date).forEach(d=>{\n                                    pointData.push({\n                                        coordinate:[parseFloat(d[0]),parseFloat(d[1])]\n                                    })\n                                });\n                                this.setState({\n                                    pointData:pointData,\n                                    // dayCount:this.state.dayCount+1\n                                });\n                            }\n\n                            this.setState({\n                                dayCount:value[1]\n                            })\n                            console.log(this.state.pointData);\n                        }\n\n\n\n\n                        // let nowTime=value[1];\n                        // // console.log('nowTime:',nowTime);\n                        // if(Math.floor(nowTime/3600)!==this.state.hour){\n                        //     this.setState({hour:Math.floor(nowTime/3600)})\n                        //     console.log('nowztime:',nowTime);\n                        //     var hour=(nowTime/3600).toFixed(0);\n                        //     console.log('hour:',hour);\n                        //     var p=getRoute(hour);\n                        //     p.then(function() {\n                        //         this.setState({\n                        //             Route:Routes,\n                        //             depPolygon:depPolygon,\n                        //             desPolygon:desPolygon\n                        //         })\n                        //     }.bind(this))\n                        // }\n                        // this.setState({time: nowTime})\n                        // //console.log(this.state)\n                        // //console.log('value:',value)\n                    }}\n                />\n            </Fragment>\n        );\n    }\n}\n\n// export function renderToDOM(container) {\n//     render(<App />, container);\n//     require('d3-request').csv(DATA_URL, (error, response) => {\n//         if (!error) {\n//             const data = response.map(row => ({\n//                 timestamp: new Date(`${row.DateTime} UTC`).getTime(),\n//                 latitude: Number(row.Latitude),\n//                 longitude: Number(row.Longitude),\n//                 depth: Number(row.Depth),\n//                 magnitude: Number(row.Magnitude)\n//             }));\n//             render(<App data={data} />, container);\n//         }\n//     });\n// }\n","/home/zhiguangda/ITS/deckgl/src/components/sliderTraffic.js",["369","370","371","372","373","374","375","376","377","378"],"/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, {PureComponent} from 'react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {LightTheme, BaseProvider, styled} from 'baseui';\nimport {Slider} from 'baseui/slider';\nimport {Button, SHAPE, SIZE} from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\nimport { Select } from \"baseui/select\";\n\nconst engine = new Styletron();\n\nconst SelectContainer=styled('div',{\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n    top: '10px',\n    left:'10px'\n});\n\n\nconst Container = styled('div', {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    bottom: '20px',\n    width: '100%'\n});\n\nconst ThumbValue = styled('div', {\n    color: '#FF0000',\n    position: 'absolute',\n    top: '-2em',\n    width: '200px'\n});\n\nconst TickBar = styled('div', {\n    width: '480px',\n    height: '24px',\n    maxWidth: '80vw'\n});\n\n\n\n\n\n\n\nconst ANIMATION_SPEED = 1;\n\nexport default class sliderTraffic extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false\n        };\n\n        this._renderThumbValue = this._renderThumbValue.bind(this);\n        this._animate = this._animate.bind(this);\n        this._toggle = this._toggle.bind(this);\n        this._animationFrame = null;\n    }\n    componentDidMount() {\n        // this._animate()\n    }\n\n    // componentWillUnmount() {\n    //     cancelAnimationFrame(this._animationFrame);\n    // }\n\n    _toggle() {\n        cancelAnimationFrame(this._animationFrame);\n        const {isPlaying} = this.state;\n        if (!isPlaying) {\n            this._animate();\n        }\n        this.setState({isPlaying: !isPlaying});\n    }\n\n    _animate() {\n        const {min,max, value} = this.props;\n        let newValue=value[1]+ANIMATION_SPEED;\n        if(value[1]>max){\n            newValue=min;\n        }\n        this.props.onChange({\n            value: [value[0],newValue]\n        });\n        this._animationFrame = requestAnimationFrame(this._animate);\n    }\n\n    _renderThumbValue({$thumbIndex, $value}) {\n\n        if($thumbIndex==1){\n            const value = $value[$thumbIndex];\n            if(value==3600){\n                console.log('thumb==3600')\n            }\n           // console.log('thumb:',value)\n            return <ThumbValue Color={[0,0,0,255]} >{this.props.formatLabel(value)}</ThumbValue>;\n        }\n        else{\n            return <ThumbValue></ThumbValue>\n        }\n        // return <ThumbValue>{0}</ThumbValue>;\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(error, errorInfo);\n    }\n\n\n    render() {\n        const {value, min, max} = this.props;\n        const isButtonEnabled = value[0] > min || value[1] < max;\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return (\n                    <Container>\n                        <Button\n                            id={'start'}\n                            shape={SHAPE.round}\n                            size={SIZE.compact}\n                            disabled={!isButtonEnabled}\n                            onClick={this._toggle}\n                        >\n                            {this.state.isPlaying ? <Stop title=\"Stop\" /> : <Start title=\"Animate\" />}\n                        </Button>\n                        <Slider\n                            {...this.props}\n                            overrides={{\n                                ThumbValue: this._renderThumbValue,\n                                TickBar: () => <TickBar />\n                            }}\n                        />\n\n                    </Container>\n\n        );\n    }\n}\n","/home/zhiguangda/ITS/deckgl/src/components/city/AxisBottom.js",[],"/home/zhiguangda/ITS/deckgl/src/components/city/AxisLeft.js",[],"/home/zhiguangda/ITS/deckgl/src/components/streamgraph/useData.js",[],"/home/zhiguangda/ITS/deckgl/src/components/city/ColorLegend.js",[],"/home/zhiguangda/ITS/deckgl/src/components/streamgraph/Marks.js",["379"],"import React from 'react';\nimport * as d3 from \"d3\";\n\nexport const Marks = ({\n                          data,\n                          xScale,\n                          xValue,\n                          yScale,\n                          innerHeight,\n                          innerWidth,\n                          margin,\n                          keys,\n                            start,\n                          callback\n                      }) =>{\n\n    const svg=d3.select('svg');\n\n    let stack = d3.stack()//\n        .offset(d3.stackOffsetWiggle)\n        .order(d3.stackOrderNone);\n\n\n    var colorScale = d3.scaleOrdinal()\n        .range(d3.schemeCategory10);\n\n    var area = d3.area()\n        .x(d => xScale(xValue(d.data))+margin.left)\n        .y0(d => (yScale(d[0])+margin.top))\n        .y1(d => (yScale(d[1])+margin.top))\n        .curve(d3.curveBasis);\n\n\n    if(data){\n        data=data.slice(start,start+24);\n        // console.log(keys)\n        stack.keys(keys);\n        // console.log('data',data);\n        let stacked=stack(data);\n        // console.log('stack',stacked);\n\n        colorScale.domain(d3.range(keys.length));\n\n        xScale\n            .domain(d3.extent(data, xValue))\n            .range([0, innerWidth]);\n        yScale\n            .domain([\n                d3.min(stacked, function (series) {\n                    return d3.min(series, function (d) { return d[0]; });\n                }),\n                d3.max(stacked, function (series) {\n                    return d3.max(series, function (d) { return d[1]; });\n                })\n            ])\n            .range([ innerHeight,0]);\n\n        let p=svg.selectAll('path')\n            .data(stacked)\n            .join('path')\n            .attr('fill', function (d) {\n                // console.log('d',d)\n                // console.log(d[0].data[d.index]);\n                return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            })\n            .attr('stroke', function (d) { return d3.interpolateSpectral(keys.indexOf(d[0].data[d.index]/8)); })\n            .transition()\n            .duration(2000)\n            .attr('d', area)\n            .end();\n\n        p.then(r=>{\n            callback()\n        })\n    }\n\n    return null;\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/Barchart/useData.js",[],"/home/zhiguangda/ITS/deckgl/src/components/city/useData.js",["380","381","382","383","384"],"import React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst InnerList=['Camden',\n    'Greenwich',\n    'Hackney',\n    'Hammersmith and Fulham',\n    'Islington',\n    'Kensington and Chelsea',\n    'Lambeth',\n    'Lewisham',\n    'Southwark',\n    'Tower Hamlets',\n    'Wandsworth',\n    'Westminster']\n\nexport const useData = () => {\n    const [data, setData] = useState(null);\n    useEffect(() => {\n        console.log('1');\n        d3.csv('./happy.csv').then(d=>{\n            let data={};\n            d.map((l,index)=>{\n                //l 结构：\n                // Code: \"E09000001\"\n                // Area: \"City of London\"\n                // 2011/12: \"x\"\n                // 2012/13: \"x\"\n                // 2013/14: \"x\"\n                // 2014/15: \"x\"\n                // 2015/16: \"x\"\n                // 2016/17: \"x\"\n                let pro=Object.getOwnPropertyNames(l);\n                // console.log(l);\n                pro.map((n,index)=>{\n                    if(index>1){\n                        if(data[n]===undefined){\n                            data[n]={}\n                        }\n                        if(data[n][l['Area']]===undefined){\n                            data[n][l['Area']]={};\n                        }\n                        data[n][l['Area']].happy=l[n];\n                        if(InnerList.indexOf(l['Area'].toString())>=0){\n                            console.log('innner')\n                            data[n][l['Area']].Area='InnerLondon'\n                        }\n                        else data[n][l['Area']].Area='OuterLondon'\n                    }\n\n                })\n                // l.map((t,i)=>{\n                //     if(i>1){\n                //         if(data[i]===undefined){\n                //             data[i]=[]\n                //         }\n                //         // data[i].happy=\n                //         console.log(Object.getOwnPropertyNames(t))\n                //     }\n                //\n                // })\n            })\n            // hpData=d;\n            // console.log('data:',data);\n            d3.csv('./worthwhile.csv').then(d=>{\n                d.map((l,index)=>{\n                    let pro=Object.getOwnPropertyNames(l);\n                    pro.map((n,index)=>{\n                        if(index>1){\n                            if(data[n]===undefined){\n                                data[n]={}\n                            }\n                            if(data[n][l['Area']]===undefined){\n                                data[n][l['Area']]={};\n                            }\n                            data[n][l['Area']].worth=l[n];\n                        }\n                    })\n                })\n                setData(data)\n            });\n        })\n    },[]);//这里加这个[],可以让这个useEffect只执行一次\n\n    return data;\n};\n","/home/zhiguangda/ITS/deckgl/src/components/Barchart/Marks.js",["385","386","387","388","389","390"],"import React from 'react';\nimport * as d3 from \"d3\";\n\nexport const Marks = ({\n                          data,\n                          xScale,\n                          xValue,\n                          yScale,\n                          innerHeight,\n                          innerWidth,\n                          margin,\n                          keys,\n                            start,\n                          callback\n                      }) =>{\n\n    const svg=d3.select('svg');\n\n    const xLength=24;\n    const getTime=d=>{\n        let date=new Date(d.date);\n        let hour=date.getHours();\n        let day=date.getDate();\n        return day+'/'+hour+':00'\n\n    }\n\n    const delay=1000;\n\n    let stack = d3.stack()//\n        .offset(d3.stackOffsetNone)\n        .order(d3.stackOrderNone);\n\n\n    var colorScale = d3.scaleOrdinal()\n        .range(d3.schemeCategory10);\n\n    var area = d3.area()\n        .x(d => xScale(xValue(d.data))+margin.left)\n        .y0(d => (yScale(d[0])+margin.top))\n        .y1(d => (yScale(d[1])+margin.top))\n        .curve(d3.curveBasis);\n\n\n    if(data){\n        data=data.slice(19,139);\n        // console.log(keys)\n        stack.keys(keys);\n        // console.log('data',data);\n        let stacked=stack(data);\n        // console.log('stack',stacked);\n\n        colorScale.domain(d3.range(keys.length));\n\n        xScale\n            .domain(d3.extent(data, xValue))\n            .range([0, innerWidth]);\n        yScale\n            .domain([\n                d3.min(stacked, function (series) {\n                    return d3.min(series, function (d) { return d[0]; });\n                }),\n                d3.max(stacked, function (series) {\n                    return d3.max(series, function (d) { return d[1]; });\n                })\n            ])\n            .range([ innerHeight,0]);\n\n\n        let rectData=[];\n//stack的数据结构：\n//      //数组里面7个元素分别对应7个地点\n//      //每个元素又是一个数组有24个元素分别对应24小时\n/*       (7) [Array(24), Array(24), Array(24), Array(24), Array(24), Array(24), Array(24)]\n0: Array(24)\n0: (2) [0, 19.3671431509997, data: {…}, key: \"San Francisco\"]\n1: (2) [0, 20.8082012083461, data: {…}, key: \"San Francisco\"]\n2: (2) [0, 22.5238576663828, data: {…}, key: \"San Francisco\"]\n3: (2) [0, 24.4214051463704, data: {…}, key: \"San Francisco\"]\n4: (2) [0, 26.2049693716955, data: {…}, key: \"San Francisco\"]\n5: (2) [0, 26.579802484894, data: {…}, key: \"San Francisco\"]\n6: (2) [0, 26.5525094442272, data: {…}, key: \"San Francisco\"]\n7: (2) [0, 23.9758724990251, data: {…}, key: \"San Francisco\"]\n8: (2) [0, 20.7705334007582, data: {…}, key: \"San Francisco\"]\n9: (2) [0, 19.5826361563267, data: {…}, key: \"San Francisco\"]\n10: (2) [0, 18.7265399946616, data: {…}, key: \"San Francisco\"]\n11: (2) [0, 18.2886029132647, data: {…}, key: \"San Francisco\"]\n12: (2) [0, 17.4904771411586, data: {…}, key: \"San Francisco\"]\n13: (2) [0, 17.1831430954037, data: {…}, key: \"San Francisco\"]\n14: (2) [0, 17.2898856656444, data: {…}, key: \"San Francisco\"]\n15: (2) [0, 17.8578100360021, data: {…}, key: \"San Francisco\"]\n16: (2) [0, 18.1992192220978, data: {…}, key: \"San Francisco\"]\n17: (2) [0, 18.13420905954, data: {…}, key: \"San Francisco\"]\n18: (2) [0, 18.5888149684944, data: {…}, key: \"San Francisco\"]\n19: (2) [0, 18.6733003026984, data: {…}, key: \"San Francisco\"]\n20: (2) [0, 19.1600833190036, data: {…}, key: \"San Francisco\"]\n21: (2) [0, 19.207095797011, data: {…}, key: \"San Francisco\"]\n22: (2) [0, 18.9847082241235, data: {…}, key: \"San Francisco\"]\n23: (2) [0, 19.4293802064908, data: {…}, key: \"San Francisco\"]\nkey: \"San Francisco\"\nindex: 0\nlength: 24\n__proto__: Array(0)\n1: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Bangalore\", index: 1]\n2: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Boston\", index: 2]\n3: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Geneva\", index: 3]\n4: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Rio de Janeiro\", index: 4]\n5: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Shanghai\", index: 5]\n6: (24) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), key: \"Singapore\", index: 6]\nlength: 7\n__proto__: Array(0)*/\n//\n//把 stack 再转换成按时间分组的数据，其实data就是按时间分组的，但是为了计算出堆叠出来的数据所以用的了stack\n        stacked.map(x=>{\n            x.map((t,index)=>{\n                t.key=x.key;\n                if(rectData[index]===undefined){\n                    rectData[index]=[]\n                }\n                rectData[index].push(t);\n            })\n        })\n\n        // console.log('rectData',rectData)\n\n\n        const group=svg.append('g');\n        const g2=svg.append('g');\n        let count=0;\n        let tmpData=[];\n\n\n        let groupCount=[];\n\n        // tmpData.forEach(d=>{d.n=tmpData.indexOf(d)})\n        let testData=[];\n\n        function update(){\n            let popNum=0;\n            groupCount.unshift(rectData[count].length);\n            if(groupCount.length>xLength){\n                // console.log('24')\n                popNum=groupCount.pop()\n            }\n            //tmpData 里面是每一个小矩形的数据(到目前为止所有插入的矩形)，如何对这些矩形计数呢从而和时间对应\n            //无论你有多少数据我都只取前24组时间内的数据//不对啊我这样做出来的效果并不是时间轴跟着动而是这个温度变成下一个时刻的温度这样的动态效果，最好试用的例子是不同年龄段的人随着时间变化的过程，并不是温度\n            rectData[count].forEach(d=>{\n                    d.count=count;\n                    tmpData.unshift(d)\n                }\n            );\n\n            testData.unshift(\n                    rectData[count]\n\n                );\n            // console.log('testData',xValue(testData[0][0].data))\n            if(testData.length>xLength)testData.pop();\n            // console.log('testData',testData)\n            let g=g2.selectAll('g').data(testData).enter().append('g');\n            // console.log('g',g);\n            // let g3=g.enter().append('g');\n            // g3.append('text').attr('x',d=>xScale(xValue(d[0].data))+margin.left).attr('y',d=>yScale(d[0][1])+margin.top).text(d=>xValue(d[0].data))\n            let g4=g2.selectAll('g')\n                .selectAll('rect')\n                .data(d=>d)\n                .join(\n                    enter=>enter.append('rect')\n                        .attr('fill', function (d) {\n                            return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n                        })\n                        .attr('x', d =>{\n                            // console.log('x',xScale(xValue(d.data))+margin.left)\n                            return xScale(xValue(d.data))+margin.left-5\n                        } )\n                        .attr('y',d => (yScale(d[1])+margin.top))\n                        .attr('height',d=>(yScale(d[0])-yScale(d[1]))),\n\n                    update=>update\n                    //     .attr('x',d=>{\n                    //     console.log(this)\n                    //     if(d.count===count&&d.count>=xLength){\n                    //         return xScale(xValue(d.data))+margin.left\n                    //     }\n                    //     else return this.x\n                    // })\n                )\n\n                // .attr('cx',(d,i,node)=>{\n                //     console.log('node',node);\n                //     if(xValue(d.data)===0&&i!==0)\n                //         return xScale(xValue(d.data))+margin.left\n                //     else return(node[i].cx)\n                // })\n            g4.filter((d,i)=>{\n                return xValue(d.data)===0\n            }).attr('fill', function (d) {\n                // console.log('count',d.count)\n                return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            })\n                .attr('x', d =>{\n                    // console.log('next!!')\n                    return xScale(xValue(d.data))+margin.left-5\n                } )\n                .attr('y',d => (yScale(d[1])+margin.top))\n                // .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n                .attr('width',0)\n\n\n            let p1=g4.transition()\n                .duration(delay)\n                .attr('fill', function (d) {\n                    return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n                })\n                .attr('x', d =>{\n                    // console.log('x',xScale(xValue(d.data))+margin.left)\n                    return xScale(xValue(d.data))+margin.left-5\n                } )\n                .attr('y',d => (yScale(d[1])+margin.top))\n                .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n                .attr('width',10)\n                .end()\n\n            let g5=g2.selectAll('g').selectAll('text')\n                .data(d=>d)\n                .join('text')\n                .text((d,i,node)=>{\n                    // console.log('d12',d);\n                    if (i===6) return getTime(d.data);\n                    else return null\n                })\n                .attr('dy',\".2em\")\n                .attr('font-size',\"8\")\n\n\n            g5.filter(d=>{\n                return xValue(d.data)===0\n            }).attr('x',d=>xScale(xValue(d.data))+margin.left-12)\n                .attr('y',d=>yScale(d[1])+margin.top)\n\n            g5.transition()\n                .duration(delay)\n                .attr('x',d=>xScale(xValue(d.data))+margin.left-12)\n                .attr('y',d=>yScale(d[1])+margin.top)\n            // g3.selectAll('circle').data(d=>d).enter().append('circle')\n            //     .transition()\n            //     .duration(2000)\n            //     .attr('r',10).attr('cy',d=>yScale(d[1])+margin.top).attr('cx',d=>xScale(xValue(d.data))+margin.left);\n\n            // console.log('g3',)\n\n\n\n\n\n            //如果界面满了就不再增加数据量\n            for(let i=0;i<popNum;i++){\n                tmpData.pop()\n            }\n            let t=[];\n            tmpData.forEach((d,index)=>{\n                let m=[d[0],d[1]];\n                m.data=d.data;\n                m.key=d.key;\n                m.n=index;\n                m.count=d.count\n                t.push(m)\n            });\n            console.log('t.len',t.length)\n\n\n\n\n            // console.log('t',t);\n            // console.log('tmpData',tmpData);\n            // let s1=group.selectAll('rect')\n            //     .data(t,d=>d.n)\n            // .join(\n            //         enter=>enter.append('rect')\n            //             .attr('fill', function (d) {\n            //                 return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            //             })\n            //             .attr('x', d =>{\n            //                 // console.log('x',xScale(xValue(d.data))+margin.left)\n            //                 return xScale(xValue(d.data))+margin.left\n            //             } )\n            //             .attr('y',d => (yScale(d[1])+margin.top))\n            //             .attr('height',d=>(yScale(d[0])-yScale(d[1]))),\n            //\n            //         update=>update\n            //         //     .attr('x',d=>{\n            //         //     console.log(this)\n            //         //     if(d.count===count&&d.count>=xLength){\n            //         //         return xScale(xValue(d.data))+margin.left\n            //         //     }\n            //         //     else return this.x\n            //         // })\n            //     )\n            // //要选择的是坐标轴最后一个数据而不是最新的数据！！！而最后一个的当前数据的时间是0点\n            // let f=group.selectAll('rect')\n            //     .filter(d=>xValue(d.data)===0&&d.count>1)\n            //     .attr('fill', function (d) {\n            //         // console.log('count',d.count)\n            //         return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            //     })\n            //     .attr('x', d =>{\n            //         // console.log('next!!')\n            //         return xScale(xValue(d.data))+margin.left\n            //     } )\n            //     .attr('y',d => (yScale(d[1])+margin.top))\n            //     // .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n            //      .attr('width',0)\n            //\n            // let p1=s1.transition()\n            //     .duration(800)\n            //     .attr('fill', function (d) {\n            //         return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            //     })\n            //     .attr('x', d =>{\n            //         // console.log('x',xScale(xValue(d.data))+margin.left)\n            //         return xScale(xValue(d.data))+margin.left\n            //     } )\n            //     .attr('y',d => (yScale(d[1])+margin.top))\n            //     .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n            //     .attr('width',10)\n            //     .end()\n            // let p2=s1.enter().append('rect')\n            //     .attr('fill', function (d) {\n            //         return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n            //     })\n            //     .attr('x', d =>{\n            //         // console.log('x',xScale(xValue(d.data))+margin.left)\n            //         return xScale(xValue(d.data))+margin.left\n            //     } )\n            //     .attr('y',d => (yScale(d[1])+margin.top))\n            //     .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n            //     // .attr('stroke', function (d) { return d3.interpolateSpectral(keys.indexOf(d[0].data[d.index]/8)); })\n            //     // .transition()\n            //     // .duration(2000)\n            //     .transition()\n            //     .duration(1000)\n            //     .attr('width',10)\n            //     .end();\n\n\n\n             // let p2= p.enter().append('rect')\n             //      .attr('fill', function (d) {\n             //    return d3.interpolateSpectral(keys.indexOf(d.key)/8);\n             //    })\n             //    .transition()\n             //    .duration(2000)\n             //    .attr('x', d =>{\n             //        console.log('x',xScale(xValue(d.data))+margin.left)\n             //        return xScale(xValue(d.data))+margin.left\n             //    } )\n             //    .attr('y',d => (yScale(d[1])+margin.top))\n             //    .attr('height',d=>(yScale(d[0])-yScale(d[1])))\n             //    // .attr('stroke', function (d) { return d3.interpolateSpectral(keys.indexOf(d[0].data[d.index]/8)); })\n             //    // .transition()\n             //    // .duration(2000)\n             //    .attr('width',10)\n             //     .end()\n            p1.then(()=>{\n                if(count<(rectData.length-1)){\n                    // let p2=group.transition()\n                    //     .duration(1000)\n                    //     .attr(\"transform\", `translate(${xScale(1)-xScale(0)},0)`)\n                    //     .end()\n                    // p2.then(()=>{\n                        count++;\n                        // tmpData=tmpData.slice(0,2);\n\n                    // console.log('tmpData1',tmpData);\n                    // console.log('t1',t)\n                        update()\n                        // }\n                    // )\n\n                }\n                else{\n                    // callback()\n                    // count=0;\n                }\n            })\n        }\n\n        update();\n\n        // stacked.map((x,index)=>{\n        //     // if(index!==0){\n        //     //     return\n        //     // }\n        //     svg.selectAll('rect')\n        //         .data(x)\n        //\n        // })\n        // let p=\n        //     .end();\n\n        // p.then(r=>{\n        //     callback()\n        // })\n    }\n\n    return null;\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/city/Marks.js",["391"],"import React from 'react';\nimport * as d3 from \"d3\";\n\n\nexport const Marks = ({\n                          data,\n                          xScale,\n                          xValue,\n                          yScale,\n                          yValue,\n                          colorScale,\n                          colorValue,\n                          tooltipFormat,\n                          circleRadius,\n                          year,\n                          callback,\n                          margin\n                      }) =>{\n    function dataAt(year){\n        console.log('data:',data);\n        let results=[];\n        let pro=Object.getOwnPropertyNames(data[year]);\n        pro.forEach(d=>{\n            results.push({\n                city:d,\n                data:data[year][d],\n            })\n        })\n        return results\n    }\n\n    if(year&&data){\n        let currentData=dataAt(year+'/'+(year-2000+1));\n        let svg=d3.select('svg');\n        let c1=svg.selectAll(\"circle\")\n            .data(currentData,d=>d['city'])\n        console.log('enter',c1)\n        let c=c1\n            .join('circle')\n            .attr(\"stroke\", \"black\")\n\n            .transition()\n            // .on('end',function repeat(){\n            //     console.log('end')\n            // })\n            .duration(1000)\n            .attr(\"r\", d =>{\n                if(!(parseFloat(d.data['happy'])&&parseFloat(d.data['worth']))) return 0;\n                else return Math.random()*10\n            })\n            .attr(\"cx\", d => {if(parseFloat(d.data['happy'])){\n                // console.log(d.data['happy'])\n                return xScale(d.data['happy'])+margin.left\n            }})\n            .attr(\"cy\", d => {if(d.data['worth']){\n                return yScale(d.data['worth'])+margin.top\n            }\n            })\n            .attr(\"fill\", d =>{\n                // console.log('d',d);\n                //  console.log('Area',d.data.Area)\n                return colorScale(d.data.Area)\n            } )\n            .end();\n        c.then(result=>{\n            // if(year<2016){\n            //     setYear(year+1)\n            //     // updateCircle()\n            // }\n            // else {\n            //     setYear(2011)\n            //     // console.log('year:',year)\n            //     // year=2011;\n            //     // updateCircle()\n            // }\n            callback();\n            console.log('done')\n        })\n    }\n    return null\n}\n    // data.map(d => (\n    //     <circle\n    //         className=\"mark\"\n    //         cx={xScale(xValue(d))}\n    //         cy={yScale(yValue(d))}\n    //         fill={colorScale(colorValue(d))}\n    //         r={circleRadius}\n    //     >\n    //         <title>{tooltipFormat(xValue(d))}</title>\n    //     </circle>\n    // ));\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Navi.js",["392","393","394","395","396"],"import React from 'react';\r\nimport { Menu , Button} from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined, \r\n    PictureOutlined,\r\n    CalendarOutlined,\r\n    ControlOutlined,\r\n  } from '@ant-design/icons';\r\nimport St from './St';\r\nimport Appo from './Appo'\r\nimport {Panel} from '../panel/control'\r\n  \r\n\r\n\r\nexport default class Navi extends React.Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n        key: 1,\r\n    };\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    changeStyle = function (elem, name, value) {\r\n        elem.style[name] = value;\r\n    }\r\n\r\n    handleClick = e => {\r\n        console.log('点击事件', 1)\r\n        this.setState({\r\n            key: e.key\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: '300px',\r\n                left: '20px',\r\n                width: '100%'\r\n            }}>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '20px',\r\n                    left: '20px',\r\n                    }}>\r\n                    {/* <Button type=\"primary\" onClick={this.toggleCollapsed} size='large' style={{ marginBottom: 16 }}>\r\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n                    </Button> */}\r\n                    <Menu\r\n                        className='menu'\r\n                        onClick={this.handleClick}\r\n                        defaultSelectedKeys={['1']}\r\n                        theme=\"dark\"\r\n                        mode=\"vertical\"\r\n                        inlineCollapsed=\"true\">\r\n                        <Menu.Item key=\"1\" icon={<PictureOutlined />}>\r\n                            风格迁移\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\" icon={<CalendarOutlined />}>\r\n                            参观预约\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\" icon={<ControlOutlined />}>\r\n                            控制面板       \r\n                        </Menu.Item> \r\n                    </Menu>\r\n                </div>\r\n\r\n                <div style = {{\r\n                    position: 'absolute',\r\n                    top: '300px',\r\n                    left: '300px',\r\n                    width: '800px',\r\n                }}>\r\n                    {\r\n                        this.state.key == 1?\r\n                            (<div className='b1'> \r\n                                <St />\r\n                            </div>)\r\n                            :\r\n                            this.state.key == 2?\r\n                                (<div className='b2'>\r\n                                    <Appo />\r\n                                </div>)\r\n                                :\r\n                                (<div style={{\r\n                                    position: 'absolute',\r\n                                    top: '40px',\r\n                                    left: '280px'\r\n                                }}>\r\n                                    <Panel />\r\n                                </div>)\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}",["397","398"],"/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Weather.js",["399"],"import React from 'react'\r\n\r\nexport default class Weather extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        weather: null,\r\n        icon: null,\r\n        src: null\r\n      }\r\n    }\r\n  \r\n    getWeather = async (e) => {\r\n      const api_call = await fetch('http://api.openweathermap.org/data/2.5/weather?q=hangzhou&appid=7328419133fa6fd44868e923b84869d1')\r\n      const data = await api_call.json();\r\n      console.log(data);\r\n      const localWeather = data.weather[0].main;\r\n      const icondata = data.weather[0].icon\r\n      console.log(icondata)\r\n      let localTemp = data.main.temp - 273.15;\r\n      localTemp = Math.round(localTemp)\r\n      console.log(localWeather)\r\n      this.setState({\r\n        weather: localTemp,\r\n        icon: icondata,\r\n        src: 'http://openweathermap.org/img/wn/' + icondata +'.png',\r\n        localWeather: localWeather\r\n      }) \r\n      // console.log(this.state.src)\r\n      // console.log('图标',data.weather[0].icon)\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.getWeather()\r\n      this.timerID = setInterval(() => this.getWeather(), 150000);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div style={{\r\n            'position': 'absolute',\r\n            'left': '43%',\r\n            'top': '5%',\r\n          }}>\r\n            <img src = {this.state.src}/>\r\n          </div>\r\n          <div style={{\r\n            'position': 'absolute',\r\n            'left': '35%',\r\n            'top': '5%',\r\n            color: \"white\",\r\n            fontSize: \"2em\"\r\n          }}>\r\n            {this.state.localWeather}\r\n          </div>\r\n          <div style={{\r\n            'position': 'absolute',\r\n            'left': '35%',\r\n            'top': '7%',\r\n            color: \"white\",\r\n            fontSize: \"2em\"\r\n          }}>\r\n            {this.state.weather+\"°C\"}\r\n          </div>\r\n        </div>\r\n        // <div style={{\r\n        //     'position': 'absolute',\r\n        //     'right': '10%',\r\n        //     'top': '5%',\r\n        //   }}>\r\n        //   <img src = {this.state.src}/>\r\n        //   <div>{this.state.weather+\"°C\"}</div>\r\n        // </div>\r\n      )\r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Clock.js",[],"/home/zhiguangda/ITS/deckgl/src/components/charts/charts.js",["400","401"],"import { Bar } from '@antv/g2plot';\nimport { Line } from '@antv/g2plot';\nimport {Component} from 'react';\nimport React,{Fragment} from 'react';\n\n\n\n\n\n\nlet data = [\n];\n\n\nconst background={\n    width: \"300px\",\n    margin: \"30px auto\",\n    backgroundColor: \"#FFFFFF\",  //驼峰法\n    minHeight: \"50px\",\n    boxSizing: \"border-box\",\n    position: \"fixed\",\n    top: \"400px\"\n\n};\n\nexport default class Charts extends Component{\n    constructor(props){\n        super(props);\n        data=props.data;\n    }\n\n    componentDidMount() {\n        const line = new Line('line', {\n            data,\n            xField: 'time',\n            yField: 'speed',\n        });\n\n        line.render();\n    }\n\n    render() {\n        return (\n            <container>\n                <div id={'background'} style ={background}>\n                    <div id={'line'}/>\n                </div>\n            </container>\n        )\n    }\n}\n",["402","403"],"/home/zhiguangda/ITS/deckgl/src/components/charts/panel.js",["404","405"],"\nimport {Component} from 'react';\nimport React,{Fragment} from 'react';\n\nimport {Slider} from 'antd'\n\nconst style = {\n    display: 'inline-block',\n    height: 200,\n    width: 300,\n    marginLeft: 70,\n};\n\nconst marks = {\n    0: '0°C',\n    26: '26°C',\n    37: '37°C',\n    100: {\n        style: {\n            color: '#f50',\n        },\n        label: <strong>100°C</strong>,\n    },\n};\n\nexport default class Panel extends Component{\n    constructor(props){\n        super();\n    }\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <container>\n                <div style={style}>\n                    <Slider vertical defaultValue={30} />\n                </div>\n            </container>\n        )\n    }\n}\n","/home/zhiguangda/ITS/deckgl/src/components/lineChart/ColorLegend.js",[],"/home/zhiguangda/ITS/deckgl/src/components/sliderCovid.js",["406","407","408","409"],"/* global requestAnimationFrame, cancelAnimationFrame */\nimport React, {PureComponent} from 'react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {LightTheme, BaseProvider, styled} from 'baseui';\nimport {Slider} from 'baseui/slider';\nimport {Button, SHAPE, SIZE} from 'baseui/button';\nimport Start from 'baseui/icon/chevron-right';\nimport Stop from 'baseui/icon/delete';\n\nconst engine = new Styletron();\n\nconst ButtonContainer=styled('div',{\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 2,\n    top: '10px',\n    left:'10px'\n});\n\nconst Container = styled('div', {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n    bottom: '20px',\n    width: '100%'\n});\n\nconst ThumbValue = styled('div', {\n    color: '#000000',\n    position: 'absolute',\n    top: '-2em'\n});\n\nconst TickBar = styled('div', {\n    width: '480px',\n    height: '20px',\n    maxWidth: '80vw'\n});\n\nconst ANIMATION_SPEED = 1;\nlet count=0;\n\nexport default class sliderCovid extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false\n        };\n\n        this._renderThumbValue = this._renderThumbValue.bind(this);\n        this._animate = this._animate.bind(this);\n        this._toggle = this._toggle.bind(this);\n        this._animationFrame = null;\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this._animationFrame);\n    }\n\n    _toggle() {\n        cancelAnimationFrame(this._animationFrame);\n        const {isPlaying} = this.state;\n        if (!isPlaying) {\n            this._animate();\n        }\n        this.setState({isPlaying: !isPlaying});\n    }\n\n    _animate() {\n        count++;\n        // console.log(count);\n        if(count===ANIMATION_SPEED){\n            const {max,value} = this.props;\n            let newCount=((value[1]+1)>max)?0:value[1]+1;\n\n            let date=new Date('2020-01-22');\n            date.setDate(date.getDate()+value[1]);\n            console.log('mounth:',date.getMonth());\n\n            // let month=date.getUTCMonth()+1;\n            // if(month<10){\n            //     month='0'+month\n            // }\n            // else{\n            //     month=month.toString()\n            // }\n            // let tmpstr=date.getFullYear()+'-'+date.getUTCMonth()+1+'-'+date.getDate();\n            let tmpstr=`${date.getFullYear()}-${(date.getMonth()+1)<10?'0'+(date.getMonth()+1):date.getMonth()+1}-${date.getDate()<10?'0'+date.getDate():date.getDate()}`;\n            console.log('tmpstr:',tmpstr);\n            this.props.onChange({\n                date:tmpstr,\n                value:[0,newCount]\n            });\n            count=0\n        }\n        this._animationFrame = requestAnimationFrame(this._animate);\n    }\n\n    _renderThumbValue({$thumbIndex, $value}) {\n        //console.log('$thumbIndex:',$thumbIndex);\n        if($thumbIndex==1){\n            const value = $value[$thumbIndex];\n            // console.log('thumb:',value)\n            return <ThumbValue Color={[0,0,0,255]}>{this.props.formatLabel(value)}</ThumbValue>;\n        }\n        else{\n            return <ThumbValue></ThumbValue>\n        }\n\n        // return <ThumbValue>{0}</ThumbValue>;\n    }\n\n\n\n\n    render() {\n        const {value, min, max} = this.props;\n        const isButtonEnabled = value[0] > min || value[1] < max;\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return (\n            <StyletronProvider value={engine}>\n                <BaseProvider theme={LightTheme}>\n                    <Container>\n                        <Button\n                            shape={SHAPE.round}\n                            size={SIZE.compact}\n                            disabled={!isButtonEnabled}\n                            onClick={this._toggle}\n                        >\n                            {this.state.isPlaying ? <Stop title=\"Stop\" /> : <Start title=\"Animate\" />}\n                        </Button>\n                        <Slider\n                            {...this.props}\n                            overrides={{\n                                ThumbValue: this._renderThumbValue,\n                                TickBar: () => <TickBar />\n                            }}\n                        />\n                    </Container>\n                    {/*<ButtonContainer>*/}\n                    {/*    <Button*/}\n                    {/*        shape={SHAPE.round}*/}\n                    {/*        size={SIZE.compact}*/}\n                    {/*        disabled={!isButtonEnabled}*/}\n                    {/*    >*/}\n                    {/*    </Button>*/}\n                    {/*</ButtonContainer>*/}\n                </BaseProvider>\n            </StyletronProvider>\n        );\n    }\n}\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Appo.js",["410","411"],"import React from 'react';\r\nimport { Calendar , Badge, DatePicker , TimePicker , Select ,Button} from 'antd';\r\nconst { Option } = Select;\r\nlet tem_mon, tem_dat, tem_con;\r\nlet tem_tim, tem_rea;\r\nlet listData = [];\r\n\r\n\r\nfunction getMonthData(value) {\r\n    \r\n}\r\nfunction dateCellRender(value) {\r\n    // console.log('日期',value.month())\r\n    return (\r\n      <ul className=\"events\">\r\n        {listData.map(item => (\r\n            item.date == value.date() ?\r\n          <li key={item.content}>\r\n            <Badge status={item.type} text={item.content} />\r\n          </li> : null \r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\nfunction monthCellRender(value) {\r\n    const num = getMonthData(value);\r\n    return num ? (\r\n      <div className=\"notes-month\">\r\n        <section>{num}</section>\r\n        <span>Backlog number</span>\r\n      </div>\r\n    ) : null;\r\n}\r\n\r\nfunction onChange_date(date, dateString) {\r\n    console.log(date, dateString);\r\n    tem_mon = date.month() + 1;\r\n    tem_dat = date.date();\r\n    console.log('月份',tem_mon)\r\n    console.log('日期',tem_dat)\r\n}\r\n\r\nfunction onChange_time(time, timeString) {\r\n    console.log(time, timeString);\r\n    tem_tim = timeString[0] + \"至\" + timeString[1];\r\n    console.log('内容',tem_tim)\r\n}\r\n\r\nfunction handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n    tem_rea = value;\r\n    tem_con = tem_tim + \" \"+ tem_rea;\r\n    console.log('最终内容',tem_con);\r\n}\r\n\r\n\r\n\r\nexport default class Appo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            flag: false,\r\n            \r\n        }\r\n        if(localStorage.getItem(\"list\")!=null){\r\n            listData = JSON.parse(localStorage.getItem(\"list\"))\r\n        }else{\r\n            localStorage.setItem(\"list\",JSON.stringify(listData))\r\n        }\r\n    }\r\n      \r\n\r\n    onBtClick = e => {\r\n        listData = [...listData, {month: tem_mon, date:tem_dat,type: 'success',content: tem_con }]\r\n        this.setState({\r\n            flag: true,\r\n        })\r\n        localStorage.setItem(\"list\",JSON.stringify(listData))\r\n    }\r\n    \r\n    dateCellRender(value) {\r\n        // console.log('日期',value.month())\r\n        return (\r\n          <ul className=\"events\">\r\n            {listData.map(item => (\r\n                item.date == value.date() ?\r\n              <li key={item.content}>\r\n                <Badge status={item.type} text={item.content} />\r\n              </li> : null \r\n            ))}\r\n          </ul>\r\n        );\r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '400px',\r\n                    left: '370px',\r\n                    width: '1500px',\r\n                    'line-height': '2em',\r\n                    'font-size': '7em',\r\n                }}>实验室预约日历</div>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '800px',\r\n                    left: '-50px',\r\n                    width: '1600px',\r\n                    height: '1000px',\r\n                }}>\r\n                    <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\r\n                </div>\r\n                <div style={{\r\n                    position: 'absolute',\r\n                    top: '1800px',\r\n                    left: '360px',\r\n                    width: '1500px',\r\n                    'line-height': '2em',\r\n                    'font-size': '5em',\r\n                    'font-weight': 400,\r\n                }}>请选择预约时间及事项</div>\r\n                <div style = {{\r\n                    position: 'absolute',\r\n                    top: '2000px',\r\n                    left: '150px',\r\n                }}>\r\n                    <DatePicker \r\n                        onChange={onChange_date}\r\n                        style={{\r\n                            height:'40px',\r\n                            width:'200px'\r\n                        }} \r\n                    />\r\n                </div>\r\n                <div style = {{\r\n                    position: 'absolute',\r\n                    top: '2000px',\r\n                    left: '450px',\r\n                    }}>\r\n                    <TimePicker.RangePicker onChange={onChange_time} style={{\r\n                            height:'40px',\r\n                            width:'400px'\r\n                        }} />\r\n                </div>\r\n                <div style = {{\r\n                    position: 'absolute',\r\n                    top: '2000px',\r\n                    left: '950px',\r\n                    }}>\r\n                    <Select  placeholder=\"请选择预约事项\"  style={{ width: '200px'}}  size='large'  onChange={handleChange}>\r\n                        <Option value=\"自行参观\">自行参观</Option>\r\n                        <Option value=\"交流学习\">交流学习</Option>\r\n                        <Option value=\"举办活动\">举办活动</Option>\r\n                        <Option value=\"其他\">其他</Option>\r\n                    </Select>\r\n                </div>\r\n                <div style = {{\r\n                    position: 'absolute',\r\n                    top: '2000px',\r\n                    left: '1250px',\r\n                    'font-weight': 350,\r\n                    }}>\r\n                    <Button type=\"primary\" size='large' onClick={this.onBtClick}> 提交预约</Button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","/home/zhiguangda/ITS/deckgl/src/components/front_glass/meetingwel.js",["412","413"],"import React, {Component} from \"react\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\n\n\nexport default class App extends Component{\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        // 动态加载 css\n        debugger\n        var code='  html,body{margin:0;padding:0;overflow-y:hidden;}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;/*三列图片排列*/\\n' +\n            '        height: 100%;\\n' +\n            '        margin: 0;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '\\t\\tfont-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%\\n' +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0\\n' +\n            '    } '\n        loadStyle(code);\n\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both;\"}}>\n            <li><img src=\"/content/welcome/welcome.JPG\"/></li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/Control.js",["414","415","416","417","418","419","420","421","422","423"],"import React ,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Space, Radio, Input} from 'antd';\nimport * as d3 from 'd3'\nimport $ from \"jquery\"\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nlet ip={}\nlet content={}\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nfunction readipData(){\n    return new Promise(resolve => {\n        d3.csv('panel.csv').then(d=>{\n                d.map(x=>{\n                ip[x['no']]=x['ip']\n            })\n            let name=Object.keys(ip);\n            // console.log(name)\n            resolve(name)\n            // console.log(ip)\n        })\n    })\n}\n\nfunction setK() {\n    return new Promise(resolve => {\n        d3.csv('content.csv').then(d=>{\n            d.map(x=>{\n                content[x['name']]=x['path']\n            })\n            // console.log(content)\n            let k=Object.keys(content);\n            // console.log('k',k)\n            resolve(k)\n        })\n    })\n}\n\nlet p=setK();\nlet p2=readipData()\n\nexport function Control() {\n    const [value, setValue] = React.useState('MIC');\n    const [ipValue,setIP]=React.useState('1号机(MIC)');\n\n    const[keys,setKeys]=React.useState(['wait']);\n    const[ipName,setName]=React.useState(['wait']);\n    const classes = useStyles();\n    p.then((result)=>{\n        setKeys(result)\n        // console.log(\"keys:\",keys)\n    });\n\n    p2.then((result)=>{\n        setName(result)\n    })\n\n    function handleChange(event) {\n        setValue(event.target.value);\n        console.log(event.target.value)\n    }\n\n    function handleIPChoese(event) {\n        setIP(event.target.value);\n    }\n\n    function sendA(event) {\n\n        // console.log(event.currentTarget.value)\n        const http=new XMLHttpRequest();\n        const url=ip[event.currentTarget.value]+'/url/'+value;\n        console.log(url)\n        http.open('GET',url)\n        http.send()\n    }\n\n    function sendVolume(event){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/volume/'+event.currentTarget.value;\n        http.open('GET',url)\n        http.send()\n    }\n\n    function sendScroll(event) {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/scroll/'+event.currentTarget.value;\n        http.open('GET',url)\n        http.send()\n\n    }\n    function sendOpenChrome(event) {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/openChrome';\n        console.log(url)\n        http.open('GET',url);\n        http.send()\n    }\n\n    function shutdown() {\n        let message=window.confirm('确定关闭'+ipValue+'吗？')\n        if (message===true){\n            const http=new XMLHttpRequest();\n            const url=ip[ipValue]+'/shutdown';\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function openAllChrome(){\n        for(let prop in ip){\n            if(ip[prop]){\n                // console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/openChrome';\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n\n    function updateService() {\n        let message=window.confirm('确定更新'+ipValue+'服务吗？')\n        if(message===true){\n            const http=new XMLHttpRequest();\n            const url=ip[ipValue]+'/update';\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function updateMain(){\n        let message=window.confirm('确定更新'+ipValue+'服务吗？')\n        if(message===true){\n            const http=new XMLHttpRequest();\n            const url='http://192.168.0.161:5556'+'/updateMain';\n            // $.post(url,\"copy file////Mypassport/Storage/content.csv . /Y\",text)\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    function openPotPlayer(){\n        for(let prop in ip){\n            if(ip[prop]){\n                // console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/openPotPlayer/'+document.getElementById('videoname').value;\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n    function closePotPlayer() {\n        for(let prop in ip){\n            if(ip[prop]){\n                // console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/closePotPlayer';\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n    //全景视频使用\n    function dragLeft(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/dragLeft/'+document.getElementById('leftPix').value;\n        http.open('GET',url);\n        http.send()\n    }\n\n    function dragRight() {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/dragLeft/'+document.getElementById('rightPix').value;\n        http.open('GET',url);\n        http.send();\n    }\n    function sendCommand(){\n            const url=ip[ipValue]+'/cmd';\n            $.post(url,{cmd:document.getElementById('command').value})\n\n    }\n\n    function flip(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/flip';\n        http.open('GET',url);\n        http.send()\n    }\n\n    function sendDownload(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/download/'+document.getElementById('downloadfile').value;\n        console.log(url)\n        http.open('GET',url);\n        http.send()\n    }\n\n    function closePreview() {\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/closepreview';\n        http.open('GET',url);\n        http.send()\n    }\n\n    function openEdge(){\n        const http=new XMLHttpRequest();\n        const url=ip[ipValue]+'/openEdge';\n        http.open('GET',url);\n        http.send()\n    }\n    return (\n            <div >\n                <Button type=\"primary\" size=\"large\" onClick={openAllChrome} style={{\n                    position: 'absolute',\n                    top: '-5%',\n                    left: '50%',\n                    'transform': 'translate(-50%,-50%)',\n                    }}>\n                打开所有浏览器\n                </Button>\n                <div style={{\n                    position: 'absolute',\n                    top: '0',\n                    left: '20%',\n                    width: \"50%\",\n                    height: \"30%\",\n                }}>\n                    <Space direction=\"vertical\">\n                        <Button type=\"primary\" shape=\"round\" disabled style={{color: \"white\", backgroundColor: \"#303f9f\", borderColor: \"#303f9f\"}}>拼接屏内容</Button>\n                        <Radio.Group name=\"abc\" onChange={handleChange} value={value}>\n                            <Space direction=\"vertical\">\n                                {\n                                    keys.map((value,index)=>{\n                                        // console.log('d',value);\n                                        if(index>=0 && index <10){\n                                            return(\n                                                <Radio value={value} style={{color: \"white\", fontSize: \"20px\"}}>{value}</Radio>   \n                                            )\n                                        }\n                                        \n                                    })\n                                }\n                            </Space>\n                        </Radio.Group>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '0',\n                    left: '70%',\n                    width: \"50%\",\n                    height: \"30%\",\n                }}>\n                    <Space direction=\"vertical\">\n                        <Button type=\"primary\" shape=\"round\" disabled style={{color: \"white\", backgroundColor: \"#303f9f\", borderColor: \"#303f9f\"}}>拼接屏内容</Button>\n                        <Radio.Group name=\"abc\" onChange={handleChange} value={value}>\n                            <Space direction=\"vertical\">\n                                {\n                                    keys.map((value,index)=>{\n                                        // console.log('d',value);\n                                        if(index>=10 && index <19){\n                                            return(\n                                                <Radio value={value} style={{color: \"white\", fontSize: \"20px\"}}>{value}</Radio>   \n                                            )\n                                        }\n                                        \n                                    })\n                                }\n                            </Space>\n                        </Radio.Group>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '32%',\n                    left: '20%',\n                    width: \"50%\",\n                    height: \"30%\",\n                }}>\n                    <Space direction=\"vertical\">\n                        <Button type=\"primary\" shape=\"round\" disabled style={{color: \"white\", backgroundColor: \"#303f9f\", borderColor: \"#303f9f\"}}>拼接屏内容</Button>\n                        <Radio.Group name=\"abc\" onChange={handleChange} value={value}>\n                            <Space direction=\"vertical\">\n                                {\n                                    keys.map((value,index)=>{\n                                        // console.log('d',value);\n                                        if(index>=19 && index <24){\n                                            return(\n                                                <Radio value={value} style={{color: \"white\", fontSize: \"20px\"}}>{value}</Radio>   \n                                            )\n                                        }\n                                        \n                                    })\n                                }\n                            </Space>\n                        </Radio.Group>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '32%',\n                    left: '70%',\n                    width: \"50%\",\n                    height: \"30%\",\n                }}>\n                    <Space direction=\"vertical\">\n                        <Button type=\"primary\" shape=\"round\" disabled style={{color: \"white\", backgroundColor: \"#303f9f\", borderColor: \"#303f9f\"}}>拼接屏内容</Button>\n                        <Radio.Group name=\"abc\" onChange={handleChange} value={value}>\n                            <Space direction=\"vertical\">\n                                {\n                                    keys.map((value,index)=>{\n                                        // console.log('d',value);\n                                        if(index>=24){\n                                            return(\n                                                <Radio value={value} style={{color: \"white\",fontSize: \"20px\"}}>{value}</Radio>   \n                                            )\n                                        }\n                                    })\n                                }\n                            </Space>\n                        </Radio.Group>\n                    </Space>\n                </div>\n                <Space style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '3%',\n                    width: \"100%\", \n                }}\n                size=\"large\"\n                >\n                    {\n                        ipName.map(((value, index) => {\n                            return(\n                                <Button type=\"primary\" value={value} onClick={sendA} >\n                                    {value}\n                                </Button>\n                            )\n                        }))\n                    }\n                </Space>\n                <Radio.Group  value={ipValue} onChange={handleIPChoese} style={{\n                    position: 'absolute',\n                    top: '60%',\n                    left: '3%',\n                    width: \"100%\", \n                }}>\n                    <Space direction=\"vertical\">\n                        {\n                        ipName.map((value,index)=>{\n                            // console.log('d',value);\n                            return(\n                                    <Radio value={value} style={{color: \"white\", fontSize: \"20px\"}}>{value}</Radio>\n                            )\n                        })\n                        }\n                    </Space>\n                </Radio.Group>\n                <div style={{\n                    position: 'absolute',\n                    top: '60%',\n                    left: '32%',\n                    width: \"72%\", \n                    height: \"16%\",\n                    backgroundColor: \"white\"\n                }}>\n                    <Space size=\"large\">\n                        <Button type=\"primary\" danger value={'up'} onClick={sendVolume}> 增大音量</Button>\n                        <Button type=\"primary\" danger value={'down'} onClick={sendVolume} > 减小音量</Button>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '63%',\n                    left: '32%',\n                    width: \"100%\", \n                }}>\n                    <Space size=\"large\">\n                        <Button type=\"primary\" danger  value={'front'} onClick={sendScroll}> 向前滑动</Button>\n                        <Button type=\"primary\" danger  value={'back'} onClick={sendScroll} > 向后滑动</Button>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '66%',\n                    left: '32%',\n                    width: \"100%\", \n                }}>\n                    <Space size=\"large\">\n                        <Button type=\"primary\" danger onClick={sendOpenChrome}> 打开浏览器</Button>\n                        <Button type=\"primary\" danger  onClick={shutdown}> 关机</Button>\n                        <Button type=\"primary\" danger onClick={openEdge}>打开Edge浏览器</Button>\n                    </Space>\n                </div>\n                <div style={{\n                    position: 'absolute',\n                    top: '69%',\n                    left: '32%',\n                    width: \"100%\", \n                }}>\n                    <Space size=\"large\">\n                        <Button type=\"primary\" danger onClick={updateService}> 更新服务</Button>\n                        <Button type=\"primary\" danger onClick={updateMain}> 从git上更新主服务</Button>\n                    </Space>\n                </div>\n                <div className={classes.root} style={{\n                    position: 'absolute',\n                    top: '75%',\n                    left: '32%',\n                    width: \"72%\", \n                    height: \"20%\",\n                    backgroundColor: \"white\"\n                }}>\n                    <TextField id=\"videoname\" label=\"输入视频名称\" variant=\"outlined\" defaultValue=\"vr.webm\"/>\n                    <Button type=\"primary\" danger onClick={openPotPlayer}> 打开全景视频</Button>\n                    <Button type=\"primary\" danger onClick={closePotPlayer}> 关闭全景视频</Button>\n                    <Button type=\"primary\" danger onClick={closePreview}> 关闭预览</Button>\n                </div>\n                <div className={classes.root} style={{\n                    position: 'absolute',\n                    top: '82%',\n                    left: '32%',\n                    width: \"72%\", \n                    backgroundColor: \"white\"\n                }}>\n                    <TextField id=\"leftPix\" label=\"输入距离\" variant=\"outlined\" defaultValue={'50'}/>\n                    <Button type=\"primary\" danger onClick={dragLeft}> 向左调整</Button>\n                    <TextField id=\"rightPix\" label=\"输入距离\" variant=\"outlined\" defaultValue={'50'}/>\n                    <Button type=\"primary\" danger onClick={dragRight}> 向右调整</Button>\n                    <Button type=\"primary\" danger onClick={flip}> 视频左右翻转</Button>\n                </div>\n                <div className={classes.root} style={{\n                    position: 'absolute',\n                    top: '88%',\n                    left: '32%',\n                    width: \"72%\", \n                    backgroundColor: \"white\"\n                }}>\n                    <TextField id=\"command\" label=\"输入指令\" variant=\"outlined\" defaultValue={\"copy file////Mypassport/Storage/360video . /Y\"}/>\n                    <Button type=\"primary\" danger onClick={sendCommand}> 发送指令</Button>\n                </div>\n                <div className={classes.root} style={{\n                    position: 'absolute',\n                    top: '94%',\n                    left: '32%',\n                    width: \"72%\", \n                    backgroundColor: \"white\"\n                }}>\n                    <TextField id=\"downloadfile\" label=\"文件名\" variant=\"outlined\" defaultValue={\"vr.webm\"}/>\n                    <Button type=\"primary\" danger onClick={sendDownload}> 下载文件</Button>\n                </div>\n            </div>\n        );\n}","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/octrl.js",["424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React ,{Component} from 'react';\nimport ReactDOM from 'react-dom'\nimport * as d3 from 'd3'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport BorderAllIcon from '@material-ui/icons/BorderAll';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown'\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\nimport SettingsIcon from '@material-ui/icons/Settings';\nlet con = \"\"\nlet ip = {\n    '拼接屏1号机': 'http://192.168.0.161:7777',\n    '拼接屏2号机': 'http://192.168.0.143:7777',\n    '拼接屏3号机': 'http://192.168.0.165:7777',\n    '拼接屏4号机': 'http://192.168.0.173:7777',\n    '拼接屏5号机': 'http://192.168.0.197:7777',\n    '弧形墙投影': 'http://192.168.0.147:7777',\n    '外玻璃投影': 'http://192.168.0.118:7777',\n    '窗户投影': 'http://192.168.0.148:7777'\n}\nlet sendlist1 = ['http://192.168.0.161:7777/url/交通1号','http://192.168.0.143:7777/url/交通2号','http://192.168.0.165:7777/url/交通3号','http://192.168.0.173:7777/url/交通4号','http://192.168.0.197:7777/url/交通5号']\nlet sendlist2 = ['http://192.168.0.161:7777/url/conclustion','http://192.168.0.143:7777/url/MIC','http://192.168.0.165:7777/url/ML','http://192.168.0.173:7777/url/DTW','http://192.168.0.197:7777/url/news']\nlet sendlist3 = ['http://192.168.0.161:7777/url/P1','http://192.168.0.143:7777/url/P2','http://192.168.0.165:7777/url/P3','http://192.168.0.173:7777/url/P4','http://192.168.0.197:7777/url/P5']\nlet device = '拼接屏1号机';\nconst kkey ={\n    'ITS(融合2)': 'http://192.168.0.147:7777',\n    '音乐': 'http://192.168.0.147:7777',\n    '疫情静态(融合3)': 'http://192.168.0.147:7777',\n    '疫情视频(融合4)': 'http://192.168.0.147:7777',\n    'Kmeans': 'http://192.168.0.147:7777',\n    'NASA': 'http://192.168.0.147:7777',\n    'windmap': 'http://192.168.0.147:7777',\n    'welcome': 'http://192.168.0.118:7777',\n    'frontglass': 'http://192.168.0.118:7777',\n    '海报': 'http://192.168.0.118:7777',\n    '窗户内容': 'http://192.168.0.148:7777'\n}\nconst useStyles = makeStyles({\n    card1: {\n        position: 'absolute',\n        top: '5%',\n        left: '4%',\n        width: '25%',\n        height: '30%'\n    },\n    card2: {\n        position: 'absolute',\n        top: '5%',\n        left: '37.5%',\n        width: '25%',\n        height: '30%'\n    },\n    card3: {\n        position: 'absolute',\n        top: '5%',\n        left: '71%',\n        width: '25%',\n        height: '30%'\n    },\n    card4: {\n        position: 'absolute',\n        top: '48%',\n        left: '4%',\n        width: '25%',\n        height: '30%'\n    },\n    card5: {\n        position: 'absolute',\n        top: '48%',\n        left: '37.5%',\n        width: '25%',\n        height: '30%'\n    },\n    card6: {\n        position: 'absolute',\n        top: '48%',\n        left: '71%',\n        width: '25%',\n        height: '30%'\n    },\n  });\n\nfunction send(value) {\n    const http = new XMLHttpRequest();\n    const url = kkey[value] + '/url/' + value;\n    console.log('测试：', url);\n    http.open('GET',url)\n    http.send()\n}\n\nexport function Octrl() {\n\n    const classes = useStyles();\n    const [deviceID,setID] = React.useState('拼接屏1号机');\n    const [page,setpage] = React.useState(1);\n    const [con, setcon] = React.useState(\"默认\")\n    const [dis, setDis] = React.useState('none')\n    function f1(){\n        for(let prop in sendlist1){\n            const http=new XMLHttpRequest();\n            console.log('测试3',sendlist1[prop])\n            http.open('GET',sendlist1[prop]);\n            http.send()\n        }\n        setDis('block')\n        setTimeout(()=>{setDis('none')},1500)\n    }\n    \n    function f2(){\n        for(let prop in sendlist2){\n            const http=new XMLHttpRequest();\n            console.log('测试3',sendlist2[prop])\n            http.open('GET',sendlist2[prop]);\n            http.send()\n        }\n        setDis('block')\n        setTimeout(()=>{setDis('none')},1500)\n    }\n\n    \n    function f3(){\n        for(let prop in sendlist3){\n            const http=new XMLHttpRequest();\n            console.log('测试3',sendlist3[prop])\n            http.open('GET',sendlist3[prop]);\n            http.send()\n        }\n        setDis('block')\n        setTimeout(()=>{setDis('none')},1500)\n    }\n    \n    \n    \n    return (\n        <div style={{\n            position: 'absolute',\n            left: '3%',\n            top: '0',\n            height: '100%',\n            width: '94%',\n            backgroundColor: 'black'\n            }}>\n            <div style={{\n                position: 'absolute',\n                left: '10%',\n                top: '-5%',\n                width: '27%',\n                height: '15%',\n                backgroundColor: 'black',\n                margin: '10% 0',\n                color: 'white',\n                whiteSpace: 'normal',\n                wordWrap: 'break-word',\n                wordBreak: 'break-all',\n                lineHeight: '200%',\n                fontSize: '1.8em',\n                textAlign: 'center'\n            }}>\n                拼接屏展示内容切换<br></br>\n                <div style={{position: 'absolute', top: '18%', left: '0', width: '100%', height: '100%', backgroundColor: 'black', lineHeight: '2.5em'}}>\n                    <Button color=\"primary\" onClick={f1} startIcon={<BorderAllIcon />} variant=\"contained\" size=\"large\">交通可视化项目</Button><br />\n                    <Button color=\"primary\" onClick={f2} startIcon={<BorderAllIcon />} variant=\"contained\" size=\"large\">城市幸福感项目</Button><br />\n                    <Button color=\"primary\" onClick={f3} startIcon={<BorderAllIcon />} variant=\"contained\" size=\"large\">项目ppt介绍</Button>\n                </div>\n            </div>\n            <div style={{position: 'absolute', top: '9%', left: '36%', color:'white'}}>\n                <CheckBoxTwoToneIcon style={{color: 'green',width: '50px',height:'50px',display: dis}}/>\n            </div>\n            <div style={{\n            position: 'absolute',\n            right: '8%',\n            top: '-2%',\n            height: '25%',\n            width: '34%',\n            }}>\n                <div style={{textAlign: 'center',fontSize: '2em'}}>魔镜风格迁移</div>\n            </div>\n            {\n                page === 1?<Panel4 />:<Panel6 />\n            }\n            \n            <div style={{position: 'absolute', top: '54%', left: '36%', color:'white'}}>\n               \n                <Typography variant=\"body\" gutterBottom color=\"textSecondary\" style={{color:'white'}}>\n                轻点卡片即可切换展示内容\n                        </Typography>\n            </div>\n            \n            {\n                (page === 1)? \n                <Button variant=\"contained\"\n                    endIcon={<KeyboardArrowRightIcon />}\n                    color=\"primary\"\n                    style={{position: 'absolute', top: '54%', right: '0'}}\n                    onClick={()=>{setpage(2)}}>\n                        下一页\n                    </Button>:(page === 2)?\n                    <Button variant=\"contained\"\n                    endIcon={<KeyboardArrowLeftIcon />}\n                    color=\"primary\"\n                    style={{position: 'absolute', top: '54%', left: '0'}}\n                    onClick={()=>{setpage(1)}}>\n                        上一页\n            </Button>:<div />\n            }\n            \n        </div>\n    )\n}\n\n\n\n\n\n\n\nfunction Panel4() {\n    const classes = useStyles();\n    return (\n        <div style={{\n            position: 'absolute',\n            left: '0',\n            top: '24%',\n            width: '100%',\n            height: '74%',\n            backgroundColor: 'black',\n        }}>\n            <Card className={classes.card1} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./i2.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            ITS(融合2)\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            城市网约车可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('ITS(融合2)')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('ITS(融合2)')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card2} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./music.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            音乐\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            音乐可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('音乐')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('音乐')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card3} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./i3.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%', height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            疫情静态(融合3)\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            疫情数据可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('疫情静态(融合3)')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('疫情静态(融合3)')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card4} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./covid.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%', height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            疫情视频(融合4)\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            疫情数据可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('疫情视频(融合4)')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('疫情视频(融合4)')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card5} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./Kmeans.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%', height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            Kmeans\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            Kmeans可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('Kmeans')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('Kmeans')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card6} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./NASA.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%', height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            NASA\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            NASA发布的宇宙可视化视频\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('NASA')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('NASA')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\n\n\nfunction Panel6() {\n    const classes = useStyles();\n    return (\n        <div style={{\n            position: 'absolute',\n            left: '0',\n            top: '24%',\n            width: '100%',\n            height: '74%',\n            backgroundColor: 'black',\n        }}>\n            <Card className={classes.card1} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./windMap.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            风向图\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            风向可视化\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('windmap')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('windmap')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card2} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./i1.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            welcome\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            外玻璃欢迎界面\n                        </Typography>\n                    </div>\n                    <button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('welcome')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('welcome')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card3} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./frontglass.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '30%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            外墙展示轮播\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            外墙轮播内容\n                        </Typography>\n                    </div>\n<button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('frontglass')}}>\n</button>              \n  </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('frontglass')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card4} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./wallpaper.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '30%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            内墙展示\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            内墙投影\n                        </Typography>\n                    </div>\n<button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('海报')}}>\n</button>              \n  </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('海报')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n            <Card className={classes.card5} variant=\"outlined\">\n                <CardContent>\n                    <img src=\"./cmusic.png\" style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n                    <div style={{position: 'absolute', top: '75%', left: '10%', width: '60%',height: '20%', color: 'black'}}>\n                        <Typography gutterBottom>\n                            窗户内容\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom color=\"textSecondary\">\n                            可视化与视频\n                        </Typography>\n                    </div>\n<button style={{position: 'absolute', top: '0%', left: '0%', width: '100%',height: '100%', backgroundColor: 'rgba(0,0,0,0.0001)'}}  onClick={()=>{send('窗户内容')}}>\n\n                    </button>\n                </CardContent>\n                <CardActions>\n                    <IconButton size=\"large\" onClick={()=>{send('窗户内容')}} style={{position: 'absolute', top: '80%', right: '10%'}}>\n                        <PlayCircleFilledIcon />\n                    </IconButton>\n                </CardActions>\n            </Card>\n        </div>\n    )\n}\n","/home/zhiguangda/ITS/deckgl/src/components/magicmirror/ictrl.js",["451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport WebIcon from '@material-ui/icons/Web';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport BorderAllIcon from '@material-ui/icons/BorderAll';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport IconButton from '@material-ui/core/IconButton';\nimport { time } from \"echarts\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport clsx from 'clsx';\nlet ip = {\n    '拼接屏1号机': 'http://192.168.0.161:7777',\n    '拼接屏2号机': 'http://192.168.0.143:7777',\n    '拼接屏3号机': 'http://192.168.0.165:7777',\n    '拼接屏4号机': 'http://192.168.0.173:7777',\n    '拼接屏5号机': 'http://192.168.0.197:7777',\n    '弧形墙投影': 'http://192.168.0.147:7777',\n    '外玻璃投影': 'http://192.168.0.118:7777',\n    '窗户投影': 'http://192.168.0.148:7777',\n}\n\nlet sendlist = ['http://192.168.0.161:7777/url/交通1号','http://192.168.0.143:7777/url/交通2号','http://192.168.0.165:7777/url/交通3号','http://192.168.0.173:7777/url/交通4号','http://192.168.0.197:7777/url/交通5号']\nconst imgpath = {\n    \"交通1号\": './6.png',\n    \"交通2号\": './7.png',\n    \"交通3号\": './8.png',\n    \"交通4号\": './9.png',\n    \"交通5号\": './10.png',\n    \"MIC\": './1.png',\n    \"ML\": './2.png',\n    \"DTW\": './3.png',\n    \"news\": './4.png',\n    \"conclustion\": './5.png',\n    \"P1\": './p1.png',\n    \"P2\": './p2.png',\n    \"P3\": './p3.png',\n    \"P4\": './p4.png',\n    \"P5\": './p5.png',\n    \"welcome\": './i1.png',\n    \"frontglass\": './frontglass.png',\n    \"海报\": './wallpaper.png',\n    \"ITS(融合2)\": './i2.png',\n    \"音乐\": './music.png',\n    \"疫情静态(融合3)\": './i3.png',\n    \"疫情视频(融合4)\": './covid.png',\n    \"Kmeans\": './Kmeans.png',\n    \"NASA\": './NASA.png',\n    \"窗户内容\": './cmusic.png',\n    \"windmap\": './windMap.png'\n}\nconst useStyles = makeStyles((theme) => ({\n    bt11: {\n        background: '#1de9b6',\n        borderRadius: '0 35px 0 35px',\n        position: 'absolute',\n        top: '0',\n        left: '15%',\n        width: '18%',\n        height: '55%',\n        letterSpacing: '12px'\n    },\n    bt12: {\n        background: '#1de9b6',\n        borderRadius: '0 35px 0 35px',\n        position: 'absolute',\n        top: '0',\n        left: '41%',\n        width: '18%',\n        height: '55%',\n        letterSpacing: '3px',\n        fontSize: '0.9em'\n    },\n    bt13: {\n        background: '#1de9b6',\n        borderRadius: '0 35px 0 35px',\n        position: 'absolute',\n        top: '0',\n        right: '15%',\n        width: '18%',\n        height: '55%',\n        letterSpacing: '12px'\n    },\n    root: {\n        '&:hover': {\n          backgroundColor: 'transparent',\n        },\n        '& > *': {\n            margin: theme.spacing(1),\n          },\n      },\n      icon: {\n        borderRadius: '50%',\n        width: 16,\n        height: 16,\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n        backgroundColor: '#f5f8fa',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n        '$root.Mui-focusVisible &': {\n          outline: '2px auto rgba(19,124,189,.6)',\n          outlineOffset: 2,\n        },\n        'input:hover ~ &': {\n          backgroundColor: '#ebf1f5',\n        },\n        'input:disabled ~ &': {\n          boxShadow: 'none',\n          background: 'rgba(206,217,224,.5)',\n        },\n      },\n      checkedIcon: {\n        backgroundColor: '#137cbd',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n        '&:before': {\n          display: 'block',\n          width: 16,\n          height: 16,\n          backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n          content: '\"\"',\n        },\n        'input:hover ~ &': {\n          backgroundColor: '#106ba3',\n        },\n      },\n    \n  }));\n\n  function StyledRadio(props) {\n    const classes = useStyles();\n  \n    return (\n      <Radio\n        className={classes.root}\n        disableRipple\n        color=\"default\"\n        checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n        icon={<span className={classes.icon} />}\n        {...props}\n      />\n    );\n  }\n\n \nexport function Ictrl(){\n    const classes = useStyles();\n    const [deviceID,setID] = React.useState('拼接屏1号机')\n    const [page,setpage] = React.useState(1);\n    const [dis, setDis] = React.useState('none')\n    const [imgsrc, setsrc] = React.useState(\"./6.png\")\n\n    const handleChange1 = (event) => {\n        setID(event.target.value)\n    }\n\n    const handleChange2 = (event) => {\n        setpage(event.target.value)\n        setsrc(imgpath[event.target.value])\n    }\n    \n\n    function sendOpenChrome(event) {\n        const http=new XMLHttpRequest();\n        const url=ip[deviceID]+'/openChrome';\n        console.log(url)\n        http.open('GET',url);\n        http.send()\n    }\n\n    function sendVolumeup(){\n        const http=new XMLHttpRequest();\n        const url=ip[deviceID]+'/volume/up';\n        console.log('测试:',url)\n        http.open('GET',url)\n        http.send()\n    }\n\n    function sendVolumedown(){\n        const http=new XMLHttpRequest();\n        const url=ip[deviceID]+'/volume/down';\n        console.log('测试:',url)\n        http.open('GET',url)\n        http.send()\n    }\n\n    function sendVolumemute(){\n        const http=new XMLHttpRequest();\n        const url=ip[deviceID]+'/volume/mute';\n        console.log('测试:',url)\n        http.open('GET',url)\n        http.send()\n    }\n    function sendSpace(){\n        const http=new XMLHttpRequest();\n        const url='http://192.168.0.118:7777/music';\n        console.log('测试:',url)\n        http.open('GET',url)\n        http.send()\n    }\n    function openAll(){\n        openAllChrome();\n        setTimeout(() => {\n            for(let prop in sendlist){\n                const http=new XMLHttpRequest();\n                console.log('测试3',sendlist[prop])\n                http.open('GET',sendlist[prop]);\n                http.send()\n            }\n        }, 5000);\n        \n    }\n\n    function openAllChrome(){\n        for(let prop in ip){\n            if(ip[prop]){\n                // console.log(ip[prop])\n                const http=new XMLHttpRequest();\n                const url=ip[prop]+'/openChrome';\n                console.log('测试2',url)\n                http.open('GET',url);\n                http.send()\n            }\n        }\n    }\n\n    function send() {\n        const http = new XMLHttpRequest();\n        const url = ip[deviceID] + '/url/' + page;\n        console.log('测试：', url);\n        http.open('GET',url)\n        http.send()\n        setDis('block')\n        setTimeout(()=>{setDis('none')},1500)\n    }\n    function test() {\n        const http = new XMLHttpRequest();\n        const url = 'http://192.168.0.147:7777/url/ccc';\n        console.log('测试：', url);\n        http.open('GET',url)\n        http.send()\n        setDis('block')\n        setTimeout(()=>{setDis('none')},1500)\n    }\n    function updateService() {\n        let message=window.confirm('确定更新'+deviceID+'服务吗？')\n        if(message===true){\n            const http=new XMLHttpRequest();\n            const url=ip[deviceID]+'/update';\n            http.open('GET',url);\n            http.send()\n        }\n        else return\n    }\n\n    return (\n        <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '3%',\n            width: '94%',\n            height: '100%',\n            backgroundColor: 'black'\n        }}> \n            <div style={{\n            position: 'absolute',\n            left: '3%',\n            top: '3%',\n            width: '94%',\n            height: '8%',\n            backgroundColor: 'black',\n        }}>\n                <Button onClick={openAll} startIcon={<SettingsIcon />} className={classes.bt11} variant=\"contained\" >\n                    一键部署\n                </Button>\n                <Button onClick={openAllChrome} startIcon={<WebIcon />} className={classes.bt12} variant=\"contained\">\n                    打开所有浏览器\n                </Button>\n                <Button  startIcon={<PowerSettingsNewIcon />} className={classes.bt13} variant=\"contained\">\n                    一键重启\n                </Button>\n            </div>\n            <FormControl component=\"fieldset\" style={{\n                color: 'white',\n                position: 'absolute',\n                left: '33%',\n                top: '13%',\n                width: '15%',\n                height: '10%',\n                background: 'black',\n            }} >\n                <FormLabel component=\"legend\" style={{color: 'white',fontSize: '1.5em'}}>设备选择</FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={deviceID} onChange={handleChange1} style={{color: 'white'}}>\n                    <FormControlLabel value=\"拼接屏1号机\" control={<StyledRadio />} label=\"拼接屏1号机\"/>\n                    <FormControlLabel value=\"拼接屏2号机\" control={<StyledRadio />} label=\"拼接屏2号机\"/>\n                    <FormControlLabel value=\"拼接屏3号机\" control={<StyledRadio />} label=\"拼接屏3号机\"/>\n                    <FormControlLabel value=\"拼接屏4号机\" control={<StyledRadio />} label=\"拼接屏4号机\"/>\n                    <FormControlLabel value=\"拼接屏5号机\" control={<StyledRadio />} label=\"拼接屏5号机\"/>\n                    <FormControlLabel value=\"弧形墙投影\" control={<StyledRadio />} label=\"弧形墙投影\" />\n                    <FormControlLabel value=\"外玻璃投影\" control={<StyledRadio />} label=\"外玻璃投影\" />\n                    <FormControlLabel value=\"窗户投影\" control={<StyledRadio />} label=\"窗户投影\" />\n                </RadioGroup>\n            </FormControl>\n            <FormControl component=\"fieldset\" style={{\n                color: 'white',\n                position: 'absolute',\n                left: '3%',\n                top: '13%',\n                width: '25%',\n                height: '35%',\n                background: 'black',\n            }} >\n                <FormLabel component=\"legend\" style={{color: 'white',fontSize: '1.5em'}}>页面选择</FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={page} onChange={handleChange2} style={{color: 'white'}}>\n                    <FormControlLabel value=\"交通1号\" control={<StyledRadio />} label=\"交通1号\"/>\n                    <FormControlLabel value=\"交通2号\" control={<StyledRadio />} label=\"交通2号\"/>\n                    <FormControlLabel value=\"交通3号\" control={<StyledRadio />} label=\"交通3号\"/>\n                    <FormControlLabel value=\"交通4号\" control={<StyledRadio />} label=\"交通4号\"/>\n                    <FormControlLabel value=\"交通5号\" control={<StyledRadio />} label=\"交通5号\"/>\n                    <FormControlLabel value=\"P1\" control={<StyledRadio />} label=\"成果展示1号\"/>\n                    <FormControlLabel value=\"P2\" control={<StyledRadio />} label=\"成果展示2号\"/>\n                    <FormControlLabel value=\"P3\" control={<StyledRadio />} label=\"成果展示3号\"/>\n                    <FormControlLabel value=\"P4\" control={<StyledRadio />} label=\"成果展示4号\"/>\n                    <FormControlLabel value=\"P5\" control={<StyledRadio />} label=\"成果展示5号\"/>\n                    <FormControlLabel value=\"MIC\" control={<StyledRadio />} label=\"MIC\" />\n                    <FormControlLabel value=\"ML\" control={<StyledRadio />} label=\"ML\" />\n                    <FormControlLabel value=\"DTW\" control={<StyledRadio />} label=\"DTW\" />\n                    <FormControlLabel value=\"news\" control={<StyledRadio />} label=\"news\" />\n                    <FormControlLabel value=\"conclustion\" control={<StyledRadio />} label=\"conclustion\" />\n                    <FormControlLabel value=\"ITS(融合2)\" control={<StyledRadio />} label=\"ITS(融合2)\" />\n                    <FormControlLabel value=\"疫情静态(融合3)\" control={<StyledRadio />} label=\"疫情静态(融合3)\" />\n                    <FormControlLabel value=\"疫情视频(融合4)\" control={<StyledRadio />} label=\"疫情视频(融合4)\" />\n                    <FormControlLabel value=\"Kmeans\" control={<StyledRadio />} label=\"Kmeans\" />\n                    <FormControlLabel value=\"NASA\" control={<StyledRadio />} label=\"NASA\" />\n                    <FormControlLabel value=\"windmap\" control={<StyledRadio />} label=\"风向图\" />\n                    <FormControlLabel value=\"窗户内容\" control={<StyledRadio />} label=\"窗户内容\" />\n                    <FormControlLabel value=\"海报\" control={<StyledRadio />} label=\"海报\" />\n                    <FormControlLabel value=\"welcome\" control={<StyledRadio />} label=\"welcome\" />\n                    <FormControlLabel value=\"frontglass\" control={<StyledRadio />} label=\"外墙轮播\" />\n                </RadioGroup>\n            </FormControl>\n            <div style={{position: 'absolute', top: '43%', left: '40%', color:'white'}}>\n                <CheckBoxTwoToneIcon style={{color: 'green',width: '40px',height:'40px',display: dis}}/>\n            </div>\n            <div className={classes.root} style={{\n                color: 'white',\n                position: 'absolute',\n                left: '37%',\n                top: '45%',\n                width: '65%',\n                height: '35%',\n                background: 'black',\n            }}>\n                \n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={send}>\n                    发送内容\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={sendOpenChrome}>\n                    打开浏览器\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                    重启\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={test}>\n                    更新服务\n                </Button>\n                \n            </div>\n            <div className={classes.root} style={{\n                color: 'white',\n                position: 'absolute',\n                left: '37%',\n                top: '50%',\n                width: '65%',\n                height: '10%',\n                background: 'black',\n            }}>\n                \n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={sendVolumeup}>\n                    增大音量\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={sendVolumedown}>\n                    减小音量\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={sendVolumemute}>\n                    静音\n                </Button>\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={sendSpace}>\n                    背景音乐暂停/播放\n                </Button>\n                \n            </div>\n            <div  style={{\n                color: 'white',\n                position: 'absolute',\n                left: '45%',\n                top: '68%',\n                width: '40%',\n                height: '25%',\n            }}>\n                <img src={imgsrc} style={{position: 'absolute', top: '3%', left: '5%', width: '90%',height: '70%'}}/>\n            </div>\n        </div>\n    )\n}\n\n\n","/home/zhiguangda/ITS/deckgl/src/components/Map.js",["468","469","470","471","472"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tem from './tem.js'\nexport default class Map extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      in : 1,\n      m : 7\n    }\n  }\n  componentDidMount() {\n    this.timer = setInterval(()=>{\n      if(this.state.in == 31){\n        this.setState({\n          m: this.state.m + 1,\n          in: 1\n        });\n      }else{\n        this.setState({\n          in: this.state.in + 1\n        });\n      }\n        \n        console.log(this.state.in);\n        if(this.state.in == 9 && this.state.m == 8){\n          clearInterval(this.timer)\n        }\n    },2000)\n    \n  }\n  render() {\n    return(\n      <div>\n        <ul>\n          <li>\n          <img src={'./rain/'+this.state.m+'_'+this.state.in+'.png'} style={{position: 'absolute', top: '0', left: '0', width: '1920px', height: '1080px'}}/>\n        <div style={{position: 'absolute', top: '0.5%', left: '0.5%', backgroundColor: 'white', width: '500px', height: '100px'}}></div>\n        <div style={{position: 'absolute', top: '1%', left: '700px', backgroundColor: 'white', width: '600px', height: '200px'}}>\n          <div style={{\n              position: 'absolute',\n              top: '45%',\n              left: '30%',\n              fontSize: '32px',\n              fontWeight: '800',\n              color: '#616161'\n            }}>全国日平均降雨量</div>\n          \n          <div style={{\n            position: 'absolute',\n            top: '70%',\n            left: '30%',\n            fontSize: '32px',\n            fontWeight: '800',\n            color: '#616161'\n          }}>{'2021/'+this.state.m+'/'+this.state.in}</div>\n        </div>\n          </li>\n          <li>\n            <Tem />\n          </li>\n        </ul>\n       \n      </div>\n    )\n  }\n\n}\n\n\n","/home/zhiguangda/ITS/deckgl/src/components/tem.js",["473","474","475","476"],"import React from 'react';\nfunction loadStyle(code){\n  var style = document.createElement('style');\n  style.appendChild(document.createTextNode(code));\n  var head = document.getElementsByTagName('head')[0];\n  head.appendChild(style);\n}\n\nexport default class Tem extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      in : 1,\n      m : 7\n    }\n  }\n  componentDidMount() {\n    var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        margin: 0 ;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '        font-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 1920px;\\n' +\n            '        height: 1920px;\\n' +\n            '        overflow-x:hidden\\n' +\n            '        object-fit: fill;\\n '  +\n            '    }\\n' +\n            '    li video{\\n' +\n            '        width: 1920px;\\n' +\n            '        height: 1080px;\\n' +\n            '        overflow-x:hidden;\\n' +\n            \n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '    } '\n        loadStyle(code);\n    this.timer = setInterval(()=>{\n      if(this.state.in == 31){\n        this.setState({\n          m: this.state.m + 1,\n          in: 1\n        });\n      }else{\n        this.setState({\n          in: this.state.in + 1\n        });\n      }\n        \n        console.log(this.state.in);\n        if(this.state.in == 9 && this.state.m == 8){\n          clearInterval(this.timer)\n        }\n    },2000)\n    \n  }\n  render() {\n    return(\n      <div>\n        <img src={'./tem/'+this.state.m+'_'+this.state.in+'.png'}/>\n        <div style={{position: 'absolute', top: '50.5%', left: '0.5%', backgroundColor: 'white', width: '500px', height: '100px'}}></div>\n        <div style={{position: 'absolute', top: '51%', left: '700px', backgroundColor: 'white', width: '600px', height: '200px'}}>\n          <div style={{\n              position: 'absolute',\n              top: '45%',\n              left: '30%',\n              fontSize: '32px',\n              fontWeight: '800',\n              color: '#616161'\n            }}>全国日平均温度</div>\n          \n          <div style={{\n            position: 'absolute',\n            top: '70%',\n            left: '30%',\n            fontSize: '32px',\n            fontWeight: '800',\n            color: '#616161'\n          }}>{'2021/'+this.state.m+'/'+this.state.in}</div>\n        </div>\n       \n      </div>\n    )\n  }\n\n}\n\n\n\n","/home/zhiguangda/ITS/deckgl/src/rank/A1.js",["477","478"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./1.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./2.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/rank/A5.js",["479","480"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./9.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./10.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/rank/A2.js",["481","482"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./3.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./4.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/rank/A4.js",["483","484"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./7.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./8.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/rank/A3.js",["485","486"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./5.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./6.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/components/covid_music.js",["487","488"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./video.mp4\" autoPlay  loop=\"loop\" id='video'></video>\t\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/components/gpu/g.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as echarts from 'echarts';\nimport * as d3 from 'd3'\nimport { Menu ,Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport Panelchart from './panel';\n\n\n\n\nexport default class App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state= {\n\t\t\tnum: '',\n\t\t\ttime: '',\n        \tgpumes5: {\n\t\t\t\tusage: '',\n\t\t\t\tgpuname: '',\n\t\t\t\tgputem: '',\n\t\t\t\tgpumem: '',\n\t\t\t\tgputotalmem: '',\n\t\t\t},\n\t\t\tgpumes12: {\n\t\t\t\tusage1: '',\n\t\t\t\tgpuname1: '',\n\t\t\t\tgputem1: '',\n\t\t\t\tgpumem1: '',\n\t\t\t\tgputotalmem1: '',\n\t\t\t\tusage2: '',\n\t\t\t\tgpuname2: '',\n\t\t\t\tgputem2: '',\n\t\t\t\tgpumem2: '',\n\t\t\t\tgputotalmem2: '',\n\t\t\t},\n\t\t\tgpumes13: {\n\t\t\t\tusage1: '',\n\t\t\t\tgpuname1: '',\n\t\t\t\tgputem1: '',\n\t\t\t\tgpumem1: '',\n\t\t\t\tgputotalmem1: '',\n\t\t\t\tusage2: '',\n\t\t\t\tgpuname2: '',\n\t\t\t\tgputem2: '',\n\t\t\t\tgpumem2: '',\n\t\t\t\tgputotalmem2: '',\n\t\t\t},\n\t\t\tgpumes14: {\n\t\t\t\tusage1: '',\n\t\t\t\tgpuname1: '',\n\t\t\t\tgputem1: '',\n\t\t\t\tgpumem1: '',\n\t\t\t\tgputotalmem1: '',\n\t\t\t\tusage2: '',\n\t\t\t\tgpuname2: '',\n\t\t\t\tgputem2: '',\n\t\t\t\tgpumem2: '',\n\t\t\t\tgputotalmem2: '',\n\t\t\t},\n\t\t\tgpumes15: {\n\t\t\t\tusage1: '',\n\t\t\t\tgpuname1: '',\n\t\t\t\tgputem1: '',\n\t\t\t\tgpumem1: '',\n\t\t\t\tgputotalmem1: '',\n\t\t\t\tusage2: '',\n\t\t\t\tgpuname2: '',\n\t\t\t\tgputem2: '',\n\t\t\t\tgpumem2: '',\n\t\t\t\tgputotalmem2: '',\n\t\t\t},\n\t\t\tgpumes16: {\n\t\t\t\tusage1: '',\n\t\t\t\tgpuname1: '',\n\t\t\t\tgputem1: '',\n\t\t\t\tgpumem1: '',\n\t\t\t\tgputotalmem1: '',\n\t\t\t\tusage2: '',\n\t\t\t\tgpuname2: '',\n\t\t\t\tgputem2: '',\n\t\t\t\tgpumem2: '',\n\t\t\t\tgputotalmem2: '',\n\t\t\t},\n\t\t\ttest1: 60,\n\t\t\ttest2: 70,\n\t\t\ttest3: 90\n\t\t}\n\t}\n\n\thandleClick = e => {\n\t\t// console.log('click ', e);\n\t\tthis.setState({ num: e.key });\n\t  };\n\n\tgetdata() {\n\t\tlet list = ['5', '12', '13', '14', '15', '16']\n\t\tfor(let i = 0; i < 6; i++) {\n\t\t\td3.json('http://10.72.100.6:8889/'+list[i]).then(d=>{\n\t\t\t// console.log('num2:', d.gpu_usage1)\n\t\t\t// setTimeout(()=>{},2000)\n\t\t\tswitch(i) {\n\t\t\t\tcase 0:\n\t\t\t\t\t{\n\t\t\t\t\t// console.log(\"字符串的长度\",d.gpu_usage.length)\n\t\t\t\t\tif(d.gpu_usage.length==2){\n\t\t\t\t\t\td.gpu_usage = Number(d.gpu_usage[0])\n\t\t\t\t\t}else if(d.gpu_usage.length==3){\n\t\t\t\t\t\td.gpu_usage = Number(d.gpu_usage[0])*10+Number(d.gpu_usage[1])\n\t\t\t\t\t}else{\n\t\t\t\t\t\td.gpu_usage = Number(d.gpu_usage[0])*100+Number(d.gpu_usage[1])*10+Number(d.gpu_usage[2])\n\t\t\t\t\t}\n\t\t\t\t\t// console.log('之后的数值',d.gpu_usage)\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tgpumes5: {\n\t\t\t\t\t\t\tusage: d.gpu_usage,\n\t\t\t\t\t\t\tgpuname: d.gpu_name,\n\t\t\t\t\t\t\tgputem: d.gpu_tmp,\n\t\t\t\t\t\t\tgpumem: d.gpu_usedmem,\n\t\t\t\t\t\t\tgputotalmem: d.gpu_totmem,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// console.log(this.state)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcase 1:\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d.gpu_usage1.length==2){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])\n\t\t\t\t\t\t}else if(d.gpu_usage1.length==3){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*10+Number(d.gpu_usage1[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*100+Number(d.gpu_usage1[1])*10+Number(d.gpu_usage1[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d.gpu_usage2.length==2){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])\n\t\t\t\t\t\t}else if(d.gpu_usage2.length==3){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*10+Number(d.gpu_usage2[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*100+Number(d.gpu_usage2[1])*10+Number(d.gpu_usage2[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log('test',d.gpu_usage1)\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttime: d.time,\n\t\t\t\t\t\tgpumes12: {\n\t\t\t\t\t\t\tusage1: d.gpu_usage1,\n\t\t\t\t\t\t\tgpuname1: d.gpu_name1,\n\t\t\t\t\t\t\tgputem1: d.gpu_tmp1,\n\t\t\t\t\t\t\tgpumem1: d.gpu_usedmem1,\n\t\t\t\t\t\t\tgputotalmem1: d.gpu_totmem1,\n\t\t\t\t\t\t\tusage2: d.gpu_usage2,\n\t\t\t\t\t\t\tgpuname2: d.gpu_name2,\n\t\t\t\t\t\t\tgputem2: d.gpu_tmp2,\n\t\t\t\t\t\t\tgpumem2: d.gpu_usedmem2,\n\t\t\t\t\t\t\tgputotalmem2: d.gpu_totmem2,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;}\n\t\t\t\tcase 2:\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d.gpu_usage1.length==2){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])\n\t\t\t\t\t\t}else if(d.gpu_usage1.length==3){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*10+Number(d.gpu_usage1[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*100+Number(d.gpu_usage1[1])*10+Number(d.gpu_usage1[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d.gpu_usage2.length==2){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])\n\t\t\t\t\t\t}else if(d.gpu_usage2.length==3){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*10+Number(d.gpu_usage2[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*100+Number(d.gpu_usage2[1])*10+Number(d.gpu_usage2[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tgpumes13: {\n\t\t\t\t\t\t\tusage1: d.gpu_usage1,\n\t\t\t\t\t\t\tgpuname1: d.gpu_name1,\n\t\t\t\t\t\t\tgputem1: d.gpu_tmp1,\n\t\t\t\t\t\t\tgpumem1: d.gpu_usedmem1,\n\t\t\t\t\t\t\tgputotalmem1: d.gpu_totmem1,\n\t\t\t\t\t\t\tusage2: d.gpu_usage2,\n\t\t\t\t\t\t\tgpuname2: d.gpu_name2,\n\t\t\t\t\t\t\tgputem2: d.gpu_tmp2,\n\t\t\t\t\t\t\tgpumem2: d.gpu_usedmem2,\n\t\t\t\t\t\t\tgputotalmem2: d.gpu_totmem2,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;}\n\t\t\t\tcase 3:\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d.gpu_usage1.length==2){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])\n\t\t\t\t\t\t}else if(d.gpu_usage1.length==3){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*10+Number(d.gpu_usage1[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*100+Number(d.gpu_usage1[1])*10+Number(d.gpu_usage1[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d.gpu_usage2.length==2){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])\n\t\t\t\t\t\t}else if(d.gpu_usage2.length==3){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*10+Number(d.gpu_usage2[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*100+Number(d.gpu_usage2[1])*10+Number(d.gpu_usage2[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tgpumes14: {\n\t\t\t\t\t\t\tusage1: d.gpu_usage1,\n\t\t\t\t\t\t\tgpuname1: d.gpu_name1,\n\t\t\t\t\t\t\tgputem1: d.gpu_tmp1,\n\t\t\t\t\t\t\tgpumem1: d.gpu_usedmem1,\n\t\t\t\t\t\t\tgputotalmem1: d.gpu_totmem1,\n\t\t\t\t\t\t\tusage2: d.gpu_usage2,\n\t\t\t\t\t\t\tgpuname2: d.gpu_name2,\n\t\t\t\t\t\t\tgputem2: d.gpu_tmp2,\n\t\t\t\t\t\t\tgpumem2: d.gpu_usedmem2,\n\t\t\t\t\t\t\tgputotalmem2: d.gpu_totmem2,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;}\n\t\t\t\tcase 4:\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d.gpu_usage1.length==2){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])\n\t\t\t\t\t\t}else if(d.gpu_usage1.length==3){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*10+Number(d.gpu_usage1[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*100+Number(d.gpu_usage1[1])*10+Number(d.gpu_usage1[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d.gpu_usage2.length==2){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])\n\t\t\t\t\t\t}else if(d.gpu_usage2.length==3){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*10+Number(d.gpu_usage2[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*100+Number(d.gpu_usage2[1])*10+Number(d.gpu_usage2[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tgpumes15: {\n\t\t\t\t\t\t\tusage1: d.gpu_usage1,\n\t\t\t\t\t\t\tgpuname1: d.gpu_name1,\n\t\t\t\t\t\t\tgputem1: d.gpu_tmp1,\n\t\t\t\t\t\t\tgpumem1: d.gpu_usedmem1,\n\t\t\t\t\t\t\tgputotalmem1: d.gpu_totmem1,\n\t\t\t\t\t\t\tusage2: d.gpu_usage2,\n\t\t\t\t\t\t\tgpuname2: d.gpu_name2,\n\t\t\t\t\t\t\tgputem2: d.gpu_tmp2,\n\t\t\t\t\t\t\tgpumem2: d.gpu_usedmem2,\n\t\t\t\t\t\t\tgputotalmem2: d.gpu_totmem2,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;}\n\t\t\t\tcase 5:\n\t\t\t\t\t{\n\t\t\t\t\t\tif(d.gpu_usage1.length==2){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])\n\t\t\t\t\t\t}else if(d.gpu_usage1.length==3){\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*10+Number(d.gpu_usage1[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage1 = Number(d.gpu_usage1[0])*100+Number(d.gpu_usage1[1])*10+Number(d.gpu_usage1[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(d.gpu_usage2.length==2){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])\n\t\t\t\t\t\t}else if(d.gpu_usage2.length==3){\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*10+Number(d.gpu_usage2[1])\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\td.gpu_usage2 = Number(d.gpu_usage2[0])*100+Number(d.gpu_usage2[1])*10+Number(d.gpu_usage2[2])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tgpumes16: {\n\t\t\t\t\t\t\tusage1: d.gpu_usage1,\n\t\t\t\t\t\t\tgpuname1: d.gpu_name1,\n\t\t\t\t\t\t\tgputem1: d.gpu_tmp1,\n\t\t\t\t\t\t\tgpumem1: d.gpu_usedmem1,\n\t\t\t\t\t\t\tgputotalmem1: d.gpu_totmem1,\n\t\t\t\t\t\t\tusage2: d.gpu_usage2,\n\t\t\t\t\t\t\tgpuname2: d.gpu_name2,\n\t\t\t\t\t\t\tgputem2: d.gpu_tmp2,\n\t\t\t\t\t\t\tgpumem2: d.gpu_usedmem2,\n\t\t\t\t\t\t\tgputotalmem2: d.gpu_totmem2,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;}\n\t\t\t}\n\t\t\t\n\t\t})\n\t\tconsole.log(this.state)\n\t\t}\n\t}\n\n    componentDidMount() {\t\n\t\tthis.getdata()\n\t\t// this.timerID = setInterval(()=>{\n\t\t// \tlet m = this.state.num\n\t\t// \tthis.getdata();\n\n\t\t// \tthis.setState({num:'17'})\n\t\t// \tthis.setState({num:m})\n\t\t// \t}, 30000)\n\t}\n\n\thandleSwitch = () =>{\n\t\tswitch(this.state.num) {\n\t\t\tcase \"0\":           //    最近更新时间  6台机器的显卡占比    \n\t\t\t\treturn  (<div>  \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 总体平均占用 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '10%', left: '2.5%',width: '30%',height: '45%'}}><Panelchart name={5} data={this.state.gpumes5.usage*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '10%', left: '35%',width: '30%',height: '45%'}}><Panelchart name={12} data={this.state.gpumes12.usage1*0.5+this.state.gpumes12.usage2*0.5}/></div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '10%', left: '67.5%',width: '30%',height: '45%'}}><Panelchart name={13} data={this.state.gpumes13.usage1*0.5+this.state.gpumes13.usage2*0.5}/></div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '55%', left: '2.5%',width: '30%',height: '45%'}}><Panelchart name={14} data={this.state.gpumes14.usage1*0.5+this.state.gpumes14.usage2*0.5}/></div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '55%', left: '35%',width: '30%',height: '45%'}}><Panelchart name={15} data={this.state.gpumes15.usage1*0.5+this.state.gpumes15.usage2*0.5}/></div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '55%', left: '67.5%',width: '30%',height: '45%'}}><Panelchart name={16} data={this.state.gpumes16.usage1*0.5+this.state.gpumes16.usage2*0.5}/></div>\n\t\t\t\t\t\t</div>);      \n\t\t\tcase \"5\":\n\t\t\t\treturn (<div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 5号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 32% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 60% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU型号:{this.state.gpumes5.gpuname} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU温度:{this.state.gpumes5.gputem} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU显存使用:{this.state.gpumes5.gpumem+'/'+this.state.gpumes5.gputotalmem} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={5.0} data={this.state.gpumes5.usage*1.0}/></div> \n\t\t\t\t\t   </div>);\n\t\t\tcase \"12\":\n\t\t\t\treturn (<div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 12号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 5% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 17% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU1型号:{this.state.gpumes12.gpuname1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU1温度:{this.state.gpumes12.gputem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU1显存使用:{this.state.gpumes12.gpumem1+'/'+this.state.gpumes12.gputotalmem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={12.1} data={this.state.gpumes12.usage1*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '70%',width: '100%',height: '4%'}}> GPU2型号:{this.state.gpumes12.gpuname2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '70%',width: '100%',height: '4%'}}> GPU2温度:{this.state.gpumes12.gputem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '70%',width: '100%',height: '4%'}}> GPU2显存使用:{this.state.gpumes12.gpumem2+'/'+this.state.gpumes12.gputotalmem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '60%',width: '35%',height: '45%'}}><Panelchart name={12.2} data={this.state.gpumes12.usage2*1.0}/></div> \n\t\t\t\t\t   </div>);\n\t\t\tcase \"13\":\n\t\t\t\treturn (<div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 13号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 7% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 26% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU1型号:{this.state.gpumes13.gpuname1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU1温度:{this.state.gpumes13.gputem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU1显存使用:{this.state.gpumes13.gpumem1+'/'+this.state.gpumes13.gputotalmem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={13.1} data={this.state.gpumes13.usage1*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '70%',width: '100%',height: '4%'}}> GPU2型号:{this.state.gpumes13.gpuname2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '70%',width: '100%',height: '4%'}}> GPU2温度:{this.state.gpumes13.gputem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '70%',width: '100%',height: '4%'}}> GPU2显存使用:{this.state.gpumes13.gpumem2+'/'+this.state.gpumes13.gputotalmem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '60%',width: '35%',height: '45%'}}><Panelchart name={13.2} data={this.state.gpumes13.usage2*1.0}/></div> \n\t\t\t\t\t   </div>);\n\t\t\tcase \"14\":\n\t\t\t\treturn (<div>  \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 14号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 11% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 72% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU1型号:{this.state.gpumes14.gpuname1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU1温度:{this.state.gpumes14.gputem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU1显存使用:{this.state.gpumes14.gpumem1+'/'+this.state.gpumes14.gputotalmem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={14.1} data={this.state.gpumes14.usage1*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '70%',width: '100%',height: '4%'}}> GPU2型号:{this.state.gpumes14.gpuname2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '70%',width: '100%',height: '4%'}}> GPU2温度:{this.state.gpumes14.gputem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '70%',width: '100%',height: '4%'}}> GPU2显存使用:{this.state.gpumes14.gpumem2+'/'+this.state.gpumes14.gputotalmem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '60%',width: '35%',height: '45%'}}><Panelchart name={14.2} data={this.state.gpumes14.usage2*1.0}/></div>    \n\t\t\t\t\t</div>);\n\t\t\tcase \"15\":\n\t\t\t\treturn (<div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 15号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 32% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 42% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU1型号:{this.state.gpumes15.gpuname1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU1温度:{this.state.gpumes15.gputem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU1显存使用:{this.state.gpumes15.gpumem1+'/'+this.state.gpumes15.gputotalmem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={15.1} data={this.state.gpumes15.usage1*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '70%',width: '100%',height: '4%'}}> GPU2型号:{this.state.gpumes15.gpuname2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '70%',width: '100%',height: '4%'}}> GPU2温度:{this.state.gpumes15.gputem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '70%',width: '100%',height: '4%'}}> GPU2显存使用:{this.state.gpumes15.gpumem2+'/'+this.state.gpumes15.gputotalmem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '60%',width: '35%',height: '45%'}}><Panelchart name={15.2} data={this.state.gpumes15.usage2*1.0}/></div> \n\t\t\t\t\t</div>);\n\t\t\tcase \"16\":\n\t\t\t\treturn (<div>  \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '6%', left: '1%',width: '100%',height: '4%'}}> 16号机详情 </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '12%', left: '1%',width: '100%',height: '4%'}}> 最近更新时间:{this.state.time} </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '8%', left: '50%',width: '100%',height: '4%'}}> 内存占用： 8% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '14%', left: '50%',width: '100%',height: '4%'}}> 硬盘占用： 60% </div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '20%',width: '100%',height: '4%'}}> GPU1型号:{this.state.gpumes16.gpuname1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '20%',width: '100%',height: '4%'}}> GPU1温度:{this.state.gpumes16.gputem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '20%',width: '100%',height: '4%'}}> GPU1显存使用:{this.state.gpumes16.gpumem1+'/'+this.state.gpumes16.gputotalmem1} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '10%',width: '35%',height: '45%'}}><Panelchart name={16.1} data={this.state.gpumes16.usage1*1.0}/></div> \n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '60%', left: '70%',width: '100%',height: '4%'}}> GPU2型号:{this.state.gpumes16.gpuname2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '70%', left: '70%',width: '100%',height: '4%'}}> GPU2温度:{this.state.gpumes16.gputem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '80%', left: '70%',width: '100%',height: '4%'}}> GPU2显存使用:{this.state.gpumes16.gpumem2+'/'+this.state.gpumes16.gputotalmem2} </div>\n\t\t\t\t\t\t\t<div style={{position: 'absolute', top: '20%', left: '60%',width: '35%',height: '45%'}}><Panelchart name={16.2} data={this.state.gpumes16.usage2*1.0}/></div> \n\t\t\t\t\t   </div>);\n\t\t\tcase \"17\":\n\t\t\t\treturn <div> </div>;\t\t\t\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { current } = this.state;\n\t\t// console.log(this.state.gpumes12.usage1[0])\n\t\t// console.log(this.state.gpumes12.usage1[1])\n\t\t// this.timerID = setInterval(()=>this.getdata(), 100000)\n\t\treturn(\n\t\t\t<div style={{fontSize: '2em'}}>\n\t\t\t\t{/* <Menu style={{position: \"absolute\", top: '0%', left:'0%',height:'5%',width:'100%'}}onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\" >\n\t\t\t\t\t<Menu.Item key=\"0\" >\n\t\t\t\t\t\t总体概览\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"5\">\n\t\t\t\t\t\t5号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"12\">\n\t\t\t\t\t\t12号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"13\">\n\t\t\t\t\t\t13号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"14\">\n\t\t\t\t\t\t14号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"15\">\n\t\t\t\t\t\t15号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"16\">\n\t\t\t\t\t\t16号机详情\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Menu> */}\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '0', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"0\"});}}>\n\t\t\t\t\t总体占用概览\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '8%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"5\"});}}>\n\t\t\t\t\t5号机详情\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '16%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"12\"});}}>\n\t\t\t\t\t12号机详情\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '24%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"13\"});}}>\n\t\t\t\t\t13号机详情\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '32%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"14\"});}}>\n\t\t\t\t\t14号机详情\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '40%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"15\"});}}>\n\t\t\t\t\t15号机详情\n\t\t\t\t</Button>\n\t\t\t\t<Button style={{position: 'absolute', top: '0', left: '48%', height: '4%',width: '8%',color: 'black',backgroundColor: 'white'}}type=\"primary\" onClick={()=>{this.setState({num: \"17\"});this.setState({num: \"16\"});}}>\n\t\t\t\t\t16号机详情\n\t\t\t\t</Button>\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.handleSwitch()\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n","/home/zhiguangda/ITS/deckgl/src/components/gpu/panel.js",["517","518"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default class Panelchart extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\tname:\" \",\r\n\t\t}\r\n\t}\r\n    render() {\r\n        const {data} = this.props\r\n        return(\r\n            <div id={this.props.name} style={{position: 'absolute',left:'5%',top:'5%',width:'90%',height:'90%'}}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n      \tvar chartDom = document.getElementById(this.props.name);\r\n\t\tvar myChart = echarts.init(chartDom);\r\n\t\tvar option;\r\n\t\toption = {\r\n\t\t\ttooltip: {\r\n\t\t\t\tformatter: '{a} <br/>{b} : {c}%'\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\tname: 'Usage',\r\n\t\t\t\ttype: 'gauge',\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tmax: 100,\r\n\t\t\t\tprogress: {\r\n\t\t\t\t\tshow: true\r\n\t\t\t\t},\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tvalueAnimation: true,\r\n\t\t\t\t\tformatter: '{value}',\r\n\t\t\t\t},\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvalue: this.props.data,\r\n\t\t\t\t\tname: this.props.name + \"号机占用率\"\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t};\r\n\r\n\t\toption && myChart.setOption(option);\r\n    }\r\n}","/home/zhiguangda/ITS/deckgl/src/components/olmpic.js",["519","520"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 0.5;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <video src=\"./ol/1.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                    <video src=\"./ol/2.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/new/p1.js",["521","522","523"],"import React, {Component} from \"react\";\r\nimport  ReactDOM from \"react-dom\";\r\nfunction loadStyle(code){\r\n    var style = document.createElement('style');\r\n    style.appendChild(document.createTextNode(code));\r\n    var head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n}\r\nexport default class App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n    // 动态加载 css\r\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\r\n            '    li {\\n' +\r\n            '        list-style: none;\\n' +\r\n            '        float: left;\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 50%;\\n' +\r\n            '        margin: 0 ;\\n' +\r\n            '        overflow: hidden;/*超出隐藏*/\\n' +\r\n            '        font-size: 0;\\n' +\r\n            '\\n' +\r\n            '    }\\n' +\r\n            '    li img {\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden\\n' +\r\n            '    }\\n' +\r\n            '    li video{\\n' +\r\n            '        width: 100%;\\n' +\r\n            '        height: 100%;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '        object-fit: fill;\\n '  +\r\n            '    }\\n' +\r\n            '    ul{\\n' +\r\n            '        margin:0;padding:0;\\n' +\r\n            '        overflow-x:hidden;\\n' +\r\n            '    } '\r\n        loadStyle(code);\r\n        var speed = 1;//设置速度\r\n\r\n        var vdo = document.getElementsByTagName(\"video\");//获取id\r\n        vdo.playbackRate = speed;//改变速度\r\n    }\r\n\r\n    render() {\r\n\r\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\r\n                <li>\r\n                    <img src=\"./title.png\" ></img>\r\n                    <video src=\"./m1.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\r\n                </li>\r\n        </ul>\r\n\r\n    }\r\n\r\n}\r\n","/home/zhiguangda/ITS/deckgl/src/new/p3.js",["524","525"],"import React, {Component} from \"react\";\nimport  ReactDOM from \"react-dom\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    // 动态加载 css\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;\\n' +\n            '        height: 50%;\\n' +\n            '        margin: 0 ;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '        font-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden\\n' +\n            '    }\\n' +\n            '    li video{\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '        object-fit: fill;\\n '  +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '    } '\n        loadStyle(code);\n        var speed = 1;//设置速度\n\n        var vdo = document.getElementsByTagName(\"video\");//获取id\n        vdo.playbackRate = speed;//改变速度\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\n                <li>\n                    <video src=\"./m4.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                    <video src=\"./m5.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                </li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/new/p2.js",["526","527"],"import React, {Component} from \"react\";\nimport  ReactDOM from \"react-dom\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    // 动态加载 css\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;\\n' +\n            '        height: 50%;\\n' +\n            '        margin: 0 ;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '        font-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden\\n' +\n            '    }\\n' +\n            '    li video{\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '        object-fit: fill;\\n '  +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '    } '\n        loadStyle(code);\n        var speed = 1;//设置速度\n\n        var vdo = document.getElementsByTagName(\"video\");//获取id\n        vdo.playbackRate = speed;//改变速度\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\n                <li>\n                    <video src=\"./m2.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                    <video src=\"./m3.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                </li>\n        </ul>\n\n    }\n\n}\n","/home/zhiguangda/ITS/deckgl/src/new/p4.js",["528","529"],"/home/zhiguangda/ITS/deckgl/src/new/p5.js",["530","531"],"import React, {Component} from \"react\";\nimport  ReactDOM from \"react-dom\";\nfunction loadStyle(code){\n    var style = document.createElement('style');\n    style.appendChild(document.createTextNode(code));\n    var head = document.getElementsByTagName('head')[0];\n    head.appendChild(style);\n}\nexport default class App extends Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    // 动态加载 css\n        var code=' html,body{margin:0;padding:0;overflow-y:hidden;overflow-x:hidden}\\n' +\n            '    li {\\n' +\n            '        list-style: none;\\n' +\n            '        float: left;\\n' +\n            '        width: 100%;\\n' +\n            '        height: 50%;\\n' +\n            '        margin: 0 ;\\n' +\n            '        overflow: hidden;/*超出隐藏*/\\n' +\n            '        font-size: 0;\\n' +\n            '\\n' +\n            '    }\\n' +\n            '    li img {\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden\\n' +\n            '    }\\n' +\n            '    li video{\\n' +\n            '        width: 100%;\\n' +\n            '        height: 100%;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '        object-fit: fill;\\n '  +\n            '    }\\n' +\n            '    ul{\\n' +\n            '        margin:0;padding:0;\\n' +\n            '        overflow-x:hidden;\\n' +\n            '    } '\n        loadStyle(code);\n        var speed = 1;//设置速度\n\n        var vdo = document.getElementsByTagName(\"video\");//获取id\n        vdo.playbackRate = speed;//改变速度\n    }\n\n    render() {\n\n        return <ul style={{overflow:\"hidden\",clear:\"both\"}}>\n                <li>\n                    <video src=\"./m8.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                    <video src=\"./m9.mp4\" autoPlay muted=\"muted\" loop=\"loop\" id='video'></video>\n                </li>\n        </ul>\n\n    }\n\n}\n",{"ruleId":"532","severity":1,"message":"533","line":1,"column":15,"nodeType":"534","messageId":"535","endLine":1,"endColumn":23},{"ruleId":"532","severity":1,"message":"536","line":3,"column":43,"nodeType":"534","messageId":"535","endLine":3,"endColumn":49},{"ruleId":"532","severity":1,"message":"537","line":3,"column":50,"nodeType":"534","messageId":"535","endLine":3,"endColumn":54},{"ruleId":"532","severity":1,"message":"538","line":12,"column":8,"nodeType":"534","messageId":"535","endLine":12,"endColumn":17},{"ruleId":"539","replacedBy":"540"},{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","severity":1,"message":"544","line":12,"column":5,"nodeType":"545","messageId":"546","endLine":14,"endColumn":6},{"ruleId":"547","severity":1,"message":"548","line":43,"column":17,"nodeType":"549","endLine":43,"endColumn":54},{"ruleId":"547","severity":1,"message":"548","line":44,"column":17,"nodeType":"549","endLine":44,"endColumn":54},{"ruleId":"547","severity":1,"message":"548","line":45,"column":17,"nodeType":"549","endLine":45,"endColumn":54},{"ruleId":"547","severity":1,"message":"548","line":46,"column":17,"nodeType":"549","endLine":46,"endColumn":54},{"ruleId":"547","severity":1,"message":"548","line":47,"column":17,"nodeType":"549","endLine":47,"endColumn":54},{"ruleId":"547","severity":1,"message":"548","line":48,"column":17,"nodeType":"549","endLine":48,"endColumn":54},{"ruleId":"532","severity":1,"message":"550","line":59,"column":35,"nodeType":"534","messageId":"535","endLine":59,"endColumn":44},{"ruleId":"532","severity":1,"message":"551","line":62,"column":10,"nodeType":"534","messageId":"535","endLine":62,"endColumn":16},{"ruleId":"532","severity":1,"message":"552","line":62,"column":17,"nodeType":"534","messageId":"535","endLine":62,"endColumn":21},{"ruleId":"532","severity":1,"message":"553","line":67,"column":7,"nodeType":"534","messageId":"535","endLine":67,"endColumn":22},{"ruleId":"532","severity":1,"message":"554","line":78,"column":7,"nodeType":"534","messageId":"535","endLine":78,"endColumn":23},{"ruleId":"532","severity":1,"message":"555","line":95,"column":7,"nodeType":"534","messageId":"535","endLine":95,"endColumn":15},{"ruleId":"532","severity":1,"message":"556","line":111,"column":7,"nodeType":"534","messageId":"535","endLine":111,"endColumn":19},{"ruleId":"532","severity":1,"message":"557","line":230,"column":5,"nodeType":"534","messageId":"535","endLine":230,"endColumn":13},{"ruleId":"558","severity":1,"message":"559","line":562,"column":32,"nodeType":"560","messageId":"561","endLine":562,"endColumn":34},{"ruleId":"558","severity":1,"message":"559","line":562,"column":48,"nodeType":"560","messageId":"561","endLine":562,"endColumn":50},{"ruleId":"558","severity":1,"message":"562","line":575,"column":46,"nodeType":"560","messageId":"561","endLine":575,"endColumn":48},{"ruleId":"563","severity":1,"message":"564","line":692,"column":28,"nodeType":"565","messageId":"566","endLine":692,"endColumn":30},{"ruleId":"563","severity":1,"message":"564","line":703,"column":90,"nodeType":"565","messageId":"566","endLine":703,"endColumn":92},{"ruleId":"563","severity":1,"message":"564","line":726,"column":28,"nodeType":"565","messageId":"566","endLine":726,"endColumn":30},{"ruleId":"563","severity":1,"message":"564","line":737,"column":86,"nodeType":"565","messageId":"566","endLine":737,"endColumn":88},{"ruleId":"532","severity":1,"message":"567","line":756,"column":10,"nodeType":"534","messageId":"535","endLine":756,"endColumn":22},{"ruleId":"563","severity":1,"message":"564","line":758,"column":16,"nodeType":"565","messageId":"566","endLine":758,"endColumn":18},{"ruleId":"532","severity":1,"message":"568","line":778,"column":17,"nodeType":"534","messageId":"535","endLine":778,"endColumn":18},{"ruleId":"563","severity":1,"message":"564","line":779,"column":28,"nodeType":"565","messageId":"566","endLine":779,"endColumn":30},{"ruleId":"569","severity":1,"message":"570","line":892,"column":11,"nodeType":"571","messageId":"561","endLine":892,"endColumn":15,"fix":"572"},{"ruleId":"532","severity":1,"message":"573","line":1267,"column":13,"nodeType":"534","messageId":"535","endLine":1267,"endColumn":18},{"ruleId":"574","severity":1,"message":"575","line":18,"column":1,"nodeType":"576","endLine":29,"endColumn":3},{"ruleId":"532","severity":1,"message":"577","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":15},{"ruleId":"532","severity":1,"message":"578","line":13,"column":8,"nodeType":"534","messageId":"535","endLine":13,"endColumn":21},{"ruleId":"532","severity":1,"message":"579","line":55,"column":10,"nodeType":"534","messageId":"535","endLine":55,"endColumn":18},{"ruleId":"532","severity":1,"message":"580","line":103,"column":7,"nodeType":"534","messageId":"535","endLine":103,"endColumn":15},{"ruleId":"543","severity":1,"message":"544","line":9,"column":5,"nodeType":"545","messageId":"546","endLine":11,"endColumn":6},{"ruleId":"532","severity":1,"message":"581","line":3,"column":27,"nodeType":"534","messageId":"535","endLine":3,"endColumn":38},{"ruleId":"532","severity":1,"message":"582","line":3,"column":40,"nodeType":"534","messageId":"535","endLine":3,"endColumn":49},{"ruleId":"532","severity":1,"message":"533","line":3,"column":50,"nodeType":"534","messageId":"535","endLine":3,"endColumn":58},{"ruleId":"532","severity":1,"message":"583","line":4,"column":8,"nodeType":"534","messageId":"535","endLine":4,"endColumn":16},{"ruleId":"532","severity":1,"message":"584","line":7,"column":9,"nodeType":"534","messageId":"535","endLine":7,"endColumn":17},{"ruleId":"585","severity":1,"message":"586","line":87,"column":25,"nodeType":"587","endLine":87,"endColumn":48},{"ruleId":"532","severity":1,"message":"581","line":2,"column":27,"nodeType":"534","messageId":"535","endLine":2,"endColumn":38},{"ruleId":"532","severity":1,"message":"582","line":2,"column":40,"nodeType":"534","messageId":"535","endLine":2,"endColumn":49},{"ruleId":"532","severity":1,"message":"533","line":2,"column":50,"nodeType":"534","messageId":"535","endLine":2,"endColumn":58},{"ruleId":"532","severity":1,"message":"583","line":3,"column":8,"nodeType":"534","messageId":"535","endLine":3,"endColumn":16},{"ruleId":"532","severity":1,"message":"584","line":6,"column":9,"nodeType":"534","messageId":"535","endLine":6,"endColumn":17},{"ruleId":"585","severity":1,"message":"586","line":88,"column":25,"nodeType":"587","endLine":88,"endColumn":48},{"ruleId":"532","severity":1,"message":"581","line":1,"column":27,"nodeType":"534","messageId":"535","endLine":1,"endColumn":38},{"ruleId":"532","severity":1,"message":"582","line":1,"column":40,"nodeType":"534","messageId":"535","endLine":1,"endColumn":49},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"588","line":3,"column":10,"nodeType":"534","messageId":"535","endLine":3,"endColumn":13},{"ruleId":"532","severity":1,"message":"589","line":3,"column":42,"nodeType":"534","messageId":"535","endLine":3,"endColumn":45},{"ruleId":"532","severity":1,"message":"590","line":3,"column":55,"nodeType":"534","messageId":"535","endLine":3,"endColumn":61},{"ruleId":"532","severity":1,"message":"591","line":24,"column":10,"nodeType":"534","messageId":"535","endLine":24,"endColumn":17},{"ruleId":"563","severity":1,"message":"564","line":28,"column":28,"nodeType":"565","messageId":"566","endLine":28,"endColumn":30},{"ruleId":"563","severity":1,"message":"564","line":31,"column":34,"nodeType":"565","messageId":"566","endLine":31,"endColumn":36},{"ruleId":"563","severity":1,"message":"564","line":56,"column":32,"nodeType":"565","messageId":"566","endLine":56,"endColumn":34},{"ruleId":"563","severity":1,"message":"564","line":58,"column":38,"nodeType":"565","messageId":"566","endLine":58,"endColumn":40},{"ruleId":"585","severity":1,"message":"586","line":235,"column":29,"nodeType":"587","endLine":235,"endColumn":52},{"ruleId":"543","severity":1,"message":"544","line":12,"column":5,"nodeType":"545","messageId":"546","endLine":14,"endColumn":6},{"ruleId":"547","severity":1,"message":"548","line":49,"column":17,"nodeType":"549","endLine":49,"endColumn":61},{"ruleId":"532","severity":1,"message":"592","line":1,"column":16,"nodeType":"534","messageId":"535","endLine":1,"endColumn":25},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"551","line":4,"column":10,"nodeType":"534","messageId":"535","endLine":4,"endColumn":16},{"ruleId":"532","severity":1,"message":"552","line":4,"column":17,"nodeType":"534","messageId":"535","endLine":4,"endColumn":21},{"ruleId":"532","severity":1,"message":"593","line":5,"column":9,"nodeType":"534","messageId":"535","endLine":5,"endColumn":21},{"ruleId":"532","severity":1,"message":"594","line":5,"column":23,"nodeType":"534","messageId":"535","endLine":5,"endColumn":33},{"ruleId":"532","severity":1,"message":"595","line":5,"column":35,"nodeType":"534","messageId":"535","endLine":5,"endColumn":41},{"ruleId":"532","severity":1,"message":"596","line":6,"column":19,"nodeType":"534","messageId":"535","endLine":6,"endColumn":28},{"ruleId":"532","severity":1,"message":"597","line":7,"column":21,"nodeType":"534","messageId":"535","endLine":7,"endColumn":38},{"ruleId":"532","severity":1,"message":"598","line":17,"column":9,"nodeType":"534","messageId":"535","endLine":17,"endColumn":13},{"ruleId":"563","severity":1,"message":"564","line":39,"column":24,"nodeType":"565","messageId":"566","endLine":39,"endColumn":26},{"ruleId":"563","severity":1,"message":"564","line":54,"column":20,"nodeType":"565","messageId":"566","endLine":54,"endColumn":22},{"ruleId":"599","severity":1,"message":"600","line":185,"column":50,"nodeType":"560","messageId":"601","endLine":185,"endColumn":51},{"ruleId":"532","severity":1,"message":"602","line":253,"column":14,"nodeType":"534","messageId":"535","endLine":253,"endColumn":28},{"ruleId":"563","severity":1,"message":"564","line":255,"column":21,"nodeType":"565","messageId":"566","endLine":255,"endColumn":23},{"ruleId":"532","severity":1,"message":"603","line":2,"column":16,"nodeType":"534","messageId":"535","endLine":2,"endColumn":24},{"ruleId":"532","severity":1,"message":"581","line":2,"column":26,"nodeType":"534","messageId":"535","endLine":2,"endColumn":37},{"ruleId":"532","severity":1,"message":"582","line":2,"column":39,"nodeType":"534","messageId":"535","endLine":2,"endColumn":48},{"ruleId":"532","severity":1,"message":"533","line":2,"column":50,"nodeType":"534","messageId":"535","endLine":2,"endColumn":58},{"ruleId":"532","severity":1,"message":"604","line":19,"column":7,"nodeType":"534","messageId":"535","endLine":19,"endColumn":16},{"ruleId":"532","severity":1,"message":"605","line":22,"column":7,"nodeType":"534","messageId":"535","endLine":22,"endColumn":13},{"ruleId":"532","severity":1,"message":"606","line":48,"column":9,"nodeType":"534","messageId":"535","endLine":48,"endColumn":15},{"ruleId":"532","severity":1,"message":"607","line":49,"column":9,"nodeType":"534","messageId":"535","endLine":49,"endColumn":17},{"ruleId":"563","severity":1,"message":"564","line":55,"column":28,"nodeType":"565","messageId":"566","endLine":55,"endColumn":30},{"ruleId":"563","severity":1,"message":"564","line":87,"column":42,"nodeType":"565","messageId":"566","endLine":87,"endColumn":44},{"ruleId":"532","severity":1,"message":"608","line":97,"column":33,"nodeType":"534","messageId":"535","endLine":97,"endColumn":34},{"ruleId":"532","severity":1,"message":"609","line":136,"column":5,"nodeType":"534","messageId":"535","endLine":136,"endColumn":9},{"ruleId":"563","severity":1,"message":"564","line":163,"column":21,"nodeType":"565","messageId":"566","endLine":163,"endColumn":23},{"ruleId":"563","severity":1,"message":"564","line":165,"column":29,"nodeType":"565","messageId":"566","endLine":165,"endColumn":31},{"ruleId":"532","severity":1,"message":"610","line":202,"column":13,"nodeType":"534","messageId":"535","endLine":202,"endColumn":21},{"ruleId":"563","severity":1,"message":"564","line":279,"column":26,"nodeType":"565","messageId":"566","endLine":279,"endColumn":28},{"ruleId":"563","severity":1,"message":"564","line":280,"column":29,"nodeType":"565","messageId":"566","endLine":280,"endColumn":31},{"ruleId":"611","severity":1,"message":"612","line":348,"column":21,"nodeType":"613","endLine":348,"endColumn":31},{"ruleId":"585","severity":1,"message":"586","line":377,"column":30,"nodeType":"587","endLine":377,"endColumn":53},{"ruleId":"532","severity":1,"message":"614","line":6,"column":9,"nodeType":"534","messageId":"535","endLine":6,"endColumn":24},{"ruleId":"532","severity":1,"message":"615","line":6,"column":26,"nodeType":"534","messageId":"535","endLine":6,"endColumn":42},{"ruleId":"532","severity":1,"message":"616","line":6,"column":44,"nodeType":"534","messageId":"535","endLine":6,"endColumn":60},{"ruleId":"532","severity":1,"message":"617","line":6,"column":61,"nodeType":"534","messageId":"535","endLine":6,"endColumn":82},{"ruleId":"532","severity":1,"message":"618","line":23,"column":13,"nodeType":"534","messageId":"535","endLine":23,"endColumn":20},{"ruleId":"558","severity":1,"message":"562","line":84,"column":44,"nodeType":"560","messageId":"561","endLine":84,"endColumn":46},{"ruleId":"558","severity":1,"message":"562","line":86,"column":49,"nodeType":"560","messageId":"561","endLine":86,"endColumn":51},{"ruleId":"532","severity":1,"message":"577","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":15},{"ruleId":"532","severity":1,"message":"619","line":5,"column":9,"nodeType":"534","messageId":"535","endLine":5,"endColumn":25},{"ruleId":"532","severity":1,"message":"620","line":60,"column":7,"nodeType":"534","messageId":"535","endLine":60,"endColumn":17},{"ruleId":"532","severity":1,"message":"621","line":62,"column":7,"nodeType":"534","messageId":"535","endLine":62,"endColumn":17},{"ruleId":"622","severity":1,"message":"623","line":1,"column":11,"nodeType":"624","messageId":"625","endLine":1,"endColumn":32},{"ruleId":"622","severity":1,"message":"626","line":1,"column":34,"nodeType":"624","messageId":"625","endLine":1,"endColumn":54},{"ruleId":"532","severity":1,"message":"597","line":4,"column":21,"nodeType":"534","messageId":"535","endLine":4,"endColumn":38},{"ruleId":"532","severity":1,"message":"594","line":5,"column":9,"nodeType":"534","messageId":"535","endLine":5,"endColumn":19},{"ruleId":"532","severity":1,"message":"593","line":5,"column":21,"nodeType":"534","messageId":"535","endLine":5,"endColumn":33},{"ruleId":"532","severity":1,"message":"551","line":10,"column":10,"nodeType":"534","messageId":"535","endLine":10,"endColumn":16},{"ruleId":"532","severity":1,"message":"627","line":12,"column":7,"nodeType":"534","messageId":"535","endLine":12,"endColumn":13},{"ruleId":"532","severity":1,"message":"553","line":14,"column":7,"nodeType":"534","messageId":"535","endLine":14,"endColumn":22},{"ruleId":"558","severity":1,"message":"562","line":99,"column":23,"nodeType":"560","messageId":"561","endLine":99,"endColumn":25},{"ruleId":"558","severity":1,"message":"562","line":101,"column":21,"nodeType":"560","messageId":"561","endLine":101,"endColumn":23},{"ruleId":"532","severity":1,"message":"628","line":1,"column":8,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"532","severity":1,"message":"628","line":1,"column":8,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"563","severity":1,"message":"564","line":23,"column":28,"nodeType":"565","messageId":"566","endLine":23,"endColumn":30},{"ruleId":"563","severity":1,"message":"564","line":35,"column":34,"nodeType":"565","messageId":"566","endLine":35,"endColumn":36},{"ruleId":"563","severity":1,"message":"564","line":66,"column":32,"nodeType":"565","messageId":"566","endLine":66,"endColumn":34},{"ruleId":"563","severity":1,"message":"564","line":68,"column":38,"nodeType":"565","messageId":"566","endLine":68,"endColumn":40},{"ruleId":"532","severity":1,"message":"628","line":1,"column":8,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"532","severity":1,"message":"629","line":38,"column":9,"nodeType":"534","messageId":"535","endLine":38,"endColumn":13},{"ruleId":"563","severity":1,"message":"564","line":114,"column":22,"nodeType":"565","messageId":"566","endLine":114,"endColumn":24},{"ruleId":"563","severity":1,"message":"564","line":115,"column":28,"nodeType":"565","messageId":"566","endLine":115,"endColumn":30},{"ruleId":"532","severity":1,"message":"630","line":127,"column":15,"nodeType":"534","messageId":"535","endLine":127,"endColumn":20},{"ruleId":"532","severity":1,"message":"631","line":160,"column":17,"nodeType":"534","messageId":"535","endLine":160,"endColumn":18},{"ruleId":"532","severity":1,"message":"628","line":1,"column":8,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"532","severity":1,"message":"632","line":2,"column":17,"nodeType":"534","messageId":"535","endLine":2,"endColumn":23},{"ruleId":"532","severity":1,"message":"633","line":4,"column":5,"nodeType":"534","messageId":"535","endLine":4,"endColumn":23},{"ruleId":"532","severity":1,"message":"634","line":5,"column":5,"nodeType":"534","messageId":"535","endLine":5,"endColumn":21},{"ruleId":"558","severity":1,"message":"562","line":82,"column":40,"nodeType":"560","messageId":"561","endLine":82,"endColumn":42},{"ruleId":"558","severity":1,"message":"562","line":87,"column":44,"nodeType":"560","messageId":"561","endLine":87,"endColumn":46},{"ruleId":"539","replacedBy":"635"},{"ruleId":"541","replacedBy":"636"},{"ruleId":"547","severity":1,"message":"548","line":46,"column":13,"nodeType":"549","endLine":46,"endColumn":42},{"ruleId":"532","severity":1,"message":"637","line":1,"column":10,"nodeType":"534","messageId":"535","endLine":1,"endColumn":13},{"ruleId":"532","severity":1,"message":"533","line":4,"column":15,"nodeType":"534","messageId":"535","endLine":4,"endColumn":23},{"ruleId":"539","replacedBy":"638"},{"ruleId":"541","replacedBy":"639"},{"ruleId":"532","severity":1,"message":"533","line":3,"column":15,"nodeType":"534","messageId":"535","endLine":3,"endColumn":23},{"ruleId":"532","severity":1,"message":"640","line":14,"column":7,"nodeType":"534","messageId":"535","endLine":14,"endColumn":12},{"ruleId":"622","severity":1,"message":"623","line":1,"column":11,"nodeType":"624","messageId":"625","endLine":1,"endColumn":32},{"ruleId":"622","severity":1,"message":"626","line":1,"column":34,"nodeType":"624","messageId":"625","endLine":1,"endColumn":54},{"ruleId":"532","severity":1,"message":"641","line":13,"column":7,"nodeType":"534","messageId":"535","endLine":13,"endColumn":22},{"ruleId":"558","severity":1,"message":"562","line":106,"column":23,"nodeType":"560","messageId":"561","endLine":106,"endColumn":25},{"ruleId":"558","severity":1,"message":"562","line":17,"column":23,"nodeType":"560","messageId":"561","endLine":17,"endColumn":25},{"ruleId":"558","severity":1,"message":"562","line":86,"column":27,"nodeType":"560","messageId":"561","endLine":86,"endColumn":29},{"ruleId":"543","severity":1,"message":"544","line":12,"column":5,"nodeType":"545","messageId":"546","endLine":14,"endColumn":6},{"ruleId":"547","severity":1,"message":"548","line":43,"column":17,"nodeType":"549","endLine":43,"endColumn":58},{"ruleId":"532","severity":1,"message":"592","line":1,"column":16,"nodeType":"534","messageId":"535","endLine":1,"endColumn":25},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"642","line":3,"column":32,"nodeType":"534","messageId":"535","endLine":3,"endColumn":37},{"ruleId":"563","severity":1,"message":"564","line":23,"column":24,"nodeType":"565","messageId":"566","endLine":23,"endColumn":26},{"ruleId":"563","severity":1,"message":"564","line":37,"column":20,"nodeType":"565","messageId":"566","endLine":37,"endColumn":22},{"ruleId":"599","severity":1,"message":"600","line":146,"column":50,"nodeType":"560","messageId":"601","endLine":146,"endColumn":51},{"ruleId":"563","severity":1,"message":"643","line":246,"column":59,"nodeType":"565","messageId":"644","endLine":246,"endColumn":61},{"ruleId":"563","severity":1,"message":"643","line":272,"column":59,"nodeType":"565","messageId":"644","endLine":272,"endColumn":61},{"ruleId":"563","severity":1,"message":"643","line":298,"column":59,"nodeType":"565","messageId":"644","endLine":298,"endColumn":61},{"ruleId":"563","severity":1,"message":"643","line":324,"column":59,"nodeType":"565","messageId":"644","endLine":324,"endColumn":61},{"ruleId":"532","severity":1,"message":"592","line":1,"column":16,"nodeType":"534","messageId":"535","endLine":1,"endColumn":25},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"645","line":3,"column":13,"nodeType":"534","messageId":"535","endLine":3,"endColumn":15},{"ruleId":"532","severity":1,"message":"646","line":6,"column":8,"nodeType":"534","messageId":"535","endLine":6,"endColumn":12},{"ruleId":"532","severity":1,"message":"647","line":8,"column":8,"nodeType":"534","messageId":"535","endLine":8,"endColumn":20},{"ruleId":"532","severity":1,"message":"648","line":9,"column":8,"nodeType":"534","messageId":"535","endLine":9,"endColumn":22},{"ruleId":"532","severity":1,"message":"649","line":10,"column":8,"nodeType":"534","messageId":"535","endLine":10,"endColumn":20},{"ruleId":"532","severity":1,"message":"650","line":20,"column":8,"nodeType":"534","messageId":"535","endLine":20,"endColumn":20},{"ruleId":"532","severity":1,"message":"651","line":21,"column":5,"nodeType":"534","messageId":"535","endLine":21,"endColumn":8},{"ruleId":"532","severity":1,"message":"652","line":22,"column":5,"nodeType":"534","messageId":"535","endLine":22,"endColumn":7},{"ruleId":"532","severity":1,"message":"653","line":35,"column":5,"nodeType":"534","messageId":"535","endLine":35,"endColumn":11},{"ruleId":"532","severity":1,"message":"654","line":104,"column":11,"nodeType":"534","messageId":"535","endLine":104,"endColumn":18},{"ruleId":"532","severity":1,"message":"655","line":105,"column":12,"nodeType":"534","messageId":"535","endLine":105,"endColumn":20},{"ruleId":"532","severity":1,"message":"656","line":105,"column":21,"nodeType":"534","messageId":"535","endLine":105,"endColumn":26},{"ruleId":"532","severity":1,"message":"651","line":107,"column":12,"nodeType":"534","messageId":"535","endLine":107,"endColumn":15},{"ruleId":"532","severity":1,"message":"657","line":107,"column":17,"nodeType":"534","messageId":"535","endLine":107,"endColumn":23},{"ruleId":"547","severity":1,"message":"548","line":241,"column":21,"nodeType":"549","endLine":241,"endColumn":124},{"ruleId":"547","severity":1,"message":"548","line":262,"column":21,"nodeType":"549","endLine":262,"endColumn":127},{"ruleId":"547","severity":1,"message":"548","line":283,"column":21,"nodeType":"549","endLine":283,"endColumn":125},{"ruleId":"547","severity":1,"message":"548","line":304,"column":21,"nodeType":"549","endLine":304,"endColumn":128},{"ruleId":"547","severity":1,"message":"548","line":325,"column":21,"nodeType":"549","endLine":325,"endColumn":129},{"ruleId":"547","severity":1,"message":"548","line":346,"column":21,"nodeType":"549","endLine":346,"endColumn":127},{"ruleId":"547","severity":1,"message":"548","line":383,"column":21,"nodeType":"549","endLine":383,"endColumn":129},{"ruleId":"547","severity":1,"message":"548","line":404,"column":21,"nodeType":"549","endLine":404,"endColumn":124},{"ruleId":"547","severity":1,"message":"548","line":425,"column":21,"nodeType":"549","endLine":425,"endColumn":132},{"ruleId":"547","severity":1,"message":"548","line":445,"column":21,"nodeType":"549","endLine":445,"endColumn":131},{"ruleId":"547","severity":1,"message":"548","line":465,"column":21,"nodeType":"549","endLine":465,"endColumn":128},{"ruleId":"532","severity":1,"message":"646","line":4,"column":8,"nodeType":"534","messageId":"535","endLine":4,"endColumn":12},{"ruleId":"532","severity":1,"message":"658","line":7,"column":8,"nodeType":"534","messageId":"535","endLine":7,"endColumn":12},{"ruleId":"532","severity":1,"message":"659","line":8,"column":8,"nodeType":"534","messageId":"535","endLine":8,"endColumn":19},{"ruleId":"532","severity":1,"message":"660","line":9,"column":8,"nodeType":"534","messageId":"535","endLine":9,"endColumn":19},{"ruleId":"532","severity":1,"message":"661","line":10,"column":8,"nodeType":"534","messageId":"535","endLine":10,"endColumn":28},{"ruleId":"532","severity":1,"message":"662","line":11,"column":8,"nodeType":"534","messageId":"535","endLine":11,"endColumn":18},{"ruleId":"532","severity":1,"message":"663","line":12,"column":8,"nodeType":"534","messageId":"535","endLine":12,"endColumn":29},{"ruleId":"532","severity":1,"message":"664","line":13,"column":8,"nodeType":"534","messageId":"535","endLine":13,"endColumn":30},{"ruleId":"532","severity":1,"message":"647","line":14,"column":8,"nodeType":"534","messageId":"535","endLine":14,"endColumn":20},{"ruleId":"532","severity":1,"message":"665","line":15,"column":8,"nodeType":"534","messageId":"535","endLine":15,"endColumn":21},{"ruleId":"532","severity":1,"message":"666","line":17,"column":8,"nodeType":"534","messageId":"535","endLine":17,"endColumn":18},{"ruleId":"532","severity":1,"message":"667","line":18,"column":10,"nodeType":"534","messageId":"535","endLine":18,"endColumn":14},{"ruleId":"532","severity":1,"message":"668","line":19,"column":8,"nodeType":"534","messageId":"535","endLine":19,"endColumn":18},{"ruleId":"532","severity":1,"message":"551","line":20,"column":8,"nodeType":"534","messageId":"535","endLine":20,"endColumn":14},{"ruleId":"532","severity":1,"message":"669","line":21,"column":8,"nodeType":"534","messageId":"535","endLine":21,"endColumn":16},{"ruleId":"532","severity":1,"message":"670","line":260,"column":14,"nodeType":"534","messageId":"535","endLine":260,"endColumn":27},{"ruleId":"547","severity":1,"message":"548","line":416,"column":17,"nodeType":"549","endLine":416,"endColumn":118},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"558","severity":1,"message":"562","line":14,"column":24,"nodeType":"560","messageId":"561","endLine":14,"endColumn":26},{"ruleId":"558","severity":1,"message":"562","line":26,"column":26,"nodeType":"560","messageId":"561","endLine":26,"endColumn":28},{"ruleId":"558","severity":1,"message":"562","line":26,"column":47,"nodeType":"560","messageId":"561","endLine":26,"endColumn":49},{"ruleId":"547","severity":1,"message":"548","line":37,"column":11,"nodeType":"549","endLine":37,"endColumn":158},{"ruleId":"558","severity":1,"message":"562","line":47,"column":24,"nodeType":"560","messageId":"561","endLine":47,"endColumn":26},{"ruleId":"558","severity":1,"message":"562","line":59,"column":26,"nodeType":"560","messageId":"561","endLine":59,"endColumn":28},{"ruleId":"558","severity":1,"message":"562","line":59,"column":47,"nodeType":"560","messageId":"561","endLine":59,"endColumn":49},{"ruleId":"547","severity":1,"message":"548","line":68,"column":9,"nodeType":"549","endLine":68,"endColumn":68},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"671","line":3,"column":13,"nodeType":"534","messageId":"535","endLine":3,"endColumn":20},{"ruleId":"532","severity":1,"message":"672","line":5,"column":10,"nodeType":"534","messageId":"535","endLine":5,"endColumn":14},{"ruleId":"673","severity":1,"message":"674","line":102,"column":4,"nodeType":"675","messageId":"676","endLine":283,"endColumn":5},{"ruleId":"558","severity":1,"message":"562","line":106,"column":27,"nodeType":"560","messageId":"561","endLine":106,"endColumn":29},{"ruleId":"558","severity":1,"message":"562","line":108,"column":33,"nodeType":"560","messageId":"561","endLine":108,"endColumn":35},{"ruleId":"558","severity":1,"message":"562","line":128,"column":29,"nodeType":"560","messageId":"561","endLine":128,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":130,"column":35,"nodeType":"560","messageId":"561","endLine":130,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":135,"column":29,"nodeType":"560","messageId":"561","endLine":135,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":137,"column":35,"nodeType":"560","messageId":"561","endLine":137,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":161,"column":29,"nodeType":"560","messageId":"561","endLine":161,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":163,"column":35,"nodeType":"560","messageId":"561","endLine":163,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":168,"column":29,"nodeType":"560","messageId":"561","endLine":168,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":170,"column":35,"nodeType":"560","messageId":"561","endLine":170,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":192,"column":29,"nodeType":"560","messageId":"561","endLine":192,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":194,"column":35,"nodeType":"560","messageId":"561","endLine":194,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":199,"column":29,"nodeType":"560","messageId":"561","endLine":199,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":201,"column":35,"nodeType":"560","messageId":"561","endLine":201,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":223,"column":29,"nodeType":"560","messageId":"561","endLine":223,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":225,"column":35,"nodeType":"560","messageId":"561","endLine":225,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":230,"column":29,"nodeType":"560","messageId":"561","endLine":230,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":232,"column":35,"nodeType":"560","messageId":"561","endLine":232,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":254,"column":29,"nodeType":"560","messageId":"561","endLine":254,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":256,"column":35,"nodeType":"560","messageId":"561","endLine":256,"endColumn":37},{"ruleId":"558","severity":1,"message":"562","line":261,"column":29,"nodeType":"560","messageId":"561","endLine":261,"endColumn":31},{"ruleId":"558","severity":1,"message":"562","line":263,"column":35,"nodeType":"560","messageId":"561","endLine":263,"endColumn":37},{"ruleId":"673","severity":1,"message":"674","line":302,"column":3,"nodeType":"675","messageId":"676","endLine":402,"endColumn":4},{"ruleId":"532","severity":1,"message":"618","line":406,"column":11,"nodeType":"534","messageId":"535","endLine":406,"endColumn":18},{"ruleId":"532","severity":1,"message":"583","line":2,"column":8,"nodeType":"534","messageId":"535","endLine":2,"endColumn":16},{"ruleId":"532","severity":1,"message":"677","line":13,"column":16,"nodeType":"534","messageId":"535","endLine":13,"endColumn":20},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"547","severity":1,"message":"548","line":52,"column":21,"nodeType":"549","endLine":52,"endColumn":45},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},{"ruleId":"532","severity":1,"message":"583","line":2,"column":9,"nodeType":"534","messageId":"535","endLine":2,"endColumn":17},{"ruleId":"543","severity":1,"message":"544","line":10,"column":5,"nodeType":"545","messageId":"546","endLine":12,"endColumn":6},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Link' is defined but never used.","'LineChart' is defined but never used.","no-native-reassign",["678"],"no-negated-in-lhs",["679"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IconLayer' is defined but never used.","'Select' is defined but never used.","'SIZE' is defined but never used.","'SelectContainer' is assigned a value but never used.","'SelectContainer2' is assigned a value but never used.","'DATA_URL' is assigned a value but never used.","'ICON_MAPPING' is assigned a value but never used.","'saveJson' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getBlockData' is defined but never used.","'m' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"680","text":"681"},"'theme' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","'SliderTraffic' is defined but never used.","'download' is defined but never used.","'material' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'AxisLeft' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'csv' is defined but never used.","'max' is defined but never used.","'extent' is defined but never used.","'getData' is defined but never used.","'Component' is defined but never used.","'BaseProvider' is defined but never used.","'LightTheme' is defined but never used.","'styled' is defined but never used.","'Styletron' is defined but never used.","'StyletronProvider' is defined but never used.","'text' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'adjustAllvideo' is defined but never used.","'useState' is defined but never used.","'totalTime' is assigned a value but never used.","'yScale' is assigned a value but never used.","'sorted' is assigned a value but never used.","'dataFlow' is assigned a value but never used.","'t' is assigned a value but never used.","'last' is assigned a value but never used.","'testData' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'SettingOutlined' is defined but never used.","'CalendarOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'RadiusSettingOutlined' is defined but never used.","'current' is assigned a value but never used.","'ScatterplotLayer' is defined but never used.","'MS_PER_DAY' is assigned a value but never used.","'dataFilter' is assigned a value but never used.","no-redeclare","'requestAnimationFrame' is already defined as a built-in global variable.","Block","redeclaredAsBuiltin","'cancelAnimationFrame' is already defined as a built-in global variable.","'engine' is assigned a value but never used.","'React' is defined but never used.","'area' is assigned a value but never used.","'group' is assigned a value but never used.","'g' is assigned a value but never used.","'Button' is defined but never used.","'MenuUnfoldOutlined' is defined but never used.","'MenuFoldOutlined' is defined but never used.",["678"],["679"],"'Bar' is defined but never used.",["678"],["679"],"'marks' is assigned a value but never used.","'ButtonContainer' is assigned a value but never used.","'Input' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'d3' is defined but never used.","'Icon' is defined but never used.","'VideocamIcon' is defined but never used.","'VolumeDownIcon' is defined but never used.","'VolumeUpIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'con' is assigned a value but never used.","'ip' is assigned a value but never used.","'device' is assigned a value but never used.","'classes' is assigned a value but never used.","'deviceID' is assigned a value but never used.","'setID' is assigned a value but never used.","'setcon' is assigned a value but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'PlayCircleFilledIcon' is defined but never used.","'Typography' is defined but never used.","'KeyboardArrowLeftIcon' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'BorderAllIcon' is defined but never used.","'IconButton' is defined but never used.","'time' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'updateService' is defined but never used.","'echarts' is defined but never used.","'Menu' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[33226,33237],""]